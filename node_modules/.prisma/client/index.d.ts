
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Curso
 * 
 */
export type Curso = $Result.DefaultSelection<Prisma.$CursoPayload>
/**
 * Model Sancion
 * 
 */
export type Sancion = $Result.DefaultSelection<Prisma.$SancionPayload>
/**
 * Model Seccion
 * 
 */
export type Seccion = $Result.DefaultSelection<Prisma.$SeccionPayload>
/**
 * Model Trabajador
 * 
 */
export type Trabajador = $Result.DefaultSelection<Prisma.$TrabajadorPayload>
/**
 * Model Auditoria
 * 
 */
export type Auditoria = $Result.DefaultSelection<Prisma.$AuditoriaPayload>
/**
 * Model CambioAdscripcion
 * 
 */
export type CambioAdscripcion = $Result.DefaultSelection<Prisma.$CambioAdscripcionPayload>
/**
 * Model CursoSnti
 * 
 */
export type CursoSnti = $Result.DefaultSelection<Prisma.$CursoSntiPayload>
/**
 * Model Documento
 * 
 */
export type Documento = $Result.DefaultSelection<Prisma.$DocumentoPayload>
/**
 * Model Hijo
 * 
 */
export type Hijo = $Result.DefaultSelection<Prisma.$HijoPayload>
/**
 * Model Permiso
 * 
 */
export type Permiso = $Result.DefaultSelection<Prisma.$PermisoPayload>
/**
 * Model SancionSnti
 * 
 */
export type SancionSnti = $Result.DefaultSelection<Prisma.$SancionSntiPayload>
/**
 * Model SeccionSnti
 * 
 */
export type SeccionSnti = $Result.DefaultSelection<Prisma.$SeccionSntiPayload>
/**
 * Model TrabajadorSnti
 * 
 */
export type TrabajadorSnti = $Result.DefaultSelection<Prisma.$TrabajadorSntiPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const SexoDomain: {
  Masculino: 'Masculino',
  Femenino: 'Femenino',
  Otro: 'Otro'
};

export type SexoDomain = (typeof SexoDomain)[keyof typeof SexoDomain]


export const SituacionSentimentalDomain: {
  Soltero: 'Soltero',
  Casado: 'Casado',
  Divorciado: 'Divorciado',
  UnionLibre: 'UnionLibre',
  Viudo: 'Viudo'
};

export type SituacionSentimentalDomain = (typeof SituacionSentimentalDomain)[keyof typeof SituacionSentimentalDomain]


export const CursoStatusDomain: {
  EnCurso: 'EnCurso',
  Completado: 'Completado',
  Cancelado: 'Cancelado',
  Pendiente: 'Pendiente'
};

export type CursoStatusDomain = (typeof CursoStatusDomain)[keyof typeof CursoStatusDomain]


export const RolUsuario: {
  Administrador: 'Administrador',
  Supervisor: 'Supervisor',
  Empleado: 'Empleado'
};

export type RolUsuario = (typeof RolUsuario)[keyof typeof RolUsuario]

}

export type SexoDomain = $Enums.SexoDomain

export const SexoDomain: typeof $Enums.SexoDomain

export type SituacionSentimentalDomain = $Enums.SituacionSentimentalDomain

export const SituacionSentimentalDomain: typeof $Enums.SituacionSentimentalDomain

export type CursoStatusDomain = $Enums.CursoStatusDomain

export const CursoStatusDomain: typeof $Enums.CursoStatusDomain

export type RolUsuario = $Enums.RolUsuario

export const RolUsuario: typeof $Enums.RolUsuario

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cursos
 * const cursos = await prisma.curso.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cursos
   * const cursos = await prisma.curso.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.curso`: Exposes CRUD operations for the **Curso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cursos
    * const cursos = await prisma.curso.findMany()
    * ```
    */
  get curso(): Prisma.CursoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sancion`: Exposes CRUD operations for the **Sancion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sancions
    * const sancions = await prisma.sancion.findMany()
    * ```
    */
  get sancion(): Prisma.SancionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seccion`: Exposes CRUD operations for the **Seccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Seccions
    * const seccions = await prisma.seccion.findMany()
    * ```
    */
  get seccion(): Prisma.SeccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.trabajador`: Exposes CRUD operations for the **Trabajador** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trabajadors
    * const trabajadors = await prisma.trabajador.findMany()
    * ```
    */
  get trabajador(): Prisma.TrabajadorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auditoria`: Exposes CRUD operations for the **Auditoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auditorias
    * const auditorias = await prisma.auditoria.findMany()
    * ```
    */
  get auditoria(): Prisma.AuditoriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cambioAdscripcion`: Exposes CRUD operations for the **CambioAdscripcion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CambioAdscripcions
    * const cambioAdscripcions = await prisma.cambioAdscripcion.findMany()
    * ```
    */
  get cambioAdscripcion(): Prisma.CambioAdscripcionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cursoSnti`: Exposes CRUD operations for the **CursoSnti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CursoSntis
    * const cursoSntis = await prisma.cursoSnti.findMany()
    * ```
    */
  get cursoSnti(): Prisma.CursoSntiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.documento`: Exposes CRUD operations for the **Documento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documentos
    * const documentos = await prisma.documento.findMany()
    * ```
    */
  get documento(): Prisma.DocumentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.hijo`: Exposes CRUD operations for the **Hijo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Hijos
    * const hijos = await prisma.hijo.findMany()
    * ```
    */
  get hijo(): Prisma.HijoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permiso`: Exposes CRUD operations for the **Permiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permiso.findMany()
    * ```
    */
  get permiso(): Prisma.PermisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sancionSnti`: Exposes CRUD operations for the **SancionSnti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SancionSntis
    * const sancionSntis = await prisma.sancionSnti.findMany()
    * ```
    */
  get sancionSnti(): Prisma.SancionSntiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seccionSnti`: Exposes CRUD operations for the **SeccionSnti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SeccionSntis
    * const seccionSntis = await prisma.seccionSnti.findMany()
    * ```
    */
  get seccionSnti(): Prisma.SeccionSntiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.trabajadorSnti`: Exposes CRUD operations for the **TrabajadorSnti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TrabajadorSntis
    * const trabajadorSntis = await prisma.trabajadorSnti.findMany()
    * ```
    */
  get trabajadorSnti(): Prisma.TrabajadorSntiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Curso: 'Curso',
    Sancion: 'Sancion',
    Seccion: 'Seccion',
    Trabajador: 'Trabajador',
    Auditoria: 'Auditoria',
    CambioAdscripcion: 'CambioAdscripcion',
    CursoSnti: 'CursoSnti',
    Documento: 'Documento',
    Hijo: 'Hijo',
    Permiso: 'Permiso',
    SancionSnti: 'SancionSnti',
    SeccionSnti: 'SeccionSnti',
    TrabajadorSnti: 'TrabajadorSnti',
    Usuario: 'Usuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "curso" | "sancion" | "seccion" | "trabajador" | "auditoria" | "cambioAdscripcion" | "cursoSnti" | "documento" | "hijo" | "permiso" | "sancionSnti" | "seccionSnti" | "trabajadorSnti" | "usuario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Curso: {
        payload: Prisma.$CursoPayload<ExtArgs>
        fields: Prisma.CursoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findFirst: {
            args: Prisma.CursoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findMany: {
            args: Prisma.CursoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          create: {
            args: Prisma.CursoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          createMany: {
            args: Prisma.CursoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CursoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          delete: {
            args: Prisma.CursoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          update: {
            args: Prisma.CursoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          deleteMany: {
            args: Prisma.CursoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CursoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CursoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          upsert: {
            args: Prisma.CursoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          aggregate: {
            args: Prisma.CursoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCurso>
          }
          groupBy: {
            args: Prisma.CursoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CursoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoCountArgs<ExtArgs>
            result: $Utils.Optional<CursoCountAggregateOutputType> | number
          }
        }
      }
      Sancion: {
        payload: Prisma.$SancionPayload<ExtArgs>
        fields: Prisma.SancionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SancionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SancionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>
          }
          findFirst: {
            args: Prisma.SancionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SancionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>
          }
          findMany: {
            args: Prisma.SancionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>[]
          }
          create: {
            args: Prisma.SancionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>
          }
          createMany: {
            args: Prisma.SancionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SancionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>[]
          }
          delete: {
            args: Prisma.SancionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>
          }
          update: {
            args: Prisma.SancionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>
          }
          deleteMany: {
            args: Prisma.SancionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SancionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SancionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>[]
          }
          upsert: {
            args: Prisma.SancionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionPayload>
          }
          aggregate: {
            args: Prisma.SancionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSancion>
          }
          groupBy: {
            args: Prisma.SancionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SancionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SancionCountArgs<ExtArgs>
            result: $Utils.Optional<SancionCountAggregateOutputType> | number
          }
        }
      }
      Seccion: {
        payload: Prisma.$SeccionPayload<ExtArgs>
        fields: Prisma.SeccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>
          }
          findFirst: {
            args: Prisma.SeccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>
          }
          findMany: {
            args: Prisma.SeccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>[]
          }
          create: {
            args: Prisma.SeccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>
          }
          createMany: {
            args: Prisma.SeccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>[]
          }
          delete: {
            args: Prisma.SeccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>
          }
          update: {
            args: Prisma.SeccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>
          }
          deleteMany: {
            args: Prisma.SeccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>[]
          }
          upsert: {
            args: Prisma.SeccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionPayload>
          }
          aggregate: {
            args: Prisma.SeccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeccion>
          }
          groupBy: {
            args: Prisma.SeccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeccionCountArgs<ExtArgs>
            result: $Utils.Optional<SeccionCountAggregateOutputType> | number
          }
        }
      }
      Trabajador: {
        payload: Prisma.$TrabajadorPayload<ExtArgs>
        fields: Prisma.TrabajadorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TrabajadorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TrabajadorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>
          }
          findFirst: {
            args: Prisma.TrabajadorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TrabajadorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>
          }
          findMany: {
            args: Prisma.TrabajadorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>[]
          }
          create: {
            args: Prisma.TrabajadorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>
          }
          createMany: {
            args: Prisma.TrabajadorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TrabajadorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>[]
          }
          delete: {
            args: Prisma.TrabajadorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>
          }
          update: {
            args: Prisma.TrabajadorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>
          }
          deleteMany: {
            args: Prisma.TrabajadorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TrabajadorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TrabajadorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>[]
          }
          upsert: {
            args: Prisma.TrabajadorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorPayload>
          }
          aggregate: {
            args: Prisma.TrabajadorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrabajador>
          }
          groupBy: {
            args: Prisma.TrabajadorGroupByArgs<ExtArgs>
            result: $Utils.Optional<TrabajadorGroupByOutputType>[]
          }
          count: {
            args: Prisma.TrabajadorCountArgs<ExtArgs>
            result: $Utils.Optional<TrabajadorCountAggregateOutputType> | number
          }
        }
      }
      Auditoria: {
        payload: Prisma.$AuditoriaPayload<ExtArgs>
        fields: Prisma.AuditoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>
          }
          findFirst: {
            args: Prisma.AuditoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>
          }
          findMany: {
            args: Prisma.AuditoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>[]
          }
          create: {
            args: Prisma.AuditoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>
          }
          createMany: {
            args: Prisma.AuditoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>[]
          }
          delete: {
            args: Prisma.AuditoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>
          }
          update: {
            args: Prisma.AuditoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>
          }
          deleteMany: {
            args: Prisma.AuditoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AuditoriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>[]
          }
          upsert: {
            args: Prisma.AuditoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditoriaPayload>
          }
          aggregate: {
            args: Prisma.AuditoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditoria>
          }
          groupBy: {
            args: Prisma.AuditoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditoriaCountArgs<ExtArgs>
            result: $Utils.Optional<AuditoriaCountAggregateOutputType> | number
          }
        }
      }
      CambioAdscripcion: {
        payload: Prisma.$CambioAdscripcionPayload<ExtArgs>
        fields: Prisma.CambioAdscripcionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CambioAdscripcionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CambioAdscripcionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>
          }
          findFirst: {
            args: Prisma.CambioAdscripcionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CambioAdscripcionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>
          }
          findMany: {
            args: Prisma.CambioAdscripcionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>[]
          }
          create: {
            args: Prisma.CambioAdscripcionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>
          }
          createMany: {
            args: Prisma.CambioAdscripcionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CambioAdscripcionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>[]
          }
          delete: {
            args: Prisma.CambioAdscripcionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>
          }
          update: {
            args: Prisma.CambioAdscripcionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>
          }
          deleteMany: {
            args: Prisma.CambioAdscripcionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CambioAdscripcionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CambioAdscripcionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>[]
          }
          upsert: {
            args: Prisma.CambioAdscripcionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CambioAdscripcionPayload>
          }
          aggregate: {
            args: Prisma.CambioAdscripcionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCambioAdscripcion>
          }
          groupBy: {
            args: Prisma.CambioAdscripcionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CambioAdscripcionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CambioAdscripcionCountArgs<ExtArgs>
            result: $Utils.Optional<CambioAdscripcionCountAggregateOutputType> | number
          }
        }
      }
      CursoSnti: {
        payload: Prisma.$CursoSntiPayload<ExtArgs>
        fields: Prisma.CursoSntiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoSntiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoSntiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>
          }
          findFirst: {
            args: Prisma.CursoSntiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoSntiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>
          }
          findMany: {
            args: Prisma.CursoSntiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>[]
          }
          create: {
            args: Prisma.CursoSntiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>
          }
          createMany: {
            args: Prisma.CursoSntiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CursoSntiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>[]
          }
          delete: {
            args: Prisma.CursoSntiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>
          }
          update: {
            args: Prisma.CursoSntiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>
          }
          deleteMany: {
            args: Prisma.CursoSntiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CursoSntiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CursoSntiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>[]
          }
          upsert: {
            args: Prisma.CursoSntiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoSntiPayload>
          }
          aggregate: {
            args: Prisma.CursoSntiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCursoSnti>
          }
          groupBy: {
            args: Prisma.CursoSntiGroupByArgs<ExtArgs>
            result: $Utils.Optional<CursoSntiGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoSntiCountArgs<ExtArgs>
            result: $Utils.Optional<CursoSntiCountAggregateOutputType> | number
          }
        }
      }
      Documento: {
        payload: Prisma.$DocumentoPayload<ExtArgs>
        fields: Prisma.DocumentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>
          }
          findFirst: {
            args: Prisma.DocumentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>
          }
          findMany: {
            args: Prisma.DocumentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>[]
          }
          create: {
            args: Prisma.DocumentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>
          }
          createMany: {
            args: Prisma.DocumentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>[]
          }
          delete: {
            args: Prisma.DocumentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>
          }
          update: {
            args: Prisma.DocumentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>
          }
          deleteMany: {
            args: Prisma.DocumentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DocumentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>[]
          }
          upsert: {
            args: Prisma.DocumentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoPayload>
          }
          aggregate: {
            args: Prisma.DocumentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocumento>
          }
          groupBy: {
            args: Prisma.DocumentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentoCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentoCountAggregateOutputType> | number
          }
        }
      }
      Hijo: {
        payload: Prisma.$HijoPayload<ExtArgs>
        fields: Prisma.HijoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HijoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HijoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>
          }
          findFirst: {
            args: Prisma.HijoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HijoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>
          }
          findMany: {
            args: Prisma.HijoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>[]
          }
          create: {
            args: Prisma.HijoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>
          }
          createMany: {
            args: Prisma.HijoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HijoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>[]
          }
          delete: {
            args: Prisma.HijoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>
          }
          update: {
            args: Prisma.HijoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>
          }
          deleteMany: {
            args: Prisma.HijoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HijoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HijoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>[]
          }
          upsert: {
            args: Prisma.HijoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HijoPayload>
          }
          aggregate: {
            args: Prisma.HijoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHijo>
          }
          groupBy: {
            args: Prisma.HijoGroupByArgs<ExtArgs>
            result: $Utils.Optional<HijoGroupByOutputType>[]
          }
          count: {
            args: Prisma.HijoCountArgs<ExtArgs>
            result: $Utils.Optional<HijoCountAggregateOutputType> | number
          }
        }
      }
      Permiso: {
        payload: Prisma.$PermisoPayload<ExtArgs>
        fields: Prisma.PermisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findFirst: {
            args: Prisma.PermisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findMany: {
            args: Prisma.PermisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          create: {
            args: Prisma.PermisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          createMany: {
            args: Prisma.PermisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          delete: {
            args: Prisma.PermisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          update: {
            args: Prisma.PermisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          deleteMany: {
            args: Prisma.PermisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          upsert: {
            args: Prisma.PermisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          aggregate: {
            args: Prisma.PermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermiso>
          }
          groupBy: {
            args: Prisma.PermisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoCountAggregateOutputType> | number
          }
        }
      }
      SancionSnti: {
        payload: Prisma.$SancionSntiPayload<ExtArgs>
        fields: Prisma.SancionSntiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SancionSntiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SancionSntiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>
          }
          findFirst: {
            args: Prisma.SancionSntiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SancionSntiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>
          }
          findMany: {
            args: Prisma.SancionSntiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>[]
          }
          create: {
            args: Prisma.SancionSntiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>
          }
          createMany: {
            args: Prisma.SancionSntiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SancionSntiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>[]
          }
          delete: {
            args: Prisma.SancionSntiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>
          }
          update: {
            args: Prisma.SancionSntiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>
          }
          deleteMany: {
            args: Prisma.SancionSntiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SancionSntiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SancionSntiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>[]
          }
          upsert: {
            args: Prisma.SancionSntiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SancionSntiPayload>
          }
          aggregate: {
            args: Prisma.SancionSntiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSancionSnti>
          }
          groupBy: {
            args: Prisma.SancionSntiGroupByArgs<ExtArgs>
            result: $Utils.Optional<SancionSntiGroupByOutputType>[]
          }
          count: {
            args: Prisma.SancionSntiCountArgs<ExtArgs>
            result: $Utils.Optional<SancionSntiCountAggregateOutputType> | number
          }
        }
      }
      SeccionSnti: {
        payload: Prisma.$SeccionSntiPayload<ExtArgs>
        fields: Prisma.SeccionSntiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeccionSntiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeccionSntiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>
          }
          findFirst: {
            args: Prisma.SeccionSntiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeccionSntiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>
          }
          findMany: {
            args: Prisma.SeccionSntiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>[]
          }
          create: {
            args: Prisma.SeccionSntiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>
          }
          createMany: {
            args: Prisma.SeccionSntiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeccionSntiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>[]
          }
          delete: {
            args: Prisma.SeccionSntiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>
          }
          update: {
            args: Prisma.SeccionSntiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>
          }
          deleteMany: {
            args: Prisma.SeccionSntiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeccionSntiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeccionSntiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>[]
          }
          upsert: {
            args: Prisma.SeccionSntiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeccionSntiPayload>
          }
          aggregate: {
            args: Prisma.SeccionSntiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeccionSnti>
          }
          groupBy: {
            args: Prisma.SeccionSntiGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeccionSntiGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeccionSntiCountArgs<ExtArgs>
            result: $Utils.Optional<SeccionSntiCountAggregateOutputType> | number
          }
        }
      }
      TrabajadorSnti: {
        payload: Prisma.$TrabajadorSntiPayload<ExtArgs>
        fields: Prisma.TrabajadorSntiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TrabajadorSntiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TrabajadorSntiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>
          }
          findFirst: {
            args: Prisma.TrabajadorSntiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TrabajadorSntiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>
          }
          findMany: {
            args: Prisma.TrabajadorSntiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>[]
          }
          create: {
            args: Prisma.TrabajadorSntiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>
          }
          createMany: {
            args: Prisma.TrabajadorSntiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TrabajadorSntiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>[]
          }
          delete: {
            args: Prisma.TrabajadorSntiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>
          }
          update: {
            args: Prisma.TrabajadorSntiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>
          }
          deleteMany: {
            args: Prisma.TrabajadorSntiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TrabajadorSntiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TrabajadorSntiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>[]
          }
          upsert: {
            args: Prisma.TrabajadorSntiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrabajadorSntiPayload>
          }
          aggregate: {
            args: Prisma.TrabajadorSntiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrabajadorSnti>
          }
          groupBy: {
            args: Prisma.TrabajadorSntiGroupByArgs<ExtArgs>
            result: $Utils.Optional<TrabajadorSntiGroupByOutputType>[]
          }
          count: {
            args: Prisma.TrabajadorSntiCountArgs<ExtArgs>
            result: $Utils.Optional<TrabajadorSntiCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    curso?: CursoOmit
    sancion?: SancionOmit
    seccion?: SeccionOmit
    trabajador?: TrabajadorOmit
    auditoria?: AuditoriaOmit
    cambioAdscripcion?: CambioAdscripcionOmit
    cursoSnti?: CursoSntiOmit
    documento?: DocumentoOmit
    hijo?: HijoOmit
    permiso?: PermisoOmit
    sancionSnti?: SancionSntiOmit
    seccionSnti?: SeccionSntiOmit
    trabajadorSnti?: TrabajadorSntiOmit
    usuario?: UsuarioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type SeccionCountOutputType
   */

  export type SeccionCountOutputType = {
    trabajadores: number
  }

  export type SeccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajadores?: boolean | SeccionCountOutputTypeCountTrabajadoresArgs
  }

  // Custom InputTypes
  /**
   * SeccionCountOutputType without action
   */
  export type SeccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionCountOutputType
     */
    select?: SeccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SeccionCountOutputType without action
   */
  export type SeccionCountOutputTypeCountTrabajadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrabajadorWhereInput
  }


  /**
   * Count Type TrabajadorCountOutputType
   */

  export type TrabajadorCountOutputType = {
    sanciones: number
  }

  export type TrabajadorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sanciones?: boolean | TrabajadorCountOutputTypeCountSancionesArgs
  }

  // Custom InputTypes
  /**
   * TrabajadorCountOutputType without action
   */
  export type TrabajadorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorCountOutputType
     */
    select?: TrabajadorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TrabajadorCountOutputType without action
   */
  export type TrabajadorCountOutputTypeCountSancionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SancionWhereInput
  }


  /**
   * Count Type DocumentoCountOutputType
   */

  export type DocumentoCountOutputType = {
    hijos: number
    permisos: number
    cambios_adscripcion: number
  }

  export type DocumentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hijos?: boolean | DocumentoCountOutputTypeCountHijosArgs
    permisos?: boolean | DocumentoCountOutputTypeCountPermisosArgs
    cambios_adscripcion?: boolean | DocumentoCountOutputTypeCountCambios_adscripcionArgs
  }

  // Custom InputTypes
  /**
   * DocumentoCountOutputType without action
   */
  export type DocumentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoCountOutputType
     */
    select?: DocumentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocumentoCountOutputType without action
   */
  export type DocumentoCountOutputTypeCountHijosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HijoWhereInput
  }

  /**
   * DocumentoCountOutputType without action
   */
  export type DocumentoCountOutputTypeCountPermisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
  }

  /**
   * DocumentoCountOutputType without action
   */
  export type DocumentoCountOutputTypeCountCambios_adscripcionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CambioAdscripcionWhereInput
  }


  /**
   * Count Type SeccionSntiCountOutputType
   */

  export type SeccionSntiCountOutputType = {
    trabajadores: number
  }

  export type SeccionSntiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajadores?: boolean | SeccionSntiCountOutputTypeCountTrabajadoresArgs
  }

  // Custom InputTypes
  /**
   * SeccionSntiCountOutputType without action
   */
  export type SeccionSntiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSntiCountOutputType
     */
    select?: SeccionSntiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SeccionSntiCountOutputType without action
   */
  export type SeccionSntiCountOutputTypeCountTrabajadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrabajadorSntiWhereInput
  }


  /**
   * Count Type TrabajadorSntiCountOutputType
   */

  export type TrabajadorSntiCountOutputType = {
    cambios_adscripcion: number
    documentos: number
    hijos: number
    permisos: number
    sanciones: number
    usuarios: number
  }

  export type TrabajadorSntiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cambios_adscripcion?: boolean | TrabajadorSntiCountOutputTypeCountCambios_adscripcionArgs
    documentos?: boolean | TrabajadorSntiCountOutputTypeCountDocumentosArgs
    hijos?: boolean | TrabajadorSntiCountOutputTypeCountHijosArgs
    permisos?: boolean | TrabajadorSntiCountOutputTypeCountPermisosArgs
    sanciones?: boolean | TrabajadorSntiCountOutputTypeCountSancionesArgs
    usuarios?: boolean | TrabajadorSntiCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSntiCountOutputType
     */
    select?: TrabajadorSntiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeCountCambios_adscripcionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CambioAdscripcionWhereInput
  }

  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeCountDocumentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentoWhereInput
  }

  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeCountHijosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HijoWhereInput
  }

  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeCountPermisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
  }

  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeCountSancionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SancionSntiWhereInput
  }

  /**
   * TrabajadorSntiCountOutputType without action
   */
  export type TrabajadorSntiCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Curso
   */

  export type AggregateCurso = {
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  export type CursoAvgAggregateOutputType = {
    id_curso: number | null
    horas_duracion: number | null
  }

  export type CursoSumAggregateOutputType = {
    id_curso: number | null
    horas_duracion: number | null
  }

  export type CursoMinAggregateOutputType = {
    id_curso: number | null
    codigo_curso: string | null
    nombre_curso: string | null
    horas_duracion: number | null
    estatus: string | null
  }

  export type CursoMaxAggregateOutputType = {
    id_curso: number | null
    codigo_curso: string | null
    nombre_curso: string | null
    horas_duracion: number | null
    estatus: string | null
  }

  export type CursoCountAggregateOutputType = {
    id_curso: number
    codigo_curso: number
    nombre_curso: number
    horas_duracion: number
    estatus: number
    _all: number
  }


  export type CursoAvgAggregateInputType = {
    id_curso?: true
    horas_duracion?: true
  }

  export type CursoSumAggregateInputType = {
    id_curso?: true
    horas_duracion?: true
  }

  export type CursoMinAggregateInputType = {
    id_curso?: true
    codigo_curso?: true
    nombre_curso?: true
    horas_duracion?: true
    estatus?: true
  }

  export type CursoMaxAggregateInputType = {
    id_curso?: true
    codigo_curso?: true
    nombre_curso?: true
    horas_duracion?: true
    estatus?: true
  }

  export type CursoCountAggregateInputType = {
    id_curso?: true
    codigo_curso?: true
    nombre_curso?: true
    horas_duracion?: true
    estatus?: true
    _all?: true
  }

  export type CursoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Curso to aggregate.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cursos
    **/
    _count?: true | CursoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoMaxAggregateInputType
  }

  export type GetCursoAggregateType<T extends CursoAggregateArgs> = {
        [P in keyof T & keyof AggregateCurso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurso[P]>
      : GetScalarType<T[P], AggregateCurso[P]>
  }




  export type CursoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithAggregationInput | CursoOrderByWithAggregationInput[]
    by: CursoScalarFieldEnum[] | CursoScalarFieldEnum
    having?: CursoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoCountAggregateInputType | true
    _avg?: CursoAvgAggregateInputType
    _sum?: CursoSumAggregateInputType
    _min?: CursoMinAggregateInputType
    _max?: CursoMaxAggregateInputType
  }

  export type CursoGroupByOutputType = {
    id_curso: number
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
    estatus: string | null
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  type GetCursoGroupByPayload<T extends CursoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoGroupByOutputType[P]>
            : GetScalarType<T[P], CursoGroupByOutputType[P]>
        }
      >
    >


  export type CursoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
    estatus?: boolean
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
    estatus?: boolean
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
    estatus?: boolean
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectScalar = {
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
    estatus?: boolean
  }

  export type CursoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_curso" | "codigo_curso" | "nombre_curso" | "horas_duracion" | "estatus", ExtArgs["result"]["curso"]>

  export type $CursoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Curso"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_curso: number
      codigo_curso: string
      nombre_curso: string
      horas_duracion: number
      estatus: string | null
    }, ExtArgs["result"]["curso"]>
    composites: {}
  }

  type CursoGetPayload<S extends boolean | null | undefined | CursoDefaultArgs> = $Result.GetResult<Prisma.$CursoPayload, S>

  type CursoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CursoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CursoCountAggregateInputType | true
    }

  export interface CursoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Curso'], meta: { name: 'Curso' } }
    /**
     * Find zero or one Curso that matches the filter.
     * @param {CursoFindUniqueArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CursoFindUniqueArgs>(args: SelectSubset<T, CursoFindUniqueArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Curso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CursoFindUniqueOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CursoFindUniqueOrThrowArgs>(args: SelectSubset<T, CursoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Curso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CursoFindFirstArgs>(args?: SelectSubset<T, CursoFindFirstArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Curso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CursoFindFirstOrThrowArgs>(args?: SelectSubset<T, CursoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cursos
     * const cursos = await prisma.curso.findMany()
     * 
     * // Get first 10 Cursos
     * const cursos = await prisma.curso.findMany({ take: 10 })
     * 
     * // Only select the `id_curso`
     * const cursoWithId_cursoOnly = await prisma.curso.findMany({ select: { id_curso: true } })
     * 
     */
    findMany<T extends CursoFindManyArgs>(args?: SelectSubset<T, CursoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Curso.
     * @param {CursoCreateArgs} args - Arguments to create a Curso.
     * @example
     * // Create one Curso
     * const Curso = await prisma.curso.create({
     *   data: {
     *     // ... data to create a Curso
     *   }
     * })
     * 
     */
    create<T extends CursoCreateArgs>(args: SelectSubset<T, CursoCreateArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cursos.
     * @param {CursoCreateManyArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CursoCreateManyArgs>(args?: SelectSubset<T, CursoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cursos and returns the data saved in the database.
     * @param {CursoCreateManyAndReturnArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cursos and only return the `id_curso`
     * const cursoWithId_cursoOnly = await prisma.curso.createManyAndReturn({
     *   select: { id_curso: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CursoCreateManyAndReturnArgs>(args?: SelectSubset<T, CursoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Curso.
     * @param {CursoDeleteArgs} args - Arguments to delete one Curso.
     * @example
     * // Delete one Curso
     * const Curso = await prisma.curso.delete({
     *   where: {
     *     // ... filter to delete one Curso
     *   }
     * })
     * 
     */
    delete<T extends CursoDeleteArgs>(args: SelectSubset<T, CursoDeleteArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Curso.
     * @param {CursoUpdateArgs} args - Arguments to update one Curso.
     * @example
     * // Update one Curso
     * const curso = await prisma.curso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CursoUpdateArgs>(args: SelectSubset<T, CursoUpdateArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cursos.
     * @param {CursoDeleteManyArgs} args - Arguments to filter Cursos to delete.
     * @example
     * // Delete a few Cursos
     * const { count } = await prisma.curso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CursoDeleteManyArgs>(args?: SelectSubset<T, CursoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CursoUpdateManyArgs>(args: SelectSubset<T, CursoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos and returns the data updated in the database.
     * @param {CursoUpdateManyAndReturnArgs} args - Arguments to update many Cursos.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cursos and only return the `id_curso`
     * const cursoWithId_cursoOnly = await prisma.curso.updateManyAndReturn({
     *   select: { id_curso: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CursoUpdateManyAndReturnArgs>(args: SelectSubset<T, CursoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Curso.
     * @param {CursoUpsertArgs} args - Arguments to update or create a Curso.
     * @example
     * // Update or create a Curso
     * const curso = await prisma.curso.upsert({
     *   create: {
     *     // ... data to create a Curso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Curso we want to update
     *   }
     * })
     */
    upsert<T extends CursoUpsertArgs>(args: SelectSubset<T, CursoUpsertArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoCountArgs} args - Arguments to filter Cursos to count.
     * @example
     * // Count the number of Cursos
     * const count = await prisma.curso.count({
     *   where: {
     *     // ... the filter for the Cursos we want to count
     *   }
     * })
    **/
    count<T extends CursoCountArgs>(
      args?: Subset<T, CursoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoAggregateArgs>(args: Subset<T, CursoAggregateArgs>): Prisma.PrismaPromise<GetCursoAggregateType<T>>

    /**
     * Group by Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoGroupByArgs['orderBy'] }
        : { orderBy?: CursoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Curso model
   */
  readonly fields: CursoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Curso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Curso model
   */ 
  interface CursoFieldRefs {
    readonly id_curso: FieldRef<"Curso", 'Int'>
    readonly codigo_curso: FieldRef<"Curso", 'String'>
    readonly nombre_curso: FieldRef<"Curso", 'String'>
    readonly horas_duracion: FieldRef<"Curso", 'Int'>
    readonly estatus: FieldRef<"Curso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Curso findUnique
   */
  export type CursoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findUniqueOrThrow
   */
  export type CursoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findFirst
   */
  export type CursoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findFirstOrThrow
   */
  export type CursoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findMany
   */
  export type CursoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Filter, which Cursos to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso create
   */
  export type CursoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data needed to create a Curso.
     */
    data: XOR<CursoCreateInput, CursoUncheckedCreateInput>
  }

  /**
   * Curso createMany
   */
  export type CursoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Curso createManyAndReturn
   */
  export type CursoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Curso update
   */
  export type CursoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data needed to update a Curso.
     */
    data: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
    /**
     * Choose, which Curso to update.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso updateMany
   */
  export type CursoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to update.
     */
    limit?: number
  }

  /**
   * Curso updateManyAndReturn
   */
  export type CursoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to update.
     */
    limit?: number
  }

  /**
   * Curso upsert
   */
  export type CursoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The filter to search for the Curso to update in case it exists.
     */
    where: CursoWhereUniqueInput
    /**
     * In case the Curso found by the `where` argument doesn't exist, create a new Curso with this data.
     */
    create: XOR<CursoCreateInput, CursoUncheckedCreateInput>
    /**
     * In case the Curso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
  }

  /**
   * Curso delete
   */
  export type CursoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Filter which Curso to delete.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso deleteMany
   */
  export type CursoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cursos to delete
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to delete.
     */
    limit?: number
  }

  /**
   * Curso without action
   */
  export type CursoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
  }


  /**
   * Model Sancion
   */

  export type AggregateSancion = {
    _count: SancionCountAggregateOutputType | null
    _avg: SancionAvgAggregateOutputType | null
    _sum: SancionSumAggregateOutputType | null
    _min: SancionMinAggregateOutputType | null
    _max: SancionMaxAggregateOutputType | null
  }

  export type SancionAvgAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
  }

  export type SancionSumAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
  }

  export type SancionMinAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
    tipo_sancion: string | null
    descripcion: string | null
    fecha_aplicacion: Date | null
    fecha_fin: Date | null
    estatus: string | null
    usuario_registro: string | null
    fecha_registro: Date | null
  }

  export type SancionMaxAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
    tipo_sancion: string | null
    descripcion: string | null
    fecha_aplicacion: Date | null
    fecha_fin: Date | null
    estatus: string | null
    usuario_registro: string | null
    fecha_registro: Date | null
  }

  export type SancionCountAggregateOutputType = {
    id_sancion: number
    id_trabajador: number
    tipo_sancion: number
    descripcion: number
    fecha_aplicacion: number
    fecha_fin: number
    estatus: number
    usuario_registro: number
    fecha_registro: number
    _all: number
  }


  export type SancionAvgAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
  }

  export type SancionSumAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
  }

  export type SancionMinAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
    tipo_sancion?: true
    descripcion?: true
    fecha_aplicacion?: true
    fecha_fin?: true
    estatus?: true
    usuario_registro?: true
    fecha_registro?: true
  }

  export type SancionMaxAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
    tipo_sancion?: true
    descripcion?: true
    fecha_aplicacion?: true
    fecha_fin?: true
    estatus?: true
    usuario_registro?: true
    fecha_registro?: true
  }

  export type SancionCountAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
    tipo_sancion?: true
    descripcion?: true
    fecha_aplicacion?: true
    fecha_fin?: true
    estatus?: true
    usuario_registro?: true
    fecha_registro?: true
    _all?: true
  }

  export type SancionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sancion to aggregate.
     */
    where?: SancionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sancions to fetch.
     */
    orderBy?: SancionOrderByWithRelationInput | SancionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SancionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sancions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sancions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sancions
    **/
    _count?: true | SancionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SancionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SancionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SancionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SancionMaxAggregateInputType
  }

  export type GetSancionAggregateType<T extends SancionAggregateArgs> = {
        [P in keyof T & keyof AggregateSancion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSancion[P]>
      : GetScalarType<T[P], AggregateSancion[P]>
  }




  export type SancionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SancionWhereInput
    orderBy?: SancionOrderByWithAggregationInput | SancionOrderByWithAggregationInput[]
    by: SancionScalarFieldEnum[] | SancionScalarFieldEnum
    having?: SancionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SancionCountAggregateInputType | true
    _avg?: SancionAvgAggregateInputType
    _sum?: SancionSumAggregateInputType
    _min?: SancionMinAggregateInputType
    _max?: SancionMaxAggregateInputType
  }

  export type SancionGroupByOutputType = {
    id_sancion: number
    id_trabajador: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date
    fecha_fin: Date | null
    estatus: string
    usuario_registro: string | null
    fecha_registro: Date | null
    _count: SancionCountAggregateOutputType | null
    _avg: SancionAvgAggregateOutputType | null
    _sum: SancionSumAggregateOutputType | null
    _min: SancionMinAggregateOutputType | null
    _max: SancionMaxAggregateOutputType | null
  }

  type GetSancionGroupByPayload<T extends SancionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SancionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SancionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SancionGroupByOutputType[P]>
            : GetScalarType<T[P], SancionGroupByOutputType[P]>
        }
      >
    >


  export type SancionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sancion"]>

  export type SancionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sancion"]>

  export type SancionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sancion"]>

  export type SancionSelectScalar = {
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
  }

  export type SancionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sancion" | "id_trabajador" | "tipo_sancion" | "descripcion" | "fecha_aplicacion" | "fecha_fin" | "estatus" | "usuario_registro" | "fecha_registro", ExtArgs["result"]["sancion"]>
  export type SancionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorDefaultArgs<ExtArgs>
  }
  export type SancionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorDefaultArgs<ExtArgs>
  }
  export type SancionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorDefaultArgs<ExtArgs>
  }

  export type $SancionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sancion"
    objects: {
      trabajador: Prisma.$TrabajadorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sancion: number
      id_trabajador: number
      tipo_sancion: string
      descripcion: string
      fecha_aplicacion: Date
      fecha_fin: Date | null
      estatus: string
      usuario_registro: string | null
      fecha_registro: Date | null
    }, ExtArgs["result"]["sancion"]>
    composites: {}
  }

  type SancionGetPayload<S extends boolean | null | undefined | SancionDefaultArgs> = $Result.GetResult<Prisma.$SancionPayload, S>

  type SancionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SancionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SancionCountAggregateInputType | true
    }

  export interface SancionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sancion'], meta: { name: 'Sancion' } }
    /**
     * Find zero or one Sancion that matches the filter.
     * @param {SancionFindUniqueArgs} args - Arguments to find a Sancion
     * @example
     * // Get one Sancion
     * const sancion = await prisma.sancion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SancionFindUniqueArgs>(args: SelectSubset<T, SancionFindUniqueArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sancion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SancionFindUniqueOrThrowArgs} args - Arguments to find a Sancion
     * @example
     * // Get one Sancion
     * const sancion = await prisma.sancion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SancionFindUniqueOrThrowArgs>(args: SelectSubset<T, SancionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sancion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionFindFirstArgs} args - Arguments to find a Sancion
     * @example
     * // Get one Sancion
     * const sancion = await prisma.sancion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SancionFindFirstArgs>(args?: SelectSubset<T, SancionFindFirstArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sancion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionFindFirstOrThrowArgs} args - Arguments to find a Sancion
     * @example
     * // Get one Sancion
     * const sancion = await prisma.sancion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SancionFindFirstOrThrowArgs>(args?: SelectSubset<T, SancionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sancions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sancions
     * const sancions = await prisma.sancion.findMany()
     * 
     * // Get first 10 Sancions
     * const sancions = await prisma.sancion.findMany({ take: 10 })
     * 
     * // Only select the `id_sancion`
     * const sancionWithId_sancionOnly = await prisma.sancion.findMany({ select: { id_sancion: true } })
     * 
     */
    findMany<T extends SancionFindManyArgs>(args?: SelectSubset<T, SancionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sancion.
     * @param {SancionCreateArgs} args - Arguments to create a Sancion.
     * @example
     * // Create one Sancion
     * const Sancion = await prisma.sancion.create({
     *   data: {
     *     // ... data to create a Sancion
     *   }
     * })
     * 
     */
    create<T extends SancionCreateArgs>(args: SelectSubset<T, SancionCreateArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sancions.
     * @param {SancionCreateManyArgs} args - Arguments to create many Sancions.
     * @example
     * // Create many Sancions
     * const sancion = await prisma.sancion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SancionCreateManyArgs>(args?: SelectSubset<T, SancionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sancions and returns the data saved in the database.
     * @param {SancionCreateManyAndReturnArgs} args - Arguments to create many Sancions.
     * @example
     * // Create many Sancions
     * const sancion = await prisma.sancion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sancions and only return the `id_sancion`
     * const sancionWithId_sancionOnly = await prisma.sancion.createManyAndReturn({
     *   select: { id_sancion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SancionCreateManyAndReturnArgs>(args?: SelectSubset<T, SancionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sancion.
     * @param {SancionDeleteArgs} args - Arguments to delete one Sancion.
     * @example
     * // Delete one Sancion
     * const Sancion = await prisma.sancion.delete({
     *   where: {
     *     // ... filter to delete one Sancion
     *   }
     * })
     * 
     */
    delete<T extends SancionDeleteArgs>(args: SelectSubset<T, SancionDeleteArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sancion.
     * @param {SancionUpdateArgs} args - Arguments to update one Sancion.
     * @example
     * // Update one Sancion
     * const sancion = await prisma.sancion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SancionUpdateArgs>(args: SelectSubset<T, SancionUpdateArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sancions.
     * @param {SancionDeleteManyArgs} args - Arguments to filter Sancions to delete.
     * @example
     * // Delete a few Sancions
     * const { count } = await prisma.sancion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SancionDeleteManyArgs>(args?: SelectSubset<T, SancionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sancions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sancions
     * const sancion = await prisma.sancion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SancionUpdateManyArgs>(args: SelectSubset<T, SancionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sancions and returns the data updated in the database.
     * @param {SancionUpdateManyAndReturnArgs} args - Arguments to update many Sancions.
     * @example
     * // Update many Sancions
     * const sancion = await prisma.sancion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sancions and only return the `id_sancion`
     * const sancionWithId_sancionOnly = await prisma.sancion.updateManyAndReturn({
     *   select: { id_sancion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SancionUpdateManyAndReturnArgs>(args: SelectSubset<T, SancionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sancion.
     * @param {SancionUpsertArgs} args - Arguments to update or create a Sancion.
     * @example
     * // Update or create a Sancion
     * const sancion = await prisma.sancion.upsert({
     *   create: {
     *     // ... data to create a Sancion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sancion we want to update
     *   }
     * })
     */
    upsert<T extends SancionUpsertArgs>(args: SelectSubset<T, SancionUpsertArgs<ExtArgs>>): Prisma__SancionClient<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sancions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionCountArgs} args - Arguments to filter Sancions to count.
     * @example
     * // Count the number of Sancions
     * const count = await prisma.sancion.count({
     *   where: {
     *     // ... the filter for the Sancions we want to count
     *   }
     * })
    **/
    count<T extends SancionCountArgs>(
      args?: Subset<T, SancionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SancionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sancion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SancionAggregateArgs>(args: Subset<T, SancionAggregateArgs>): Prisma.PrismaPromise<GetSancionAggregateType<T>>

    /**
     * Group by Sancion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SancionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SancionGroupByArgs['orderBy'] }
        : { orderBy?: SancionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SancionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSancionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sancion model
   */
  readonly fields: SancionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sancion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SancionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends TrabajadorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorDefaultArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sancion model
   */ 
  interface SancionFieldRefs {
    readonly id_sancion: FieldRef<"Sancion", 'Int'>
    readonly id_trabajador: FieldRef<"Sancion", 'Int'>
    readonly tipo_sancion: FieldRef<"Sancion", 'String'>
    readonly descripcion: FieldRef<"Sancion", 'String'>
    readonly fecha_aplicacion: FieldRef<"Sancion", 'DateTime'>
    readonly fecha_fin: FieldRef<"Sancion", 'DateTime'>
    readonly estatus: FieldRef<"Sancion", 'String'>
    readonly usuario_registro: FieldRef<"Sancion", 'String'>
    readonly fecha_registro: FieldRef<"Sancion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Sancion findUnique
   */
  export type SancionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * Filter, which Sancion to fetch.
     */
    where: SancionWhereUniqueInput
  }

  /**
   * Sancion findUniqueOrThrow
   */
  export type SancionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * Filter, which Sancion to fetch.
     */
    where: SancionWhereUniqueInput
  }

  /**
   * Sancion findFirst
   */
  export type SancionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * Filter, which Sancion to fetch.
     */
    where?: SancionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sancions to fetch.
     */
    orderBy?: SancionOrderByWithRelationInput | SancionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sancions.
     */
    cursor?: SancionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sancions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sancions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sancions.
     */
    distinct?: SancionScalarFieldEnum | SancionScalarFieldEnum[]
  }

  /**
   * Sancion findFirstOrThrow
   */
  export type SancionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * Filter, which Sancion to fetch.
     */
    where?: SancionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sancions to fetch.
     */
    orderBy?: SancionOrderByWithRelationInput | SancionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sancions.
     */
    cursor?: SancionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sancions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sancions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sancions.
     */
    distinct?: SancionScalarFieldEnum | SancionScalarFieldEnum[]
  }

  /**
   * Sancion findMany
   */
  export type SancionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * Filter, which Sancions to fetch.
     */
    where?: SancionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sancions to fetch.
     */
    orderBy?: SancionOrderByWithRelationInput | SancionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sancions.
     */
    cursor?: SancionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sancions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sancions.
     */
    skip?: number
    distinct?: SancionScalarFieldEnum | SancionScalarFieldEnum[]
  }

  /**
   * Sancion create
   */
  export type SancionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * The data needed to create a Sancion.
     */
    data: XOR<SancionCreateInput, SancionUncheckedCreateInput>
  }

  /**
   * Sancion createMany
   */
  export type SancionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sancions.
     */
    data: SancionCreateManyInput | SancionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sancion createManyAndReturn
   */
  export type SancionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * The data used to create many Sancions.
     */
    data: SancionCreateManyInput | SancionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Sancion update
   */
  export type SancionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * The data needed to update a Sancion.
     */
    data: XOR<SancionUpdateInput, SancionUncheckedUpdateInput>
    /**
     * Choose, which Sancion to update.
     */
    where: SancionWhereUniqueInput
  }

  /**
   * Sancion updateMany
   */
  export type SancionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sancions.
     */
    data: XOR<SancionUpdateManyMutationInput, SancionUncheckedUpdateManyInput>
    /**
     * Filter which Sancions to update
     */
    where?: SancionWhereInput
    /**
     * Limit how many Sancions to update.
     */
    limit?: number
  }

  /**
   * Sancion updateManyAndReturn
   */
  export type SancionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * The data used to update Sancions.
     */
    data: XOR<SancionUpdateManyMutationInput, SancionUncheckedUpdateManyInput>
    /**
     * Filter which Sancions to update
     */
    where?: SancionWhereInput
    /**
     * Limit how many Sancions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Sancion upsert
   */
  export type SancionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * The filter to search for the Sancion to update in case it exists.
     */
    where: SancionWhereUniqueInput
    /**
     * In case the Sancion found by the `where` argument doesn't exist, create a new Sancion with this data.
     */
    create: XOR<SancionCreateInput, SancionUncheckedCreateInput>
    /**
     * In case the Sancion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SancionUpdateInput, SancionUncheckedUpdateInput>
  }

  /**
   * Sancion delete
   */
  export type SancionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    /**
     * Filter which Sancion to delete.
     */
    where: SancionWhereUniqueInput
  }

  /**
   * Sancion deleteMany
   */
  export type SancionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sancions to delete
     */
    where?: SancionWhereInput
    /**
     * Limit how many Sancions to delete.
     */
    limit?: number
  }

  /**
   * Sancion without action
   */
  export type SancionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
  }


  /**
   * Model Seccion
   */

  export type AggregateSeccion = {
    _count: SeccionCountAggregateOutputType | null
    _avg: SeccionAvgAggregateOutputType | null
    _sum: SeccionSumAggregateOutputType | null
    _min: SeccionMinAggregateOutputType | null
    _max: SeccionMaxAggregateOutputType | null
  }

  export type SeccionAvgAggregateOutputType = {
    id_seccion: number | null
  }

  export type SeccionSumAggregateOutputType = {
    id_seccion: number | null
  }

  export type SeccionMinAggregateOutputType = {
    id_seccion: number | null
    nombre_seccion: string | null
    descripcion: string | null
  }

  export type SeccionMaxAggregateOutputType = {
    id_seccion: number | null
    nombre_seccion: string | null
    descripcion: string | null
  }

  export type SeccionCountAggregateOutputType = {
    id_seccion: number
    nombre_seccion: number
    descripcion: number
    _all: number
  }


  export type SeccionAvgAggregateInputType = {
    id_seccion?: true
  }

  export type SeccionSumAggregateInputType = {
    id_seccion?: true
  }

  export type SeccionMinAggregateInputType = {
    id_seccion?: true
    nombre_seccion?: true
    descripcion?: true
  }

  export type SeccionMaxAggregateInputType = {
    id_seccion?: true
    nombre_seccion?: true
    descripcion?: true
  }

  export type SeccionCountAggregateInputType = {
    id_seccion?: true
    nombre_seccion?: true
    descripcion?: true
    _all?: true
  }

  export type SeccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seccion to aggregate.
     */
    where?: SeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seccions to fetch.
     */
    orderBy?: SeccionOrderByWithRelationInput | SeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Seccions
    **/
    _count?: true | SeccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SeccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeccionMaxAggregateInputType
  }

  export type GetSeccionAggregateType<T extends SeccionAggregateArgs> = {
        [P in keyof T & keyof AggregateSeccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeccion[P]>
      : GetScalarType<T[P], AggregateSeccion[P]>
  }




  export type SeccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeccionWhereInput
    orderBy?: SeccionOrderByWithAggregationInput | SeccionOrderByWithAggregationInput[]
    by: SeccionScalarFieldEnum[] | SeccionScalarFieldEnum
    having?: SeccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeccionCountAggregateInputType | true
    _avg?: SeccionAvgAggregateInputType
    _sum?: SeccionSumAggregateInputType
    _min?: SeccionMinAggregateInputType
    _max?: SeccionMaxAggregateInputType
  }

  export type SeccionGroupByOutputType = {
    id_seccion: number
    nombre_seccion: string
    descripcion: string | null
    _count: SeccionCountAggregateOutputType | null
    _avg: SeccionAvgAggregateOutputType | null
    _sum: SeccionSumAggregateOutputType | null
    _min: SeccionMinAggregateOutputType | null
    _max: SeccionMaxAggregateOutputType | null
  }

  type GetSeccionGroupByPayload<T extends SeccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeccionGroupByOutputType[P]>
            : GetScalarType<T[P], SeccionGroupByOutputType[P]>
        }
      >
    >


  export type SeccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
    trabajadores?: boolean | Seccion$trabajadoresArgs<ExtArgs>
    _count?: boolean | SeccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seccion"]>

  export type SeccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["seccion"]>

  export type SeccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["seccion"]>

  export type SeccionSelectScalar = {
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
  }

  export type SeccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_seccion" | "nombre_seccion" | "descripcion", ExtArgs["result"]["seccion"]>
  export type SeccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajadores?: boolean | Seccion$trabajadoresArgs<ExtArgs>
    _count?: boolean | SeccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SeccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SeccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SeccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Seccion"
    objects: {
      trabajadores: Prisma.$TrabajadorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_seccion: number
      nombre_seccion: string
      descripcion: string | null
    }, ExtArgs["result"]["seccion"]>
    composites: {}
  }

  type SeccionGetPayload<S extends boolean | null | undefined | SeccionDefaultArgs> = $Result.GetResult<Prisma.$SeccionPayload, S>

  type SeccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeccionCountAggregateInputType | true
    }

  export interface SeccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Seccion'], meta: { name: 'Seccion' } }
    /**
     * Find zero or one Seccion that matches the filter.
     * @param {SeccionFindUniqueArgs} args - Arguments to find a Seccion
     * @example
     * // Get one Seccion
     * const seccion = await prisma.seccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeccionFindUniqueArgs>(args: SelectSubset<T, SeccionFindUniqueArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Seccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeccionFindUniqueOrThrowArgs} args - Arguments to find a Seccion
     * @example
     * // Get one Seccion
     * const seccion = await prisma.seccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeccionFindUniqueOrThrowArgs>(args: SelectSubset<T, SeccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionFindFirstArgs} args - Arguments to find a Seccion
     * @example
     * // Get one Seccion
     * const seccion = await prisma.seccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeccionFindFirstArgs>(args?: SelectSubset<T, SeccionFindFirstArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionFindFirstOrThrowArgs} args - Arguments to find a Seccion
     * @example
     * // Get one Seccion
     * const seccion = await prisma.seccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeccionFindFirstOrThrowArgs>(args?: SelectSubset<T, SeccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Seccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Seccions
     * const seccions = await prisma.seccion.findMany()
     * 
     * // Get first 10 Seccions
     * const seccions = await prisma.seccion.findMany({ take: 10 })
     * 
     * // Only select the `id_seccion`
     * const seccionWithId_seccionOnly = await prisma.seccion.findMany({ select: { id_seccion: true } })
     * 
     */
    findMany<T extends SeccionFindManyArgs>(args?: SelectSubset<T, SeccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Seccion.
     * @param {SeccionCreateArgs} args - Arguments to create a Seccion.
     * @example
     * // Create one Seccion
     * const Seccion = await prisma.seccion.create({
     *   data: {
     *     // ... data to create a Seccion
     *   }
     * })
     * 
     */
    create<T extends SeccionCreateArgs>(args: SelectSubset<T, SeccionCreateArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Seccions.
     * @param {SeccionCreateManyArgs} args - Arguments to create many Seccions.
     * @example
     * // Create many Seccions
     * const seccion = await prisma.seccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeccionCreateManyArgs>(args?: SelectSubset<T, SeccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Seccions and returns the data saved in the database.
     * @param {SeccionCreateManyAndReturnArgs} args - Arguments to create many Seccions.
     * @example
     * // Create many Seccions
     * const seccion = await prisma.seccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Seccions and only return the `id_seccion`
     * const seccionWithId_seccionOnly = await prisma.seccion.createManyAndReturn({
     *   select: { id_seccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeccionCreateManyAndReturnArgs>(args?: SelectSubset<T, SeccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Seccion.
     * @param {SeccionDeleteArgs} args - Arguments to delete one Seccion.
     * @example
     * // Delete one Seccion
     * const Seccion = await prisma.seccion.delete({
     *   where: {
     *     // ... filter to delete one Seccion
     *   }
     * })
     * 
     */
    delete<T extends SeccionDeleteArgs>(args: SelectSubset<T, SeccionDeleteArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Seccion.
     * @param {SeccionUpdateArgs} args - Arguments to update one Seccion.
     * @example
     * // Update one Seccion
     * const seccion = await prisma.seccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeccionUpdateArgs>(args: SelectSubset<T, SeccionUpdateArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Seccions.
     * @param {SeccionDeleteManyArgs} args - Arguments to filter Seccions to delete.
     * @example
     * // Delete a few Seccions
     * const { count } = await prisma.seccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeccionDeleteManyArgs>(args?: SelectSubset<T, SeccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Seccions
     * const seccion = await prisma.seccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeccionUpdateManyArgs>(args: SelectSubset<T, SeccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seccions and returns the data updated in the database.
     * @param {SeccionUpdateManyAndReturnArgs} args - Arguments to update many Seccions.
     * @example
     * // Update many Seccions
     * const seccion = await prisma.seccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Seccions and only return the `id_seccion`
     * const seccionWithId_seccionOnly = await prisma.seccion.updateManyAndReturn({
     *   select: { id_seccion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeccionUpdateManyAndReturnArgs>(args: SelectSubset<T, SeccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Seccion.
     * @param {SeccionUpsertArgs} args - Arguments to update or create a Seccion.
     * @example
     * // Update or create a Seccion
     * const seccion = await prisma.seccion.upsert({
     *   create: {
     *     // ... data to create a Seccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seccion we want to update
     *   }
     * })
     */
    upsert<T extends SeccionUpsertArgs>(args: SelectSubset<T, SeccionUpsertArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Seccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionCountArgs} args - Arguments to filter Seccions to count.
     * @example
     * // Count the number of Seccions
     * const count = await prisma.seccion.count({
     *   where: {
     *     // ... the filter for the Seccions we want to count
     *   }
     * })
    **/
    count<T extends SeccionCountArgs>(
      args?: Subset<T, SeccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeccionAggregateArgs>(args: Subset<T, SeccionAggregateArgs>): Prisma.PrismaPromise<GetSeccionAggregateType<T>>

    /**
     * Group by Seccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeccionGroupByArgs['orderBy'] }
        : { orderBy?: SeccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Seccion model
   */
  readonly fields: SeccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Seccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajadores<T extends Seccion$trabajadoresArgs<ExtArgs> = {}>(args?: Subset<T, Seccion$trabajadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Seccion model
   */ 
  interface SeccionFieldRefs {
    readonly id_seccion: FieldRef<"Seccion", 'Int'>
    readonly nombre_seccion: FieldRef<"Seccion", 'String'>
    readonly descripcion: FieldRef<"Seccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Seccion findUnique
   */
  export type SeccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * Filter, which Seccion to fetch.
     */
    where: SeccionWhereUniqueInput
  }

  /**
   * Seccion findUniqueOrThrow
   */
  export type SeccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * Filter, which Seccion to fetch.
     */
    where: SeccionWhereUniqueInput
  }

  /**
   * Seccion findFirst
   */
  export type SeccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * Filter, which Seccion to fetch.
     */
    where?: SeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seccions to fetch.
     */
    orderBy?: SeccionOrderByWithRelationInput | SeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seccions.
     */
    cursor?: SeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seccions.
     */
    distinct?: SeccionScalarFieldEnum | SeccionScalarFieldEnum[]
  }

  /**
   * Seccion findFirstOrThrow
   */
  export type SeccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * Filter, which Seccion to fetch.
     */
    where?: SeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seccions to fetch.
     */
    orderBy?: SeccionOrderByWithRelationInput | SeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seccions.
     */
    cursor?: SeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seccions.
     */
    distinct?: SeccionScalarFieldEnum | SeccionScalarFieldEnum[]
  }

  /**
   * Seccion findMany
   */
  export type SeccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * Filter, which Seccions to fetch.
     */
    where?: SeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seccions to fetch.
     */
    orderBy?: SeccionOrderByWithRelationInput | SeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Seccions.
     */
    cursor?: SeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seccions.
     */
    skip?: number
    distinct?: SeccionScalarFieldEnum | SeccionScalarFieldEnum[]
  }

  /**
   * Seccion create
   */
  export type SeccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * The data needed to create a Seccion.
     */
    data: XOR<SeccionCreateInput, SeccionUncheckedCreateInput>
  }

  /**
   * Seccion createMany
   */
  export type SeccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Seccions.
     */
    data: SeccionCreateManyInput | SeccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seccion createManyAndReturn
   */
  export type SeccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * The data used to create many Seccions.
     */
    data: SeccionCreateManyInput | SeccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seccion update
   */
  export type SeccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * The data needed to update a Seccion.
     */
    data: XOR<SeccionUpdateInput, SeccionUncheckedUpdateInput>
    /**
     * Choose, which Seccion to update.
     */
    where: SeccionWhereUniqueInput
  }

  /**
   * Seccion updateMany
   */
  export type SeccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Seccions.
     */
    data: XOR<SeccionUpdateManyMutationInput, SeccionUncheckedUpdateManyInput>
    /**
     * Filter which Seccions to update
     */
    where?: SeccionWhereInput
    /**
     * Limit how many Seccions to update.
     */
    limit?: number
  }

  /**
   * Seccion updateManyAndReturn
   */
  export type SeccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * The data used to update Seccions.
     */
    data: XOR<SeccionUpdateManyMutationInput, SeccionUncheckedUpdateManyInput>
    /**
     * Filter which Seccions to update
     */
    where?: SeccionWhereInput
    /**
     * Limit how many Seccions to update.
     */
    limit?: number
  }

  /**
   * Seccion upsert
   */
  export type SeccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * The filter to search for the Seccion to update in case it exists.
     */
    where: SeccionWhereUniqueInput
    /**
     * In case the Seccion found by the `where` argument doesn't exist, create a new Seccion with this data.
     */
    create: XOR<SeccionCreateInput, SeccionUncheckedCreateInput>
    /**
     * In case the Seccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeccionUpdateInput, SeccionUncheckedUpdateInput>
  }

  /**
   * Seccion delete
   */
  export type SeccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
    /**
     * Filter which Seccion to delete.
     */
    where: SeccionWhereUniqueInput
  }

  /**
   * Seccion deleteMany
   */
  export type SeccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seccions to delete
     */
    where?: SeccionWhereInput
    /**
     * Limit how many Seccions to delete.
     */
    limit?: number
  }

  /**
   * Seccion.trabajadores
   */
  export type Seccion$trabajadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    where?: TrabajadorWhereInput
    orderBy?: TrabajadorOrderByWithRelationInput | TrabajadorOrderByWithRelationInput[]
    cursor?: TrabajadorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrabajadorScalarFieldEnum | TrabajadorScalarFieldEnum[]
  }

  /**
   * Seccion without action
   */
  export type SeccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seccion
     */
    select?: SeccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seccion
     */
    omit?: SeccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionInclude<ExtArgs> | null
  }


  /**
   * Model Trabajador
   */

  export type AggregateTrabajador = {
    _count: TrabajadorCountAggregateOutputType | null
    _avg: TrabajadorAvgAggregateOutputType | null
    _sum: TrabajadorSumAggregateOutputType | null
    _min: TrabajadorMinAggregateOutputType | null
    _max: TrabajadorMaxAggregateOutputType | null
  }

  export type TrabajadorAvgAggregateOutputType = {
    id_trabajador: number | null
    numero_hijos: number | null
    id_seccion: number | null
  }

  export type TrabajadorSumAggregateOutputType = {
    id_trabajador: number | null
    numero_hijos: number | null
    id_seccion: number | null
  }

  export type TrabajadorMinAggregateOutputType = {
    id_trabajador: number | null
    nombre: string | null
    apellido_paterno: string | null
    apellido_materno: string | null
    fecha_nacimiento: Date | null
    sexo: string | null
    curp: string | null
    rfc: string | null
    email: string | null
    situacion_sentimental: string | null
    numero_hijos: number | null
    numero_empleado: string | null
    numero_plaza: string | null
    fecha_ingreso: Date | null
    fecha_ingreso_gobierno: Date | null
    nivel_puesto: string | null
    nombre_puesto: string | null
    puesto_inpi: string | null
    adscripcion: string | null
    id_seccion: number | null
    nivel_estudios: string | null
    institucion_estudios: string | null
    certificado_estudios: boolean | null
    plaza_base: string | null
    fecha_actualizacion: Date | null
  }

  export type TrabajadorMaxAggregateOutputType = {
    id_trabajador: number | null
    nombre: string | null
    apellido_paterno: string | null
    apellido_materno: string | null
    fecha_nacimiento: Date | null
    sexo: string | null
    curp: string | null
    rfc: string | null
    email: string | null
    situacion_sentimental: string | null
    numero_hijos: number | null
    numero_empleado: string | null
    numero_plaza: string | null
    fecha_ingreso: Date | null
    fecha_ingreso_gobierno: Date | null
    nivel_puesto: string | null
    nombre_puesto: string | null
    puesto_inpi: string | null
    adscripcion: string | null
    id_seccion: number | null
    nivel_estudios: string | null
    institucion_estudios: string | null
    certificado_estudios: boolean | null
    plaza_base: string | null
    fecha_actualizacion: Date | null
  }

  export type TrabajadorCountAggregateOutputType = {
    id_trabajador: number
    nombre: number
    apellido_paterno: number
    apellido_materno: number
    fecha_nacimiento: number
    sexo: number
    curp: number
    rfc: number
    email: number
    situacion_sentimental: number
    numero_hijos: number
    numero_empleado: number
    numero_plaza: number
    fecha_ingreso: number
    fecha_ingreso_gobierno: number
    nivel_puesto: number
    nombre_puesto: number
    puesto_inpi: number
    adscripcion: number
    id_seccion: number
    nivel_estudios: number
    institucion_estudios: number
    certificado_estudios: number
    plaza_base: number
    fecha_actualizacion: number
    _all: number
  }


  export type TrabajadorAvgAggregateInputType = {
    id_trabajador?: true
    numero_hijos?: true
    id_seccion?: true
  }

  export type TrabajadorSumAggregateInputType = {
    id_trabajador?: true
    numero_hijos?: true
    id_seccion?: true
  }

  export type TrabajadorMinAggregateInputType = {
    id_trabajador?: true
    nombre?: true
    apellido_paterno?: true
    apellido_materno?: true
    fecha_nacimiento?: true
    sexo?: true
    curp?: true
    rfc?: true
    email?: true
    situacion_sentimental?: true
    numero_hijos?: true
    numero_empleado?: true
    numero_plaza?: true
    fecha_ingreso?: true
    fecha_ingreso_gobierno?: true
    nivel_puesto?: true
    nombre_puesto?: true
    puesto_inpi?: true
    adscripcion?: true
    id_seccion?: true
    nivel_estudios?: true
    institucion_estudios?: true
    certificado_estudios?: true
    plaza_base?: true
    fecha_actualizacion?: true
  }

  export type TrabajadorMaxAggregateInputType = {
    id_trabajador?: true
    nombre?: true
    apellido_paterno?: true
    apellido_materno?: true
    fecha_nacimiento?: true
    sexo?: true
    curp?: true
    rfc?: true
    email?: true
    situacion_sentimental?: true
    numero_hijos?: true
    numero_empleado?: true
    numero_plaza?: true
    fecha_ingreso?: true
    fecha_ingreso_gobierno?: true
    nivel_puesto?: true
    nombre_puesto?: true
    puesto_inpi?: true
    adscripcion?: true
    id_seccion?: true
    nivel_estudios?: true
    institucion_estudios?: true
    certificado_estudios?: true
    plaza_base?: true
    fecha_actualizacion?: true
  }

  export type TrabajadorCountAggregateInputType = {
    id_trabajador?: true
    nombre?: true
    apellido_paterno?: true
    apellido_materno?: true
    fecha_nacimiento?: true
    sexo?: true
    curp?: true
    rfc?: true
    email?: true
    situacion_sentimental?: true
    numero_hijos?: true
    numero_empleado?: true
    numero_plaza?: true
    fecha_ingreso?: true
    fecha_ingreso_gobierno?: true
    nivel_puesto?: true
    nombre_puesto?: true
    puesto_inpi?: true
    adscripcion?: true
    id_seccion?: true
    nivel_estudios?: true
    institucion_estudios?: true
    certificado_estudios?: true
    plaza_base?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type TrabajadorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Trabajador to aggregate.
     */
    where?: TrabajadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trabajadors to fetch.
     */
    orderBy?: TrabajadorOrderByWithRelationInput | TrabajadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TrabajadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trabajadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trabajadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Trabajadors
    **/
    _count?: true | TrabajadorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TrabajadorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TrabajadorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrabajadorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrabajadorMaxAggregateInputType
  }

  export type GetTrabajadorAggregateType<T extends TrabajadorAggregateArgs> = {
        [P in keyof T & keyof AggregateTrabajador]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrabajador[P]>
      : GetScalarType<T[P], AggregateTrabajador[P]>
  }




  export type TrabajadorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrabajadorWhereInput
    orderBy?: TrabajadorOrderByWithAggregationInput | TrabajadorOrderByWithAggregationInput[]
    by: TrabajadorScalarFieldEnum[] | TrabajadorScalarFieldEnum
    having?: TrabajadorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrabajadorCountAggregateInputType | true
    _avg?: TrabajadorAvgAggregateInputType
    _sum?: TrabajadorSumAggregateInputType
    _min?: TrabajadorMinAggregateInputType
    _max?: TrabajadorMaxAggregateInputType
  }

  export type TrabajadorGroupByOutputType = {
    id_trabajador: number
    nombre: string
    apellido_paterno: string
    apellido_materno: string | null
    fecha_nacimiento: Date
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental: string | null
    numero_hijos: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date
    fecha_ingreso_gobierno: Date
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios: string | null
    institucion_estudios: string | null
    certificado_estudios: boolean | null
    plaza_base: string | null
    fecha_actualizacion: Date | null
    _count: TrabajadorCountAggregateOutputType | null
    _avg: TrabajadorAvgAggregateOutputType | null
    _sum: TrabajadorSumAggregateOutputType | null
    _min: TrabajadorMinAggregateOutputType | null
    _max: TrabajadorMaxAggregateOutputType | null
  }

  type GetTrabajadorGroupByPayload<T extends TrabajadorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TrabajadorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrabajadorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrabajadorGroupByOutputType[P]>
            : GetScalarType<T[P], TrabajadorGroupByOutputType[P]>
        }
      >
    >


  export type TrabajadorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
    seccion?: boolean | SeccionDefaultArgs<ExtArgs>
    sanciones?: boolean | Trabajador$sancionesArgs<ExtArgs>
    _count?: boolean | TrabajadorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trabajador"]>

  export type TrabajadorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
    seccion?: boolean | SeccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trabajador"]>

  export type TrabajadorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
    seccion?: boolean | SeccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trabajador"]>

  export type TrabajadorSelectScalar = {
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
  }

  export type TrabajadorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_trabajador" | "nombre" | "apellido_paterno" | "apellido_materno" | "fecha_nacimiento" | "sexo" | "curp" | "rfc" | "email" | "situacion_sentimental" | "numero_hijos" | "numero_empleado" | "numero_plaza" | "fecha_ingreso" | "fecha_ingreso_gobierno" | "nivel_puesto" | "nombre_puesto" | "puesto_inpi" | "adscripcion" | "id_seccion" | "nivel_estudios" | "institucion_estudios" | "certificado_estudios" | "plaza_base" | "fecha_actualizacion", ExtArgs["result"]["trabajador"]>
  export type TrabajadorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seccion?: boolean | SeccionDefaultArgs<ExtArgs>
    sanciones?: boolean | Trabajador$sancionesArgs<ExtArgs>
    _count?: boolean | TrabajadorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TrabajadorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seccion?: boolean | SeccionDefaultArgs<ExtArgs>
  }
  export type TrabajadorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seccion?: boolean | SeccionDefaultArgs<ExtArgs>
  }

  export type $TrabajadorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Trabajador"
    objects: {
      seccion: Prisma.$SeccionPayload<ExtArgs>
      sanciones: Prisma.$SancionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_trabajador: number
      nombre: string
      apellido_paterno: string
      apellido_materno: string | null
      fecha_nacimiento: Date
      sexo: string
      curp: string
      rfc: string
      email: string
      situacion_sentimental: string | null
      numero_hijos: number
      numero_empleado: string
      numero_plaza: string
      fecha_ingreso: Date
      fecha_ingreso_gobierno: Date
      nivel_puesto: string
      nombre_puesto: string
      puesto_inpi: string | null
      adscripcion: string
      id_seccion: number
      nivel_estudios: string | null
      institucion_estudios: string | null
      certificado_estudios: boolean | null
      plaza_base: string | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["trabajador"]>
    composites: {}
  }

  type TrabajadorGetPayload<S extends boolean | null | undefined | TrabajadorDefaultArgs> = $Result.GetResult<Prisma.$TrabajadorPayload, S>

  type TrabajadorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TrabajadorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TrabajadorCountAggregateInputType | true
    }

  export interface TrabajadorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Trabajador'], meta: { name: 'Trabajador' } }
    /**
     * Find zero or one Trabajador that matches the filter.
     * @param {TrabajadorFindUniqueArgs} args - Arguments to find a Trabajador
     * @example
     * // Get one Trabajador
     * const trabajador = await prisma.trabajador.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TrabajadorFindUniqueArgs>(args: SelectSubset<T, TrabajadorFindUniqueArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Trabajador that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TrabajadorFindUniqueOrThrowArgs} args - Arguments to find a Trabajador
     * @example
     * // Get one Trabajador
     * const trabajador = await prisma.trabajador.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TrabajadorFindUniqueOrThrowArgs>(args: SelectSubset<T, TrabajadorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Trabajador that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorFindFirstArgs} args - Arguments to find a Trabajador
     * @example
     * // Get one Trabajador
     * const trabajador = await prisma.trabajador.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TrabajadorFindFirstArgs>(args?: SelectSubset<T, TrabajadorFindFirstArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Trabajador that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorFindFirstOrThrowArgs} args - Arguments to find a Trabajador
     * @example
     * // Get one Trabajador
     * const trabajador = await prisma.trabajador.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TrabajadorFindFirstOrThrowArgs>(args?: SelectSubset<T, TrabajadorFindFirstOrThrowArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Trabajadors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trabajadors
     * const trabajadors = await prisma.trabajador.findMany()
     * 
     * // Get first 10 Trabajadors
     * const trabajadors = await prisma.trabajador.findMany({ take: 10 })
     * 
     * // Only select the `id_trabajador`
     * const trabajadorWithId_trabajadorOnly = await prisma.trabajador.findMany({ select: { id_trabajador: true } })
     * 
     */
    findMany<T extends TrabajadorFindManyArgs>(args?: SelectSubset<T, TrabajadorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Trabajador.
     * @param {TrabajadorCreateArgs} args - Arguments to create a Trabajador.
     * @example
     * // Create one Trabajador
     * const Trabajador = await prisma.trabajador.create({
     *   data: {
     *     // ... data to create a Trabajador
     *   }
     * })
     * 
     */
    create<T extends TrabajadorCreateArgs>(args: SelectSubset<T, TrabajadorCreateArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Trabajadors.
     * @param {TrabajadorCreateManyArgs} args - Arguments to create many Trabajadors.
     * @example
     * // Create many Trabajadors
     * const trabajador = await prisma.trabajador.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TrabajadorCreateManyArgs>(args?: SelectSubset<T, TrabajadorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Trabajadors and returns the data saved in the database.
     * @param {TrabajadorCreateManyAndReturnArgs} args - Arguments to create many Trabajadors.
     * @example
     * // Create many Trabajadors
     * const trabajador = await prisma.trabajador.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Trabajadors and only return the `id_trabajador`
     * const trabajadorWithId_trabajadorOnly = await prisma.trabajador.createManyAndReturn({
     *   select: { id_trabajador: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TrabajadorCreateManyAndReturnArgs>(args?: SelectSubset<T, TrabajadorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Trabajador.
     * @param {TrabajadorDeleteArgs} args - Arguments to delete one Trabajador.
     * @example
     * // Delete one Trabajador
     * const Trabajador = await prisma.trabajador.delete({
     *   where: {
     *     // ... filter to delete one Trabajador
     *   }
     * })
     * 
     */
    delete<T extends TrabajadorDeleteArgs>(args: SelectSubset<T, TrabajadorDeleteArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Trabajador.
     * @param {TrabajadorUpdateArgs} args - Arguments to update one Trabajador.
     * @example
     * // Update one Trabajador
     * const trabajador = await prisma.trabajador.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TrabajadorUpdateArgs>(args: SelectSubset<T, TrabajadorUpdateArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Trabajadors.
     * @param {TrabajadorDeleteManyArgs} args - Arguments to filter Trabajadors to delete.
     * @example
     * // Delete a few Trabajadors
     * const { count } = await prisma.trabajador.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TrabajadorDeleteManyArgs>(args?: SelectSubset<T, TrabajadorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trabajadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trabajadors
     * const trabajador = await prisma.trabajador.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TrabajadorUpdateManyArgs>(args: SelectSubset<T, TrabajadorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trabajadors and returns the data updated in the database.
     * @param {TrabajadorUpdateManyAndReturnArgs} args - Arguments to update many Trabajadors.
     * @example
     * // Update many Trabajadors
     * const trabajador = await prisma.trabajador.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Trabajadors and only return the `id_trabajador`
     * const trabajadorWithId_trabajadorOnly = await prisma.trabajador.updateManyAndReturn({
     *   select: { id_trabajador: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TrabajadorUpdateManyAndReturnArgs>(args: SelectSubset<T, TrabajadorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Trabajador.
     * @param {TrabajadorUpsertArgs} args - Arguments to update or create a Trabajador.
     * @example
     * // Update or create a Trabajador
     * const trabajador = await prisma.trabajador.upsert({
     *   create: {
     *     // ... data to create a Trabajador
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Trabajador we want to update
     *   }
     * })
     */
    upsert<T extends TrabajadorUpsertArgs>(args: SelectSubset<T, TrabajadorUpsertArgs<ExtArgs>>): Prisma__TrabajadorClient<$Result.GetResult<Prisma.$TrabajadorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Trabajadors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorCountArgs} args - Arguments to filter Trabajadors to count.
     * @example
     * // Count the number of Trabajadors
     * const count = await prisma.trabajador.count({
     *   where: {
     *     // ... the filter for the Trabajadors we want to count
     *   }
     * })
    **/
    count<T extends TrabajadorCountArgs>(
      args?: Subset<T, TrabajadorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrabajadorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Trabajador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrabajadorAggregateArgs>(args: Subset<T, TrabajadorAggregateArgs>): Prisma.PrismaPromise<GetTrabajadorAggregateType<T>>

    /**
     * Group by Trabajador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrabajadorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrabajadorGroupByArgs['orderBy'] }
        : { orderBy?: TrabajadorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrabajadorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrabajadorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Trabajador model
   */
  readonly fields: TrabajadorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Trabajador.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TrabajadorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    seccion<T extends SeccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SeccionDefaultArgs<ExtArgs>>): Prisma__SeccionClient<$Result.GetResult<Prisma.$SeccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sanciones<T extends Trabajador$sancionesArgs<ExtArgs> = {}>(args?: Subset<T, Trabajador$sancionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Trabajador model
   */ 
  interface TrabajadorFieldRefs {
    readonly id_trabajador: FieldRef<"Trabajador", 'Int'>
    readonly nombre: FieldRef<"Trabajador", 'String'>
    readonly apellido_paterno: FieldRef<"Trabajador", 'String'>
    readonly apellido_materno: FieldRef<"Trabajador", 'String'>
    readonly fecha_nacimiento: FieldRef<"Trabajador", 'DateTime'>
    readonly sexo: FieldRef<"Trabajador", 'String'>
    readonly curp: FieldRef<"Trabajador", 'String'>
    readonly rfc: FieldRef<"Trabajador", 'String'>
    readonly email: FieldRef<"Trabajador", 'String'>
    readonly situacion_sentimental: FieldRef<"Trabajador", 'String'>
    readonly numero_hijos: FieldRef<"Trabajador", 'Int'>
    readonly numero_empleado: FieldRef<"Trabajador", 'String'>
    readonly numero_plaza: FieldRef<"Trabajador", 'String'>
    readonly fecha_ingreso: FieldRef<"Trabajador", 'DateTime'>
    readonly fecha_ingreso_gobierno: FieldRef<"Trabajador", 'DateTime'>
    readonly nivel_puesto: FieldRef<"Trabajador", 'String'>
    readonly nombre_puesto: FieldRef<"Trabajador", 'String'>
    readonly puesto_inpi: FieldRef<"Trabajador", 'String'>
    readonly adscripcion: FieldRef<"Trabajador", 'String'>
    readonly id_seccion: FieldRef<"Trabajador", 'Int'>
    readonly nivel_estudios: FieldRef<"Trabajador", 'String'>
    readonly institucion_estudios: FieldRef<"Trabajador", 'String'>
    readonly certificado_estudios: FieldRef<"Trabajador", 'Boolean'>
    readonly plaza_base: FieldRef<"Trabajador", 'String'>
    readonly fecha_actualizacion: FieldRef<"Trabajador", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Trabajador findUnique
   */
  export type TrabajadorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * Filter, which Trabajador to fetch.
     */
    where: TrabajadorWhereUniqueInput
  }

  /**
   * Trabajador findUniqueOrThrow
   */
  export type TrabajadorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * Filter, which Trabajador to fetch.
     */
    where: TrabajadorWhereUniqueInput
  }

  /**
   * Trabajador findFirst
   */
  export type TrabajadorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * Filter, which Trabajador to fetch.
     */
    where?: TrabajadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trabajadors to fetch.
     */
    orderBy?: TrabajadorOrderByWithRelationInput | TrabajadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Trabajadors.
     */
    cursor?: TrabajadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trabajadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trabajadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Trabajadors.
     */
    distinct?: TrabajadorScalarFieldEnum | TrabajadorScalarFieldEnum[]
  }

  /**
   * Trabajador findFirstOrThrow
   */
  export type TrabajadorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * Filter, which Trabajador to fetch.
     */
    where?: TrabajadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trabajadors to fetch.
     */
    orderBy?: TrabajadorOrderByWithRelationInput | TrabajadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Trabajadors.
     */
    cursor?: TrabajadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trabajadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trabajadors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Trabajadors.
     */
    distinct?: TrabajadorScalarFieldEnum | TrabajadorScalarFieldEnum[]
  }

  /**
   * Trabajador findMany
   */
  export type TrabajadorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * Filter, which Trabajadors to fetch.
     */
    where?: TrabajadorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trabajadors to fetch.
     */
    orderBy?: TrabajadorOrderByWithRelationInput | TrabajadorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Trabajadors.
     */
    cursor?: TrabajadorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trabajadors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trabajadors.
     */
    skip?: number
    distinct?: TrabajadorScalarFieldEnum | TrabajadorScalarFieldEnum[]
  }

  /**
   * Trabajador create
   */
  export type TrabajadorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * The data needed to create a Trabajador.
     */
    data: XOR<TrabajadorCreateInput, TrabajadorUncheckedCreateInput>
  }

  /**
   * Trabajador createMany
   */
  export type TrabajadorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Trabajadors.
     */
    data: TrabajadorCreateManyInput | TrabajadorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Trabajador createManyAndReturn
   */
  export type TrabajadorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * The data used to create many Trabajadors.
     */
    data: TrabajadorCreateManyInput | TrabajadorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Trabajador update
   */
  export type TrabajadorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * The data needed to update a Trabajador.
     */
    data: XOR<TrabajadorUpdateInput, TrabajadorUncheckedUpdateInput>
    /**
     * Choose, which Trabajador to update.
     */
    where: TrabajadorWhereUniqueInput
  }

  /**
   * Trabajador updateMany
   */
  export type TrabajadorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Trabajadors.
     */
    data: XOR<TrabajadorUpdateManyMutationInput, TrabajadorUncheckedUpdateManyInput>
    /**
     * Filter which Trabajadors to update
     */
    where?: TrabajadorWhereInput
    /**
     * Limit how many Trabajadors to update.
     */
    limit?: number
  }

  /**
   * Trabajador updateManyAndReturn
   */
  export type TrabajadorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * The data used to update Trabajadors.
     */
    data: XOR<TrabajadorUpdateManyMutationInput, TrabajadorUncheckedUpdateManyInput>
    /**
     * Filter which Trabajadors to update
     */
    where?: TrabajadorWhereInput
    /**
     * Limit how many Trabajadors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Trabajador upsert
   */
  export type TrabajadorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * The filter to search for the Trabajador to update in case it exists.
     */
    where: TrabajadorWhereUniqueInput
    /**
     * In case the Trabajador found by the `where` argument doesn't exist, create a new Trabajador with this data.
     */
    create: XOR<TrabajadorCreateInput, TrabajadorUncheckedCreateInput>
    /**
     * In case the Trabajador was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TrabajadorUpdateInput, TrabajadorUncheckedUpdateInput>
  }

  /**
   * Trabajador delete
   */
  export type TrabajadorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
    /**
     * Filter which Trabajador to delete.
     */
    where: TrabajadorWhereUniqueInput
  }

  /**
   * Trabajador deleteMany
   */
  export type TrabajadorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Trabajadors to delete
     */
    where?: TrabajadorWhereInput
    /**
     * Limit how many Trabajadors to delete.
     */
    limit?: number
  }

  /**
   * Trabajador.sanciones
   */
  export type Trabajador$sancionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sancion
     */
    select?: SancionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sancion
     */
    omit?: SancionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionInclude<ExtArgs> | null
    where?: SancionWhereInput
    orderBy?: SancionOrderByWithRelationInput | SancionOrderByWithRelationInput[]
    cursor?: SancionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SancionScalarFieldEnum | SancionScalarFieldEnum[]
  }

  /**
   * Trabajador without action
   */
  export type TrabajadorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trabajador
     */
    select?: TrabajadorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Trabajador
     */
    omit?: TrabajadorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorInclude<ExtArgs> | null
  }


  /**
   * Model Auditoria
   */

  export type AggregateAuditoria = {
    _count: AuditoriaCountAggregateOutputType | null
    _avg: AuditoriaAvgAggregateOutputType | null
    _sum: AuditoriaSumAggregateOutputType | null
    _min: AuditoriaMinAggregateOutputType | null
    _max: AuditoriaMaxAggregateOutputType | null
  }

  export type AuditoriaAvgAggregateOutputType = {
    id_auditoria: number | null
    id_registro: number | null
  }

  export type AuditoriaSumAggregateOutputType = {
    id_auditoria: number | null
    id_registro: number | null
  }

  export type AuditoriaMinAggregateOutputType = {
    id_auditoria: number | null
    tabla_afectada: string | null
    id_registro: number | null
    accion: string | null
    usuario: string | null
    fecha_registro: Date | null
  }

  export type AuditoriaMaxAggregateOutputType = {
    id_auditoria: number | null
    tabla_afectada: string | null
    id_registro: number | null
    accion: string | null
    usuario: string | null
    fecha_registro: Date | null
  }

  export type AuditoriaCountAggregateOutputType = {
    id_auditoria: number
    tabla_afectada: number
    id_registro: number
    accion: number
    datos_anteriores: number
    datos_nuevos: number
    usuario: number
    fecha_registro: number
    _all: number
  }


  export type AuditoriaAvgAggregateInputType = {
    id_auditoria?: true
    id_registro?: true
  }

  export type AuditoriaSumAggregateInputType = {
    id_auditoria?: true
    id_registro?: true
  }

  export type AuditoriaMinAggregateInputType = {
    id_auditoria?: true
    tabla_afectada?: true
    id_registro?: true
    accion?: true
    usuario?: true
    fecha_registro?: true
  }

  export type AuditoriaMaxAggregateInputType = {
    id_auditoria?: true
    tabla_afectada?: true
    id_registro?: true
    accion?: true
    usuario?: true
    fecha_registro?: true
  }

  export type AuditoriaCountAggregateInputType = {
    id_auditoria?: true
    tabla_afectada?: true
    id_registro?: true
    accion?: true
    datos_anteriores?: true
    datos_nuevos?: true
    usuario?: true
    fecha_registro?: true
    _all?: true
  }

  export type AuditoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Auditoria to aggregate.
     */
    where?: AuditoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Auditorias to fetch.
     */
    orderBy?: AuditoriaOrderByWithRelationInput | AuditoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Auditorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Auditorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Auditorias
    **/
    _count?: true | AuditoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AuditoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AuditoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditoriaMaxAggregateInputType
  }

  export type GetAuditoriaAggregateType<T extends AuditoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditoria[P]>
      : GetScalarType<T[P], AggregateAuditoria[P]>
  }




  export type AuditoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditoriaWhereInput
    orderBy?: AuditoriaOrderByWithAggregationInput | AuditoriaOrderByWithAggregationInput[]
    by: AuditoriaScalarFieldEnum[] | AuditoriaScalarFieldEnum
    having?: AuditoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditoriaCountAggregateInputType | true
    _avg?: AuditoriaAvgAggregateInputType
    _sum?: AuditoriaSumAggregateInputType
    _min?: AuditoriaMinAggregateInputType
    _max?: AuditoriaMaxAggregateInputType
  }

  export type AuditoriaGroupByOutputType = {
    id_auditoria: number
    tabla_afectada: string
    id_registro: number
    accion: string
    datos_anteriores: JsonValue | null
    datos_nuevos: JsonValue | null
    usuario: string
    fecha_registro: Date | null
    _count: AuditoriaCountAggregateOutputType | null
    _avg: AuditoriaAvgAggregateOutputType | null
    _sum: AuditoriaSumAggregateOutputType | null
    _min: AuditoriaMinAggregateOutputType | null
    _max: AuditoriaMaxAggregateOutputType | null
  }

  type GetAuditoriaGroupByPayload<T extends AuditoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditoriaGroupByOutputType[P]>
            : GetScalarType<T[P], AuditoriaGroupByOutputType[P]>
        }
      >
    >


  export type AuditoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_auditoria?: boolean
    tabla_afectada?: boolean
    id_registro?: boolean
    accion?: boolean
    datos_anteriores?: boolean
    datos_nuevos?: boolean
    usuario?: boolean
    fecha_registro?: boolean
  }, ExtArgs["result"]["auditoria"]>

  export type AuditoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_auditoria?: boolean
    tabla_afectada?: boolean
    id_registro?: boolean
    accion?: boolean
    datos_anteriores?: boolean
    datos_nuevos?: boolean
    usuario?: boolean
    fecha_registro?: boolean
  }, ExtArgs["result"]["auditoria"]>

  export type AuditoriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_auditoria?: boolean
    tabla_afectada?: boolean
    id_registro?: boolean
    accion?: boolean
    datos_anteriores?: boolean
    datos_nuevos?: boolean
    usuario?: boolean
    fecha_registro?: boolean
  }, ExtArgs["result"]["auditoria"]>

  export type AuditoriaSelectScalar = {
    id_auditoria?: boolean
    tabla_afectada?: boolean
    id_registro?: boolean
    accion?: boolean
    datos_anteriores?: boolean
    datos_nuevos?: boolean
    usuario?: boolean
    fecha_registro?: boolean
  }

  export type AuditoriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_auditoria" | "tabla_afectada" | "id_registro" | "accion" | "datos_anteriores" | "datos_nuevos" | "usuario" | "fecha_registro", ExtArgs["result"]["auditoria"]>

  export type $AuditoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Auditoria"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_auditoria: number
      tabla_afectada: string
      id_registro: number
      accion: string
      datos_anteriores: Prisma.JsonValue | null
      datos_nuevos: Prisma.JsonValue | null
      usuario: string
      fecha_registro: Date | null
    }, ExtArgs["result"]["auditoria"]>
    composites: {}
  }

  type AuditoriaGetPayload<S extends boolean | null | undefined | AuditoriaDefaultArgs> = $Result.GetResult<Prisma.$AuditoriaPayload, S>

  type AuditoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AuditoriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AuditoriaCountAggregateInputType | true
    }

  export interface AuditoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Auditoria'], meta: { name: 'Auditoria' } }
    /**
     * Find zero or one Auditoria that matches the filter.
     * @param {AuditoriaFindUniqueArgs} args - Arguments to find a Auditoria
     * @example
     * // Get one Auditoria
     * const auditoria = await prisma.auditoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditoriaFindUniqueArgs>(args: SelectSubset<T, AuditoriaFindUniqueArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auditoria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AuditoriaFindUniqueOrThrowArgs} args - Arguments to find a Auditoria
     * @example
     * // Get one Auditoria
     * const auditoria = await prisma.auditoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auditoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaFindFirstArgs} args - Arguments to find a Auditoria
     * @example
     * // Get one Auditoria
     * const auditoria = await prisma.auditoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditoriaFindFirstArgs>(args?: SelectSubset<T, AuditoriaFindFirstArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auditoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaFindFirstOrThrowArgs} args - Arguments to find a Auditoria
     * @example
     * // Get one Auditoria
     * const auditoria = await prisma.auditoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auditorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auditorias
     * const auditorias = await prisma.auditoria.findMany()
     * 
     * // Get first 10 Auditorias
     * const auditorias = await prisma.auditoria.findMany({ take: 10 })
     * 
     * // Only select the `id_auditoria`
     * const auditoriaWithId_auditoriaOnly = await prisma.auditoria.findMany({ select: { id_auditoria: true } })
     * 
     */
    findMany<T extends AuditoriaFindManyArgs>(args?: SelectSubset<T, AuditoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auditoria.
     * @param {AuditoriaCreateArgs} args - Arguments to create a Auditoria.
     * @example
     * // Create one Auditoria
     * const Auditoria = await prisma.auditoria.create({
     *   data: {
     *     // ... data to create a Auditoria
     *   }
     * })
     * 
     */
    create<T extends AuditoriaCreateArgs>(args: SelectSubset<T, AuditoriaCreateArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auditorias.
     * @param {AuditoriaCreateManyArgs} args - Arguments to create many Auditorias.
     * @example
     * // Create many Auditorias
     * const auditoria = await prisma.auditoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditoriaCreateManyArgs>(args?: SelectSubset<T, AuditoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Auditorias and returns the data saved in the database.
     * @param {AuditoriaCreateManyAndReturnArgs} args - Arguments to create many Auditorias.
     * @example
     * // Create many Auditorias
     * const auditoria = await prisma.auditoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Auditorias and only return the `id_auditoria`
     * const auditoriaWithId_auditoriaOnly = await prisma.auditoria.createManyAndReturn({
     *   select: { id_auditoria: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Auditoria.
     * @param {AuditoriaDeleteArgs} args - Arguments to delete one Auditoria.
     * @example
     * // Delete one Auditoria
     * const Auditoria = await prisma.auditoria.delete({
     *   where: {
     *     // ... filter to delete one Auditoria
     *   }
     * })
     * 
     */
    delete<T extends AuditoriaDeleteArgs>(args: SelectSubset<T, AuditoriaDeleteArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auditoria.
     * @param {AuditoriaUpdateArgs} args - Arguments to update one Auditoria.
     * @example
     * // Update one Auditoria
     * const auditoria = await prisma.auditoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditoriaUpdateArgs>(args: SelectSubset<T, AuditoriaUpdateArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auditorias.
     * @param {AuditoriaDeleteManyArgs} args - Arguments to filter Auditorias to delete.
     * @example
     * // Delete a few Auditorias
     * const { count } = await prisma.auditoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditoriaDeleteManyArgs>(args?: SelectSubset<T, AuditoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auditorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auditorias
     * const auditoria = await prisma.auditoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditoriaUpdateManyArgs>(args: SelectSubset<T, AuditoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auditorias and returns the data updated in the database.
     * @param {AuditoriaUpdateManyAndReturnArgs} args - Arguments to update many Auditorias.
     * @example
     * // Update many Auditorias
     * const auditoria = await prisma.auditoria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Auditorias and only return the `id_auditoria`
     * const auditoriaWithId_auditoriaOnly = await prisma.auditoria.updateManyAndReturn({
     *   select: { id_auditoria: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AuditoriaUpdateManyAndReturnArgs>(args: SelectSubset<T, AuditoriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Auditoria.
     * @param {AuditoriaUpsertArgs} args - Arguments to update or create a Auditoria.
     * @example
     * // Update or create a Auditoria
     * const auditoria = await prisma.auditoria.upsert({
     *   create: {
     *     // ... data to create a Auditoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auditoria we want to update
     *   }
     * })
     */
    upsert<T extends AuditoriaUpsertArgs>(args: SelectSubset<T, AuditoriaUpsertArgs<ExtArgs>>): Prisma__AuditoriaClient<$Result.GetResult<Prisma.$AuditoriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auditorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaCountArgs} args - Arguments to filter Auditorias to count.
     * @example
     * // Count the number of Auditorias
     * const count = await prisma.auditoria.count({
     *   where: {
     *     // ... the filter for the Auditorias we want to count
     *   }
     * })
    **/
    count<T extends AuditoriaCountArgs>(
      args?: Subset<T, AuditoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auditoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditoriaAggregateArgs>(args: Subset<T, AuditoriaAggregateArgs>): Prisma.PrismaPromise<GetAuditoriaAggregateType<T>>

    /**
     * Group by Auditoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditoriaGroupByArgs['orderBy'] }
        : { orderBy?: AuditoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Auditoria model
   */
  readonly fields: AuditoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Auditoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Auditoria model
   */ 
  interface AuditoriaFieldRefs {
    readonly id_auditoria: FieldRef<"Auditoria", 'Int'>
    readonly tabla_afectada: FieldRef<"Auditoria", 'String'>
    readonly id_registro: FieldRef<"Auditoria", 'Int'>
    readonly accion: FieldRef<"Auditoria", 'String'>
    readonly datos_anteriores: FieldRef<"Auditoria", 'Json'>
    readonly datos_nuevos: FieldRef<"Auditoria", 'Json'>
    readonly usuario: FieldRef<"Auditoria", 'String'>
    readonly fecha_registro: FieldRef<"Auditoria", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Auditoria findUnique
   */
  export type AuditoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * Filter, which Auditoria to fetch.
     */
    where: AuditoriaWhereUniqueInput
  }

  /**
   * Auditoria findUniqueOrThrow
   */
  export type AuditoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * Filter, which Auditoria to fetch.
     */
    where: AuditoriaWhereUniqueInput
  }

  /**
   * Auditoria findFirst
   */
  export type AuditoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * Filter, which Auditoria to fetch.
     */
    where?: AuditoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Auditorias to fetch.
     */
    orderBy?: AuditoriaOrderByWithRelationInput | AuditoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Auditorias.
     */
    cursor?: AuditoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Auditorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Auditorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Auditorias.
     */
    distinct?: AuditoriaScalarFieldEnum | AuditoriaScalarFieldEnum[]
  }

  /**
   * Auditoria findFirstOrThrow
   */
  export type AuditoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * Filter, which Auditoria to fetch.
     */
    where?: AuditoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Auditorias to fetch.
     */
    orderBy?: AuditoriaOrderByWithRelationInput | AuditoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Auditorias.
     */
    cursor?: AuditoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Auditorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Auditorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Auditorias.
     */
    distinct?: AuditoriaScalarFieldEnum | AuditoriaScalarFieldEnum[]
  }

  /**
   * Auditoria findMany
   */
  export type AuditoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * Filter, which Auditorias to fetch.
     */
    where?: AuditoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Auditorias to fetch.
     */
    orderBy?: AuditoriaOrderByWithRelationInput | AuditoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Auditorias.
     */
    cursor?: AuditoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Auditorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Auditorias.
     */
    skip?: number
    distinct?: AuditoriaScalarFieldEnum | AuditoriaScalarFieldEnum[]
  }

  /**
   * Auditoria create
   */
  export type AuditoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * The data needed to create a Auditoria.
     */
    data: XOR<AuditoriaCreateInput, AuditoriaUncheckedCreateInput>
  }

  /**
   * Auditoria createMany
   */
  export type AuditoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Auditorias.
     */
    data: AuditoriaCreateManyInput | AuditoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Auditoria createManyAndReturn
   */
  export type AuditoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * The data used to create many Auditorias.
     */
    data: AuditoriaCreateManyInput | AuditoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Auditoria update
   */
  export type AuditoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * The data needed to update a Auditoria.
     */
    data: XOR<AuditoriaUpdateInput, AuditoriaUncheckedUpdateInput>
    /**
     * Choose, which Auditoria to update.
     */
    where: AuditoriaWhereUniqueInput
  }

  /**
   * Auditoria updateMany
   */
  export type AuditoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Auditorias.
     */
    data: XOR<AuditoriaUpdateManyMutationInput, AuditoriaUncheckedUpdateManyInput>
    /**
     * Filter which Auditorias to update
     */
    where?: AuditoriaWhereInput
    /**
     * Limit how many Auditorias to update.
     */
    limit?: number
  }

  /**
   * Auditoria updateManyAndReturn
   */
  export type AuditoriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * The data used to update Auditorias.
     */
    data: XOR<AuditoriaUpdateManyMutationInput, AuditoriaUncheckedUpdateManyInput>
    /**
     * Filter which Auditorias to update
     */
    where?: AuditoriaWhereInput
    /**
     * Limit how many Auditorias to update.
     */
    limit?: number
  }

  /**
   * Auditoria upsert
   */
  export type AuditoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * The filter to search for the Auditoria to update in case it exists.
     */
    where: AuditoriaWhereUniqueInput
    /**
     * In case the Auditoria found by the `where` argument doesn't exist, create a new Auditoria with this data.
     */
    create: XOR<AuditoriaCreateInput, AuditoriaUncheckedCreateInput>
    /**
     * In case the Auditoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditoriaUpdateInput, AuditoriaUncheckedUpdateInput>
  }

  /**
   * Auditoria delete
   */
  export type AuditoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
    /**
     * Filter which Auditoria to delete.
     */
    where: AuditoriaWhereUniqueInput
  }

  /**
   * Auditoria deleteMany
   */
  export type AuditoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Auditorias to delete
     */
    where?: AuditoriaWhereInput
    /**
     * Limit how many Auditorias to delete.
     */
    limit?: number
  }

  /**
   * Auditoria without action
   */
  export type AuditoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auditoria
     */
    select?: AuditoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Auditoria
     */
    omit?: AuditoriaOmit<ExtArgs> | null
  }


  /**
   * Model CambioAdscripcion
   */

  export type AggregateCambioAdscripcion = {
    _count: CambioAdscripcionCountAggregateOutputType | null
    _avg: CambioAdscripcionAvgAggregateOutputType | null
    _sum: CambioAdscripcionSumAggregateOutputType | null
    _min: CambioAdscripcionMinAggregateOutputType | null
    _max: CambioAdscripcionMaxAggregateOutputType | null
  }

  export type CambioAdscripcionAvgAggregateOutputType = {
    id_cambio: number | null
    id_trabajador: number | null
    documento_respaldo_id: number | null
  }

  export type CambioAdscripcionSumAggregateOutputType = {
    id_cambio: number | null
    id_trabajador: number | null
    documento_respaldo_id: number | null
  }

  export type CambioAdscripcionMinAggregateOutputType = {
    id_cambio: number | null
    id_trabajador: number | null
    adscripcion_anterior: string | null
    adscripcion_nueva: string | null
    fecha_cambio: Date | null
    motivo: string | null
    documento_respaldo_id: number | null
    usuario_registro: string | null
    fecha_registro: Date | null
  }

  export type CambioAdscripcionMaxAggregateOutputType = {
    id_cambio: number | null
    id_trabajador: number | null
    adscripcion_anterior: string | null
    adscripcion_nueva: string | null
    fecha_cambio: Date | null
    motivo: string | null
    documento_respaldo_id: number | null
    usuario_registro: string | null
    fecha_registro: Date | null
  }

  export type CambioAdscripcionCountAggregateOutputType = {
    id_cambio: number
    id_trabajador: number
    adscripcion_anterior: number
    adscripcion_nueva: number
    fecha_cambio: number
    motivo: number
    documento_respaldo_id: number
    usuario_registro: number
    fecha_registro: number
    _all: number
  }


  export type CambioAdscripcionAvgAggregateInputType = {
    id_cambio?: true
    id_trabajador?: true
    documento_respaldo_id?: true
  }

  export type CambioAdscripcionSumAggregateInputType = {
    id_cambio?: true
    id_trabajador?: true
    documento_respaldo_id?: true
  }

  export type CambioAdscripcionMinAggregateInputType = {
    id_cambio?: true
    id_trabajador?: true
    adscripcion_anterior?: true
    adscripcion_nueva?: true
    fecha_cambio?: true
    motivo?: true
    documento_respaldo_id?: true
    usuario_registro?: true
    fecha_registro?: true
  }

  export type CambioAdscripcionMaxAggregateInputType = {
    id_cambio?: true
    id_trabajador?: true
    adscripcion_anterior?: true
    adscripcion_nueva?: true
    fecha_cambio?: true
    motivo?: true
    documento_respaldo_id?: true
    usuario_registro?: true
    fecha_registro?: true
  }

  export type CambioAdscripcionCountAggregateInputType = {
    id_cambio?: true
    id_trabajador?: true
    adscripcion_anterior?: true
    adscripcion_nueva?: true
    fecha_cambio?: true
    motivo?: true
    documento_respaldo_id?: true
    usuario_registro?: true
    fecha_registro?: true
    _all?: true
  }

  export type CambioAdscripcionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CambioAdscripcion to aggregate.
     */
    where?: CambioAdscripcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CambioAdscripcions to fetch.
     */
    orderBy?: CambioAdscripcionOrderByWithRelationInput | CambioAdscripcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CambioAdscripcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CambioAdscripcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CambioAdscripcions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CambioAdscripcions
    **/
    _count?: true | CambioAdscripcionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CambioAdscripcionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CambioAdscripcionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CambioAdscripcionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CambioAdscripcionMaxAggregateInputType
  }

  export type GetCambioAdscripcionAggregateType<T extends CambioAdscripcionAggregateArgs> = {
        [P in keyof T & keyof AggregateCambioAdscripcion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCambioAdscripcion[P]>
      : GetScalarType<T[P], AggregateCambioAdscripcion[P]>
  }




  export type CambioAdscripcionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CambioAdscripcionWhereInput
    orderBy?: CambioAdscripcionOrderByWithAggregationInput | CambioAdscripcionOrderByWithAggregationInput[]
    by: CambioAdscripcionScalarFieldEnum[] | CambioAdscripcionScalarFieldEnum
    having?: CambioAdscripcionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CambioAdscripcionCountAggregateInputType | true
    _avg?: CambioAdscripcionAvgAggregateInputType
    _sum?: CambioAdscripcionSumAggregateInputType
    _min?: CambioAdscripcionMinAggregateInputType
    _max?: CambioAdscripcionMaxAggregateInputType
  }

  export type CambioAdscripcionGroupByOutputType = {
    id_cambio: number
    id_trabajador: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date
    motivo: string
    documento_respaldo_id: number | null
    usuario_registro: string | null
    fecha_registro: Date | null
    _count: CambioAdscripcionCountAggregateOutputType | null
    _avg: CambioAdscripcionAvgAggregateOutputType | null
    _sum: CambioAdscripcionSumAggregateOutputType | null
    _min: CambioAdscripcionMinAggregateOutputType | null
    _max: CambioAdscripcionMaxAggregateOutputType | null
  }

  type GetCambioAdscripcionGroupByPayload<T extends CambioAdscripcionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CambioAdscripcionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CambioAdscripcionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CambioAdscripcionGroupByOutputType[P]>
            : GetScalarType<T[P], CambioAdscripcionGroupByOutputType[P]>
        }
      >
    >


  export type CambioAdscripcionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cambio?: boolean
    id_trabajador?: boolean
    adscripcion_anterior?: boolean
    adscripcion_nueva?: boolean
    fecha_cambio?: boolean
    motivo?: boolean
    documento_respaldo_id?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_respaldo?: boolean | CambioAdscripcion$documento_respaldoArgs<ExtArgs>
  }, ExtArgs["result"]["cambioAdscripcion"]>

  export type CambioAdscripcionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cambio?: boolean
    id_trabajador?: boolean
    adscripcion_anterior?: boolean
    adscripcion_nueva?: boolean
    fecha_cambio?: boolean
    motivo?: boolean
    documento_respaldo_id?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_respaldo?: boolean | CambioAdscripcion$documento_respaldoArgs<ExtArgs>
  }, ExtArgs["result"]["cambioAdscripcion"]>

  export type CambioAdscripcionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cambio?: boolean
    id_trabajador?: boolean
    adscripcion_anterior?: boolean
    adscripcion_nueva?: boolean
    fecha_cambio?: boolean
    motivo?: boolean
    documento_respaldo_id?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_respaldo?: boolean | CambioAdscripcion$documento_respaldoArgs<ExtArgs>
  }, ExtArgs["result"]["cambioAdscripcion"]>

  export type CambioAdscripcionSelectScalar = {
    id_cambio?: boolean
    id_trabajador?: boolean
    adscripcion_anterior?: boolean
    adscripcion_nueva?: boolean
    fecha_cambio?: boolean
    motivo?: boolean
    documento_respaldo_id?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
  }

  export type CambioAdscripcionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cambio" | "id_trabajador" | "adscripcion_anterior" | "adscripcion_nueva" | "fecha_cambio" | "motivo" | "documento_respaldo_id" | "usuario_registro" | "fecha_registro", ExtArgs["result"]["cambioAdscripcion"]>
  export type CambioAdscripcionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_respaldo?: boolean | CambioAdscripcion$documento_respaldoArgs<ExtArgs>
  }
  export type CambioAdscripcionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_respaldo?: boolean | CambioAdscripcion$documento_respaldoArgs<ExtArgs>
  }
  export type CambioAdscripcionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_respaldo?: boolean | CambioAdscripcion$documento_respaldoArgs<ExtArgs>
  }

  export type $CambioAdscripcionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CambioAdscripcion"
    objects: {
      trabajador: Prisma.$TrabajadorSntiPayload<ExtArgs>
      documento_respaldo: Prisma.$DocumentoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cambio: number
      id_trabajador: number
      adscripcion_anterior: string
      adscripcion_nueva: string
      fecha_cambio: Date
      motivo: string
      documento_respaldo_id: number | null
      usuario_registro: string | null
      fecha_registro: Date | null
    }, ExtArgs["result"]["cambioAdscripcion"]>
    composites: {}
  }

  type CambioAdscripcionGetPayload<S extends boolean | null | undefined | CambioAdscripcionDefaultArgs> = $Result.GetResult<Prisma.$CambioAdscripcionPayload, S>

  type CambioAdscripcionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CambioAdscripcionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CambioAdscripcionCountAggregateInputType | true
    }

  export interface CambioAdscripcionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CambioAdscripcion'], meta: { name: 'CambioAdscripcion' } }
    /**
     * Find zero or one CambioAdscripcion that matches the filter.
     * @param {CambioAdscripcionFindUniqueArgs} args - Arguments to find a CambioAdscripcion
     * @example
     * // Get one CambioAdscripcion
     * const cambioAdscripcion = await prisma.cambioAdscripcion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CambioAdscripcionFindUniqueArgs>(args: SelectSubset<T, CambioAdscripcionFindUniqueArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CambioAdscripcion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CambioAdscripcionFindUniqueOrThrowArgs} args - Arguments to find a CambioAdscripcion
     * @example
     * // Get one CambioAdscripcion
     * const cambioAdscripcion = await prisma.cambioAdscripcion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CambioAdscripcionFindUniqueOrThrowArgs>(args: SelectSubset<T, CambioAdscripcionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CambioAdscripcion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionFindFirstArgs} args - Arguments to find a CambioAdscripcion
     * @example
     * // Get one CambioAdscripcion
     * const cambioAdscripcion = await prisma.cambioAdscripcion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CambioAdscripcionFindFirstArgs>(args?: SelectSubset<T, CambioAdscripcionFindFirstArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CambioAdscripcion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionFindFirstOrThrowArgs} args - Arguments to find a CambioAdscripcion
     * @example
     * // Get one CambioAdscripcion
     * const cambioAdscripcion = await prisma.cambioAdscripcion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CambioAdscripcionFindFirstOrThrowArgs>(args?: SelectSubset<T, CambioAdscripcionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CambioAdscripcions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CambioAdscripcions
     * const cambioAdscripcions = await prisma.cambioAdscripcion.findMany()
     * 
     * // Get first 10 CambioAdscripcions
     * const cambioAdscripcions = await prisma.cambioAdscripcion.findMany({ take: 10 })
     * 
     * // Only select the `id_cambio`
     * const cambioAdscripcionWithId_cambioOnly = await prisma.cambioAdscripcion.findMany({ select: { id_cambio: true } })
     * 
     */
    findMany<T extends CambioAdscripcionFindManyArgs>(args?: SelectSubset<T, CambioAdscripcionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CambioAdscripcion.
     * @param {CambioAdscripcionCreateArgs} args - Arguments to create a CambioAdscripcion.
     * @example
     * // Create one CambioAdscripcion
     * const CambioAdscripcion = await prisma.cambioAdscripcion.create({
     *   data: {
     *     // ... data to create a CambioAdscripcion
     *   }
     * })
     * 
     */
    create<T extends CambioAdscripcionCreateArgs>(args: SelectSubset<T, CambioAdscripcionCreateArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CambioAdscripcions.
     * @param {CambioAdscripcionCreateManyArgs} args - Arguments to create many CambioAdscripcions.
     * @example
     * // Create many CambioAdscripcions
     * const cambioAdscripcion = await prisma.cambioAdscripcion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CambioAdscripcionCreateManyArgs>(args?: SelectSubset<T, CambioAdscripcionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CambioAdscripcions and returns the data saved in the database.
     * @param {CambioAdscripcionCreateManyAndReturnArgs} args - Arguments to create many CambioAdscripcions.
     * @example
     * // Create many CambioAdscripcions
     * const cambioAdscripcion = await prisma.cambioAdscripcion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CambioAdscripcions and only return the `id_cambio`
     * const cambioAdscripcionWithId_cambioOnly = await prisma.cambioAdscripcion.createManyAndReturn({
     *   select: { id_cambio: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CambioAdscripcionCreateManyAndReturnArgs>(args?: SelectSubset<T, CambioAdscripcionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CambioAdscripcion.
     * @param {CambioAdscripcionDeleteArgs} args - Arguments to delete one CambioAdscripcion.
     * @example
     * // Delete one CambioAdscripcion
     * const CambioAdscripcion = await prisma.cambioAdscripcion.delete({
     *   where: {
     *     // ... filter to delete one CambioAdscripcion
     *   }
     * })
     * 
     */
    delete<T extends CambioAdscripcionDeleteArgs>(args: SelectSubset<T, CambioAdscripcionDeleteArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CambioAdscripcion.
     * @param {CambioAdscripcionUpdateArgs} args - Arguments to update one CambioAdscripcion.
     * @example
     * // Update one CambioAdscripcion
     * const cambioAdscripcion = await prisma.cambioAdscripcion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CambioAdscripcionUpdateArgs>(args: SelectSubset<T, CambioAdscripcionUpdateArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CambioAdscripcions.
     * @param {CambioAdscripcionDeleteManyArgs} args - Arguments to filter CambioAdscripcions to delete.
     * @example
     * // Delete a few CambioAdscripcions
     * const { count } = await prisma.cambioAdscripcion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CambioAdscripcionDeleteManyArgs>(args?: SelectSubset<T, CambioAdscripcionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CambioAdscripcions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CambioAdscripcions
     * const cambioAdscripcion = await prisma.cambioAdscripcion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CambioAdscripcionUpdateManyArgs>(args: SelectSubset<T, CambioAdscripcionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CambioAdscripcions and returns the data updated in the database.
     * @param {CambioAdscripcionUpdateManyAndReturnArgs} args - Arguments to update many CambioAdscripcions.
     * @example
     * // Update many CambioAdscripcions
     * const cambioAdscripcion = await prisma.cambioAdscripcion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CambioAdscripcions and only return the `id_cambio`
     * const cambioAdscripcionWithId_cambioOnly = await prisma.cambioAdscripcion.updateManyAndReturn({
     *   select: { id_cambio: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CambioAdscripcionUpdateManyAndReturnArgs>(args: SelectSubset<T, CambioAdscripcionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CambioAdscripcion.
     * @param {CambioAdscripcionUpsertArgs} args - Arguments to update or create a CambioAdscripcion.
     * @example
     * // Update or create a CambioAdscripcion
     * const cambioAdscripcion = await prisma.cambioAdscripcion.upsert({
     *   create: {
     *     // ... data to create a CambioAdscripcion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CambioAdscripcion we want to update
     *   }
     * })
     */
    upsert<T extends CambioAdscripcionUpsertArgs>(args: SelectSubset<T, CambioAdscripcionUpsertArgs<ExtArgs>>): Prisma__CambioAdscripcionClient<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CambioAdscripcions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionCountArgs} args - Arguments to filter CambioAdscripcions to count.
     * @example
     * // Count the number of CambioAdscripcions
     * const count = await prisma.cambioAdscripcion.count({
     *   where: {
     *     // ... the filter for the CambioAdscripcions we want to count
     *   }
     * })
    **/
    count<T extends CambioAdscripcionCountArgs>(
      args?: Subset<T, CambioAdscripcionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CambioAdscripcionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CambioAdscripcion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CambioAdscripcionAggregateArgs>(args: Subset<T, CambioAdscripcionAggregateArgs>): Prisma.PrismaPromise<GetCambioAdscripcionAggregateType<T>>

    /**
     * Group by CambioAdscripcion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CambioAdscripcionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CambioAdscripcionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CambioAdscripcionGroupByArgs['orderBy'] }
        : { orderBy?: CambioAdscripcionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CambioAdscripcionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCambioAdscripcionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CambioAdscripcion model
   */
  readonly fields: CambioAdscripcionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CambioAdscripcion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CambioAdscripcionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends TrabajadorSntiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSntiDefaultArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    documento_respaldo<T extends CambioAdscripcion$documento_respaldoArgs<ExtArgs> = {}>(args?: Subset<T, CambioAdscripcion$documento_respaldoArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CambioAdscripcion model
   */ 
  interface CambioAdscripcionFieldRefs {
    readonly id_cambio: FieldRef<"CambioAdscripcion", 'Int'>
    readonly id_trabajador: FieldRef<"CambioAdscripcion", 'Int'>
    readonly adscripcion_anterior: FieldRef<"CambioAdscripcion", 'String'>
    readonly adscripcion_nueva: FieldRef<"CambioAdscripcion", 'String'>
    readonly fecha_cambio: FieldRef<"CambioAdscripcion", 'DateTime'>
    readonly motivo: FieldRef<"CambioAdscripcion", 'String'>
    readonly documento_respaldo_id: FieldRef<"CambioAdscripcion", 'Int'>
    readonly usuario_registro: FieldRef<"CambioAdscripcion", 'String'>
    readonly fecha_registro: FieldRef<"CambioAdscripcion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CambioAdscripcion findUnique
   */
  export type CambioAdscripcionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * Filter, which CambioAdscripcion to fetch.
     */
    where: CambioAdscripcionWhereUniqueInput
  }

  /**
   * CambioAdscripcion findUniqueOrThrow
   */
  export type CambioAdscripcionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * Filter, which CambioAdscripcion to fetch.
     */
    where: CambioAdscripcionWhereUniqueInput
  }

  /**
   * CambioAdscripcion findFirst
   */
  export type CambioAdscripcionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * Filter, which CambioAdscripcion to fetch.
     */
    where?: CambioAdscripcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CambioAdscripcions to fetch.
     */
    orderBy?: CambioAdscripcionOrderByWithRelationInput | CambioAdscripcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CambioAdscripcions.
     */
    cursor?: CambioAdscripcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CambioAdscripcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CambioAdscripcions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CambioAdscripcions.
     */
    distinct?: CambioAdscripcionScalarFieldEnum | CambioAdscripcionScalarFieldEnum[]
  }

  /**
   * CambioAdscripcion findFirstOrThrow
   */
  export type CambioAdscripcionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * Filter, which CambioAdscripcion to fetch.
     */
    where?: CambioAdscripcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CambioAdscripcions to fetch.
     */
    orderBy?: CambioAdscripcionOrderByWithRelationInput | CambioAdscripcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CambioAdscripcions.
     */
    cursor?: CambioAdscripcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CambioAdscripcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CambioAdscripcions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CambioAdscripcions.
     */
    distinct?: CambioAdscripcionScalarFieldEnum | CambioAdscripcionScalarFieldEnum[]
  }

  /**
   * CambioAdscripcion findMany
   */
  export type CambioAdscripcionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * Filter, which CambioAdscripcions to fetch.
     */
    where?: CambioAdscripcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CambioAdscripcions to fetch.
     */
    orderBy?: CambioAdscripcionOrderByWithRelationInput | CambioAdscripcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CambioAdscripcions.
     */
    cursor?: CambioAdscripcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CambioAdscripcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CambioAdscripcions.
     */
    skip?: number
    distinct?: CambioAdscripcionScalarFieldEnum | CambioAdscripcionScalarFieldEnum[]
  }

  /**
   * CambioAdscripcion create
   */
  export type CambioAdscripcionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * The data needed to create a CambioAdscripcion.
     */
    data: XOR<CambioAdscripcionCreateInput, CambioAdscripcionUncheckedCreateInput>
  }

  /**
   * CambioAdscripcion createMany
   */
  export type CambioAdscripcionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CambioAdscripcions.
     */
    data: CambioAdscripcionCreateManyInput | CambioAdscripcionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CambioAdscripcion createManyAndReturn
   */
  export type CambioAdscripcionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * The data used to create many CambioAdscripcions.
     */
    data: CambioAdscripcionCreateManyInput | CambioAdscripcionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CambioAdscripcion update
   */
  export type CambioAdscripcionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * The data needed to update a CambioAdscripcion.
     */
    data: XOR<CambioAdscripcionUpdateInput, CambioAdscripcionUncheckedUpdateInput>
    /**
     * Choose, which CambioAdscripcion to update.
     */
    where: CambioAdscripcionWhereUniqueInput
  }

  /**
   * CambioAdscripcion updateMany
   */
  export type CambioAdscripcionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CambioAdscripcions.
     */
    data: XOR<CambioAdscripcionUpdateManyMutationInput, CambioAdscripcionUncheckedUpdateManyInput>
    /**
     * Filter which CambioAdscripcions to update
     */
    where?: CambioAdscripcionWhereInput
    /**
     * Limit how many CambioAdscripcions to update.
     */
    limit?: number
  }

  /**
   * CambioAdscripcion updateManyAndReturn
   */
  export type CambioAdscripcionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * The data used to update CambioAdscripcions.
     */
    data: XOR<CambioAdscripcionUpdateManyMutationInput, CambioAdscripcionUncheckedUpdateManyInput>
    /**
     * Filter which CambioAdscripcions to update
     */
    where?: CambioAdscripcionWhereInput
    /**
     * Limit how many CambioAdscripcions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CambioAdscripcion upsert
   */
  export type CambioAdscripcionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * The filter to search for the CambioAdscripcion to update in case it exists.
     */
    where: CambioAdscripcionWhereUniqueInput
    /**
     * In case the CambioAdscripcion found by the `where` argument doesn't exist, create a new CambioAdscripcion with this data.
     */
    create: XOR<CambioAdscripcionCreateInput, CambioAdscripcionUncheckedCreateInput>
    /**
     * In case the CambioAdscripcion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CambioAdscripcionUpdateInput, CambioAdscripcionUncheckedUpdateInput>
  }

  /**
   * CambioAdscripcion delete
   */
  export type CambioAdscripcionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    /**
     * Filter which CambioAdscripcion to delete.
     */
    where: CambioAdscripcionWhereUniqueInput
  }

  /**
   * CambioAdscripcion deleteMany
   */
  export type CambioAdscripcionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CambioAdscripcions to delete
     */
    where?: CambioAdscripcionWhereInput
    /**
     * Limit how many CambioAdscripcions to delete.
     */
    limit?: number
  }

  /**
   * CambioAdscripcion.documento_respaldo
   */
  export type CambioAdscripcion$documento_respaldoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    where?: DocumentoWhereInput
  }

  /**
   * CambioAdscripcion without action
   */
  export type CambioAdscripcionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
  }


  /**
   * Model CursoSnti
   */

  export type AggregateCursoSnti = {
    _count: CursoSntiCountAggregateOutputType | null
    _avg: CursoSntiAvgAggregateOutputType | null
    _sum: CursoSntiSumAggregateOutputType | null
    _min: CursoSntiMinAggregateOutputType | null
    _max: CursoSntiMaxAggregateOutputType | null
  }

  export type CursoSntiAvgAggregateOutputType = {
    id_curso: number | null
    horas_duracion: number | null
  }

  export type CursoSntiSumAggregateOutputType = {
    id_curso: number | null
    horas_duracion: number | null
  }

  export type CursoSntiMinAggregateOutputType = {
    id_curso: number | null
    codigo_curso: string | null
    nombre_curso: string | null
    horas_duracion: number | null
  }

  export type CursoSntiMaxAggregateOutputType = {
    id_curso: number | null
    codigo_curso: string | null
    nombre_curso: string | null
    horas_duracion: number | null
  }

  export type CursoSntiCountAggregateOutputType = {
    id_curso: number
    codigo_curso: number
    nombre_curso: number
    horas_duracion: number
    _all: number
  }


  export type CursoSntiAvgAggregateInputType = {
    id_curso?: true
    horas_duracion?: true
  }

  export type CursoSntiSumAggregateInputType = {
    id_curso?: true
    horas_duracion?: true
  }

  export type CursoSntiMinAggregateInputType = {
    id_curso?: true
    codigo_curso?: true
    nombre_curso?: true
    horas_duracion?: true
  }

  export type CursoSntiMaxAggregateInputType = {
    id_curso?: true
    codigo_curso?: true
    nombre_curso?: true
    horas_duracion?: true
  }

  export type CursoSntiCountAggregateInputType = {
    id_curso?: true
    codigo_curso?: true
    nombre_curso?: true
    horas_duracion?: true
    _all?: true
  }

  export type CursoSntiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CursoSnti to aggregate.
     */
    where?: CursoSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoSntis to fetch.
     */
    orderBy?: CursoSntiOrderByWithRelationInput | CursoSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CursoSntis
    **/
    _count?: true | CursoSntiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoSntiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoSntiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoSntiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoSntiMaxAggregateInputType
  }

  export type GetCursoSntiAggregateType<T extends CursoSntiAggregateArgs> = {
        [P in keyof T & keyof AggregateCursoSnti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCursoSnti[P]>
      : GetScalarType<T[P], AggregateCursoSnti[P]>
  }




  export type CursoSntiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoSntiWhereInput
    orderBy?: CursoSntiOrderByWithAggregationInput | CursoSntiOrderByWithAggregationInput[]
    by: CursoSntiScalarFieldEnum[] | CursoSntiScalarFieldEnum
    having?: CursoSntiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoSntiCountAggregateInputType | true
    _avg?: CursoSntiAvgAggregateInputType
    _sum?: CursoSntiSumAggregateInputType
    _min?: CursoSntiMinAggregateInputType
    _max?: CursoSntiMaxAggregateInputType
  }

  export type CursoSntiGroupByOutputType = {
    id_curso: number
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
    _count: CursoSntiCountAggregateOutputType | null
    _avg: CursoSntiAvgAggregateOutputType | null
    _sum: CursoSntiSumAggregateOutputType | null
    _min: CursoSntiMinAggregateOutputType | null
    _max: CursoSntiMaxAggregateOutputType | null
  }

  type GetCursoSntiGroupByPayload<T extends CursoSntiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoSntiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoSntiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoSntiGroupByOutputType[P]>
            : GetScalarType<T[P], CursoSntiGroupByOutputType[P]>
        }
      >
    >


  export type CursoSntiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
  }, ExtArgs["result"]["cursoSnti"]>

  export type CursoSntiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
  }, ExtArgs["result"]["cursoSnti"]>

  export type CursoSntiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
  }, ExtArgs["result"]["cursoSnti"]>

  export type CursoSntiSelectScalar = {
    id_curso?: boolean
    codigo_curso?: boolean
    nombre_curso?: boolean
    horas_duracion?: boolean
  }

  export type CursoSntiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_curso" | "codigo_curso" | "nombre_curso" | "horas_duracion", ExtArgs["result"]["cursoSnti"]>

  export type $CursoSntiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CursoSnti"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_curso: number
      codigo_curso: string
      nombre_curso: string
      horas_duracion: number
    }, ExtArgs["result"]["cursoSnti"]>
    composites: {}
  }

  type CursoSntiGetPayload<S extends boolean | null | undefined | CursoSntiDefaultArgs> = $Result.GetResult<Prisma.$CursoSntiPayload, S>

  type CursoSntiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CursoSntiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CursoSntiCountAggregateInputType | true
    }

  export interface CursoSntiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CursoSnti'], meta: { name: 'CursoSnti' } }
    /**
     * Find zero or one CursoSnti that matches the filter.
     * @param {CursoSntiFindUniqueArgs} args - Arguments to find a CursoSnti
     * @example
     * // Get one CursoSnti
     * const cursoSnti = await prisma.cursoSnti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CursoSntiFindUniqueArgs>(args: SelectSubset<T, CursoSntiFindUniqueArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CursoSnti that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CursoSntiFindUniqueOrThrowArgs} args - Arguments to find a CursoSnti
     * @example
     * // Get one CursoSnti
     * const cursoSnti = await prisma.cursoSnti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CursoSntiFindUniqueOrThrowArgs>(args: SelectSubset<T, CursoSntiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CursoSnti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiFindFirstArgs} args - Arguments to find a CursoSnti
     * @example
     * // Get one CursoSnti
     * const cursoSnti = await prisma.cursoSnti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CursoSntiFindFirstArgs>(args?: SelectSubset<T, CursoSntiFindFirstArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CursoSnti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiFindFirstOrThrowArgs} args - Arguments to find a CursoSnti
     * @example
     * // Get one CursoSnti
     * const cursoSnti = await prisma.cursoSnti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CursoSntiFindFirstOrThrowArgs>(args?: SelectSubset<T, CursoSntiFindFirstOrThrowArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CursoSntis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CursoSntis
     * const cursoSntis = await prisma.cursoSnti.findMany()
     * 
     * // Get first 10 CursoSntis
     * const cursoSntis = await prisma.cursoSnti.findMany({ take: 10 })
     * 
     * // Only select the `id_curso`
     * const cursoSntiWithId_cursoOnly = await prisma.cursoSnti.findMany({ select: { id_curso: true } })
     * 
     */
    findMany<T extends CursoSntiFindManyArgs>(args?: SelectSubset<T, CursoSntiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CursoSnti.
     * @param {CursoSntiCreateArgs} args - Arguments to create a CursoSnti.
     * @example
     * // Create one CursoSnti
     * const CursoSnti = await prisma.cursoSnti.create({
     *   data: {
     *     // ... data to create a CursoSnti
     *   }
     * })
     * 
     */
    create<T extends CursoSntiCreateArgs>(args: SelectSubset<T, CursoSntiCreateArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CursoSntis.
     * @param {CursoSntiCreateManyArgs} args - Arguments to create many CursoSntis.
     * @example
     * // Create many CursoSntis
     * const cursoSnti = await prisma.cursoSnti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CursoSntiCreateManyArgs>(args?: SelectSubset<T, CursoSntiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CursoSntis and returns the data saved in the database.
     * @param {CursoSntiCreateManyAndReturnArgs} args - Arguments to create many CursoSntis.
     * @example
     * // Create many CursoSntis
     * const cursoSnti = await prisma.cursoSnti.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CursoSntis and only return the `id_curso`
     * const cursoSntiWithId_cursoOnly = await prisma.cursoSnti.createManyAndReturn({
     *   select: { id_curso: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CursoSntiCreateManyAndReturnArgs>(args?: SelectSubset<T, CursoSntiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CursoSnti.
     * @param {CursoSntiDeleteArgs} args - Arguments to delete one CursoSnti.
     * @example
     * // Delete one CursoSnti
     * const CursoSnti = await prisma.cursoSnti.delete({
     *   where: {
     *     // ... filter to delete one CursoSnti
     *   }
     * })
     * 
     */
    delete<T extends CursoSntiDeleteArgs>(args: SelectSubset<T, CursoSntiDeleteArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CursoSnti.
     * @param {CursoSntiUpdateArgs} args - Arguments to update one CursoSnti.
     * @example
     * // Update one CursoSnti
     * const cursoSnti = await prisma.cursoSnti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CursoSntiUpdateArgs>(args: SelectSubset<T, CursoSntiUpdateArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CursoSntis.
     * @param {CursoSntiDeleteManyArgs} args - Arguments to filter CursoSntis to delete.
     * @example
     * // Delete a few CursoSntis
     * const { count } = await prisma.cursoSnti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CursoSntiDeleteManyArgs>(args?: SelectSubset<T, CursoSntiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CursoSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CursoSntis
     * const cursoSnti = await prisma.cursoSnti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CursoSntiUpdateManyArgs>(args: SelectSubset<T, CursoSntiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CursoSntis and returns the data updated in the database.
     * @param {CursoSntiUpdateManyAndReturnArgs} args - Arguments to update many CursoSntis.
     * @example
     * // Update many CursoSntis
     * const cursoSnti = await prisma.cursoSnti.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CursoSntis and only return the `id_curso`
     * const cursoSntiWithId_cursoOnly = await prisma.cursoSnti.updateManyAndReturn({
     *   select: { id_curso: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CursoSntiUpdateManyAndReturnArgs>(args: SelectSubset<T, CursoSntiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CursoSnti.
     * @param {CursoSntiUpsertArgs} args - Arguments to update or create a CursoSnti.
     * @example
     * // Update or create a CursoSnti
     * const cursoSnti = await prisma.cursoSnti.upsert({
     *   create: {
     *     // ... data to create a CursoSnti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CursoSnti we want to update
     *   }
     * })
     */
    upsert<T extends CursoSntiUpsertArgs>(args: SelectSubset<T, CursoSntiUpsertArgs<ExtArgs>>): Prisma__CursoSntiClient<$Result.GetResult<Prisma.$CursoSntiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CursoSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiCountArgs} args - Arguments to filter CursoSntis to count.
     * @example
     * // Count the number of CursoSntis
     * const count = await prisma.cursoSnti.count({
     *   where: {
     *     // ... the filter for the CursoSntis we want to count
     *   }
     * })
    **/
    count<T extends CursoSntiCountArgs>(
      args?: Subset<T, CursoSntiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoSntiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CursoSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoSntiAggregateArgs>(args: Subset<T, CursoSntiAggregateArgs>): Prisma.PrismaPromise<GetCursoSntiAggregateType<T>>

    /**
     * Group by CursoSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoSntiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoSntiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoSntiGroupByArgs['orderBy'] }
        : { orderBy?: CursoSntiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoSntiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoSntiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CursoSnti model
   */
  readonly fields: CursoSntiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CursoSnti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoSntiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CursoSnti model
   */ 
  interface CursoSntiFieldRefs {
    readonly id_curso: FieldRef<"CursoSnti", 'Int'>
    readonly codigo_curso: FieldRef<"CursoSnti", 'String'>
    readonly nombre_curso: FieldRef<"CursoSnti", 'String'>
    readonly horas_duracion: FieldRef<"CursoSnti", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CursoSnti findUnique
   */
  export type CursoSntiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * Filter, which CursoSnti to fetch.
     */
    where: CursoSntiWhereUniqueInput
  }

  /**
   * CursoSnti findUniqueOrThrow
   */
  export type CursoSntiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * Filter, which CursoSnti to fetch.
     */
    where: CursoSntiWhereUniqueInput
  }

  /**
   * CursoSnti findFirst
   */
  export type CursoSntiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * Filter, which CursoSnti to fetch.
     */
    where?: CursoSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoSntis to fetch.
     */
    orderBy?: CursoSntiOrderByWithRelationInput | CursoSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CursoSntis.
     */
    cursor?: CursoSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CursoSntis.
     */
    distinct?: CursoSntiScalarFieldEnum | CursoSntiScalarFieldEnum[]
  }

  /**
   * CursoSnti findFirstOrThrow
   */
  export type CursoSntiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * Filter, which CursoSnti to fetch.
     */
    where?: CursoSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoSntis to fetch.
     */
    orderBy?: CursoSntiOrderByWithRelationInput | CursoSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CursoSntis.
     */
    cursor?: CursoSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CursoSntis.
     */
    distinct?: CursoSntiScalarFieldEnum | CursoSntiScalarFieldEnum[]
  }

  /**
   * CursoSnti findMany
   */
  export type CursoSntiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * Filter, which CursoSntis to fetch.
     */
    where?: CursoSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CursoSntis to fetch.
     */
    orderBy?: CursoSntiOrderByWithRelationInput | CursoSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CursoSntis.
     */
    cursor?: CursoSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CursoSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CursoSntis.
     */
    skip?: number
    distinct?: CursoSntiScalarFieldEnum | CursoSntiScalarFieldEnum[]
  }

  /**
   * CursoSnti create
   */
  export type CursoSntiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * The data needed to create a CursoSnti.
     */
    data: XOR<CursoSntiCreateInput, CursoSntiUncheckedCreateInput>
  }

  /**
   * CursoSnti createMany
   */
  export type CursoSntiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CursoSntis.
     */
    data: CursoSntiCreateManyInput | CursoSntiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CursoSnti createManyAndReturn
   */
  export type CursoSntiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * The data used to create many CursoSntis.
     */
    data: CursoSntiCreateManyInput | CursoSntiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CursoSnti update
   */
  export type CursoSntiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * The data needed to update a CursoSnti.
     */
    data: XOR<CursoSntiUpdateInput, CursoSntiUncheckedUpdateInput>
    /**
     * Choose, which CursoSnti to update.
     */
    where: CursoSntiWhereUniqueInput
  }

  /**
   * CursoSnti updateMany
   */
  export type CursoSntiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CursoSntis.
     */
    data: XOR<CursoSntiUpdateManyMutationInput, CursoSntiUncheckedUpdateManyInput>
    /**
     * Filter which CursoSntis to update
     */
    where?: CursoSntiWhereInput
    /**
     * Limit how many CursoSntis to update.
     */
    limit?: number
  }

  /**
   * CursoSnti updateManyAndReturn
   */
  export type CursoSntiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * The data used to update CursoSntis.
     */
    data: XOR<CursoSntiUpdateManyMutationInput, CursoSntiUncheckedUpdateManyInput>
    /**
     * Filter which CursoSntis to update
     */
    where?: CursoSntiWhereInput
    /**
     * Limit how many CursoSntis to update.
     */
    limit?: number
  }

  /**
   * CursoSnti upsert
   */
  export type CursoSntiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * The filter to search for the CursoSnti to update in case it exists.
     */
    where: CursoSntiWhereUniqueInput
    /**
     * In case the CursoSnti found by the `where` argument doesn't exist, create a new CursoSnti with this data.
     */
    create: XOR<CursoSntiCreateInput, CursoSntiUncheckedCreateInput>
    /**
     * In case the CursoSnti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoSntiUpdateInput, CursoSntiUncheckedUpdateInput>
  }

  /**
   * CursoSnti delete
   */
  export type CursoSntiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
    /**
     * Filter which CursoSnti to delete.
     */
    where: CursoSntiWhereUniqueInput
  }

  /**
   * CursoSnti deleteMany
   */
  export type CursoSntiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CursoSntis to delete
     */
    where?: CursoSntiWhereInput
    /**
     * Limit how many CursoSntis to delete.
     */
    limit?: number
  }

  /**
   * CursoSnti without action
   */
  export type CursoSntiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CursoSnti
     */
    select?: CursoSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CursoSnti
     */
    omit?: CursoSntiOmit<ExtArgs> | null
  }


  /**
   * Model Documento
   */

  export type AggregateDocumento = {
    _count: DocumentoCountAggregateOutputType | null
    _avg: DocumentoAvgAggregateOutputType | null
    _sum: DocumentoSumAggregateOutputType | null
    _min: DocumentoMinAggregateOutputType | null
    _max: DocumentoMaxAggregateOutputType | null
  }

  export type DocumentoAvgAggregateOutputType = {
    id_documento: number | null
    id_trabajador: number | null
    tamano_bytes: number | null
  }

  export type DocumentoSumAggregateOutputType = {
    id_documento: number | null
    id_trabajador: number | null
    tamano_bytes: bigint | null
  }

  export type DocumentoMinAggregateOutputType = {
    id_documento: number | null
    id_trabajador: number | null
    tipo_documento: string | null
    hash_archivo: string | null
    nombre_archivo: string | null
    descripcion: string | null
    tipo_archivo: string | null
    ruta_almacenamiento: string | null
    fecha_subida: Date | null
    tamano_bytes: bigint | null
    es_publico: boolean | null
  }

  export type DocumentoMaxAggregateOutputType = {
    id_documento: number | null
    id_trabajador: number | null
    tipo_documento: string | null
    hash_archivo: string | null
    nombre_archivo: string | null
    descripcion: string | null
    tipo_archivo: string | null
    ruta_almacenamiento: string | null
    fecha_subida: Date | null
    tamano_bytes: bigint | null
    es_publico: boolean | null
  }

  export type DocumentoCountAggregateOutputType = {
    id_documento: number
    id_trabajador: number
    tipo_documento: number
    metadata: number
    hash_archivo: number
    nombre_archivo: number
    descripcion: number
    tipo_archivo: number
    ruta_almacenamiento: number
    fecha_subida: number
    tamano_bytes: number
    es_publico: number
    _all: number
  }


  export type DocumentoAvgAggregateInputType = {
    id_documento?: true
    id_trabajador?: true
    tamano_bytes?: true
  }

  export type DocumentoSumAggregateInputType = {
    id_documento?: true
    id_trabajador?: true
    tamano_bytes?: true
  }

  export type DocumentoMinAggregateInputType = {
    id_documento?: true
    id_trabajador?: true
    tipo_documento?: true
    hash_archivo?: true
    nombre_archivo?: true
    descripcion?: true
    tipo_archivo?: true
    ruta_almacenamiento?: true
    fecha_subida?: true
    tamano_bytes?: true
    es_publico?: true
  }

  export type DocumentoMaxAggregateInputType = {
    id_documento?: true
    id_trabajador?: true
    tipo_documento?: true
    hash_archivo?: true
    nombre_archivo?: true
    descripcion?: true
    tipo_archivo?: true
    ruta_almacenamiento?: true
    fecha_subida?: true
    tamano_bytes?: true
    es_publico?: true
  }

  export type DocumentoCountAggregateInputType = {
    id_documento?: true
    id_trabajador?: true
    tipo_documento?: true
    metadata?: true
    hash_archivo?: true
    nombre_archivo?: true
    descripcion?: true
    tipo_archivo?: true
    ruta_almacenamiento?: true
    fecha_subida?: true
    tamano_bytes?: true
    es_publico?: true
    _all?: true
  }

  export type DocumentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documento to aggregate.
     */
    where?: DocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentoOrderByWithRelationInput | DocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Documentos
    **/
    _count?: true | DocumentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentoMaxAggregateInputType
  }

  export type GetDocumentoAggregateType<T extends DocumentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDocumento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocumento[P]>
      : GetScalarType<T[P], AggregateDocumento[P]>
  }




  export type DocumentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentoWhereInput
    orderBy?: DocumentoOrderByWithAggregationInput | DocumentoOrderByWithAggregationInput[]
    by: DocumentoScalarFieldEnum[] | DocumentoScalarFieldEnum
    having?: DocumentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentoCountAggregateInputType | true
    _avg?: DocumentoAvgAggregateInputType
    _sum?: DocumentoSumAggregateInputType
    _min?: DocumentoMinAggregateInputType
    _max?: DocumentoMaxAggregateInputType
  }

  export type DocumentoGroupByOutputType = {
    id_documento: number
    id_trabajador: number
    tipo_documento: string
    metadata: JsonValue | null
    hash_archivo: string
    nombre_archivo: string
    descripcion: string | null
    tipo_archivo: string | null
    ruta_almacenamiento: string
    fecha_subida: Date | null
    tamano_bytes: bigint
    es_publico: boolean | null
    _count: DocumentoCountAggregateOutputType | null
    _avg: DocumentoAvgAggregateOutputType | null
    _sum: DocumentoSumAggregateOutputType | null
    _min: DocumentoMinAggregateOutputType | null
    _max: DocumentoMaxAggregateOutputType | null
  }

  type GetDocumentoGroupByPayload<T extends DocumentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentoGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentoGroupByOutputType[P]>
        }
      >
    >


  export type DocumentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_documento?: boolean
    id_trabajador?: boolean
    tipo_documento?: boolean
    metadata?: boolean
    hash_archivo?: boolean
    nombre_archivo?: boolean
    descripcion?: boolean
    tipo_archivo?: boolean
    ruta_almacenamiento?: boolean
    fecha_subida?: boolean
    tamano_bytes?: boolean
    es_publico?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    hijos?: boolean | Documento$hijosArgs<ExtArgs>
    permisos?: boolean | Documento$permisosArgs<ExtArgs>
    cambios_adscripcion?: boolean | Documento$cambios_adscripcionArgs<ExtArgs>
    _count?: boolean | DocumentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documento"]>

  export type DocumentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_documento?: boolean
    id_trabajador?: boolean
    tipo_documento?: boolean
    metadata?: boolean
    hash_archivo?: boolean
    nombre_archivo?: boolean
    descripcion?: boolean
    tipo_archivo?: boolean
    ruta_almacenamiento?: boolean
    fecha_subida?: boolean
    tamano_bytes?: boolean
    es_publico?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documento"]>

  export type DocumentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_documento?: boolean
    id_trabajador?: boolean
    tipo_documento?: boolean
    metadata?: boolean
    hash_archivo?: boolean
    nombre_archivo?: boolean
    descripcion?: boolean
    tipo_archivo?: boolean
    ruta_almacenamiento?: boolean
    fecha_subida?: boolean
    tamano_bytes?: boolean
    es_publico?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documento"]>

  export type DocumentoSelectScalar = {
    id_documento?: boolean
    id_trabajador?: boolean
    tipo_documento?: boolean
    metadata?: boolean
    hash_archivo?: boolean
    nombre_archivo?: boolean
    descripcion?: boolean
    tipo_archivo?: boolean
    ruta_almacenamiento?: boolean
    fecha_subida?: boolean
    tamano_bytes?: boolean
    es_publico?: boolean
  }

  export type DocumentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_documento" | "id_trabajador" | "tipo_documento" | "metadata" | "hash_archivo" | "nombre_archivo" | "descripcion" | "tipo_archivo" | "ruta_almacenamiento" | "fecha_subida" | "tamano_bytes" | "es_publico", ExtArgs["result"]["documento"]>
  export type DocumentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    hijos?: boolean | Documento$hijosArgs<ExtArgs>
    permisos?: boolean | Documento$permisosArgs<ExtArgs>
    cambios_adscripcion?: boolean | Documento$cambios_adscripcionArgs<ExtArgs>
    _count?: boolean | DocumentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DocumentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }
  export type DocumentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }

  export type $DocumentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Documento"
    objects: {
      trabajador: Prisma.$TrabajadorSntiPayload<ExtArgs>
      hijos: Prisma.$HijoPayload<ExtArgs>[]
      permisos: Prisma.$PermisoPayload<ExtArgs>[]
      cambios_adscripcion: Prisma.$CambioAdscripcionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_documento: number
      id_trabajador: number
      tipo_documento: string
      metadata: Prisma.JsonValue | null
      hash_archivo: string
      nombre_archivo: string
      descripcion: string | null
      tipo_archivo: string | null
      ruta_almacenamiento: string
      fecha_subida: Date | null
      tamano_bytes: bigint
      es_publico: boolean | null
    }, ExtArgs["result"]["documento"]>
    composites: {}
  }

  type DocumentoGetPayload<S extends boolean | null | undefined | DocumentoDefaultArgs> = $Result.GetResult<Prisma.$DocumentoPayload, S>

  type DocumentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DocumentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocumentoCountAggregateInputType | true
    }

  export interface DocumentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Documento'], meta: { name: 'Documento' } }
    /**
     * Find zero or one Documento that matches the filter.
     * @param {DocumentoFindUniqueArgs} args - Arguments to find a Documento
     * @example
     * // Get one Documento
     * const documento = await prisma.documento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentoFindUniqueArgs>(args: SelectSubset<T, DocumentoFindUniqueArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Documento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DocumentoFindUniqueOrThrowArgs} args - Arguments to find a Documento
     * @example
     * // Get one Documento
     * const documento = await prisma.documento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentoFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Documento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFindFirstArgs} args - Arguments to find a Documento
     * @example
     * // Get one Documento
     * const documento = await prisma.documento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentoFindFirstArgs>(args?: SelectSubset<T, DocumentoFindFirstArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Documento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFindFirstOrThrowArgs} args - Arguments to find a Documento
     * @example
     * // Get one Documento
     * const documento = await prisma.documento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentoFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Documentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documentos
     * const documentos = await prisma.documento.findMany()
     * 
     * // Get first 10 Documentos
     * const documentos = await prisma.documento.findMany({ take: 10 })
     * 
     * // Only select the `id_documento`
     * const documentoWithId_documentoOnly = await prisma.documento.findMany({ select: { id_documento: true } })
     * 
     */
    findMany<T extends DocumentoFindManyArgs>(args?: SelectSubset<T, DocumentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Documento.
     * @param {DocumentoCreateArgs} args - Arguments to create a Documento.
     * @example
     * // Create one Documento
     * const Documento = await prisma.documento.create({
     *   data: {
     *     // ... data to create a Documento
     *   }
     * })
     * 
     */
    create<T extends DocumentoCreateArgs>(args: SelectSubset<T, DocumentoCreateArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Documentos.
     * @param {DocumentoCreateManyArgs} args - Arguments to create many Documentos.
     * @example
     * // Create many Documentos
     * const documento = await prisma.documento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentoCreateManyArgs>(args?: SelectSubset<T, DocumentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documentos and returns the data saved in the database.
     * @param {DocumentoCreateManyAndReturnArgs} args - Arguments to create many Documentos.
     * @example
     * // Create many Documentos
     * const documento = await prisma.documento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documentos and only return the `id_documento`
     * const documentoWithId_documentoOnly = await prisma.documento.createManyAndReturn({
     *   select: { id_documento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentoCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Documento.
     * @param {DocumentoDeleteArgs} args - Arguments to delete one Documento.
     * @example
     * // Delete one Documento
     * const Documento = await prisma.documento.delete({
     *   where: {
     *     // ... filter to delete one Documento
     *   }
     * })
     * 
     */
    delete<T extends DocumentoDeleteArgs>(args: SelectSubset<T, DocumentoDeleteArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Documento.
     * @param {DocumentoUpdateArgs} args - Arguments to update one Documento.
     * @example
     * // Update one Documento
     * const documento = await prisma.documento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentoUpdateArgs>(args: SelectSubset<T, DocumentoUpdateArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Documentos.
     * @param {DocumentoDeleteManyArgs} args - Arguments to filter Documentos to delete.
     * @example
     * // Delete a few Documentos
     * const { count } = await prisma.documento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentoDeleteManyArgs>(args?: SelectSubset<T, DocumentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documentos
     * const documento = await prisma.documento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentoUpdateManyArgs>(args: SelectSubset<T, DocumentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documentos and returns the data updated in the database.
     * @param {DocumentoUpdateManyAndReturnArgs} args - Arguments to update many Documentos.
     * @example
     * // Update many Documentos
     * const documento = await prisma.documento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Documentos and only return the `id_documento`
     * const documentoWithId_documentoOnly = await prisma.documento.updateManyAndReturn({
     *   select: { id_documento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DocumentoUpdateManyAndReturnArgs>(args: SelectSubset<T, DocumentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Documento.
     * @param {DocumentoUpsertArgs} args - Arguments to update or create a Documento.
     * @example
     * // Update or create a Documento
     * const documento = await prisma.documento.upsert({
     *   create: {
     *     // ... data to create a Documento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Documento we want to update
     *   }
     * })
     */
    upsert<T extends DocumentoUpsertArgs>(args: SelectSubset<T, DocumentoUpsertArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoCountArgs} args - Arguments to filter Documentos to count.
     * @example
     * // Count the number of Documentos
     * const count = await prisma.documento.count({
     *   where: {
     *     // ... the filter for the Documentos we want to count
     *   }
     * })
    **/
    count<T extends DocumentoCountArgs>(
      args?: Subset<T, DocumentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Documento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentoAggregateArgs>(args: Subset<T, DocumentoAggregateArgs>): Prisma.PrismaPromise<GetDocumentoAggregateType<T>>

    /**
     * Group by Documento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentoGroupByArgs['orderBy'] }
        : { orderBy?: DocumentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Documento model
   */
  readonly fields: DocumentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Documento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends TrabajadorSntiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSntiDefaultArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    hijos<T extends Documento$hijosArgs<ExtArgs> = {}>(args?: Subset<T, Documento$hijosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    permisos<T extends Documento$permisosArgs<ExtArgs> = {}>(args?: Subset<T, Documento$permisosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cambios_adscripcion<T extends Documento$cambios_adscripcionArgs<ExtArgs> = {}>(args?: Subset<T, Documento$cambios_adscripcionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Documento model
   */ 
  interface DocumentoFieldRefs {
    readonly id_documento: FieldRef<"Documento", 'Int'>
    readonly id_trabajador: FieldRef<"Documento", 'Int'>
    readonly tipo_documento: FieldRef<"Documento", 'String'>
    readonly metadata: FieldRef<"Documento", 'Json'>
    readonly hash_archivo: FieldRef<"Documento", 'String'>
    readonly nombre_archivo: FieldRef<"Documento", 'String'>
    readonly descripcion: FieldRef<"Documento", 'String'>
    readonly tipo_archivo: FieldRef<"Documento", 'String'>
    readonly ruta_almacenamiento: FieldRef<"Documento", 'String'>
    readonly fecha_subida: FieldRef<"Documento", 'DateTime'>
    readonly tamano_bytes: FieldRef<"Documento", 'BigInt'>
    readonly es_publico: FieldRef<"Documento", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Documento findUnique
   */
  export type DocumentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * Filter, which Documento to fetch.
     */
    where: DocumentoWhereUniqueInput
  }

  /**
   * Documento findUniqueOrThrow
   */
  export type DocumentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * Filter, which Documento to fetch.
     */
    where: DocumentoWhereUniqueInput
  }

  /**
   * Documento findFirst
   */
  export type DocumentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * Filter, which Documento to fetch.
     */
    where?: DocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentoOrderByWithRelationInput | DocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documentos.
     */
    cursor?: DocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documentos.
     */
    distinct?: DocumentoScalarFieldEnum | DocumentoScalarFieldEnum[]
  }

  /**
   * Documento findFirstOrThrow
   */
  export type DocumentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * Filter, which Documento to fetch.
     */
    where?: DocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentoOrderByWithRelationInput | DocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documentos.
     */
    cursor?: DocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documentos.
     */
    distinct?: DocumentoScalarFieldEnum | DocumentoScalarFieldEnum[]
  }

  /**
   * Documento findMany
   */
  export type DocumentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * Filter, which Documentos to fetch.
     */
    where?: DocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentoOrderByWithRelationInput | DocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Documentos.
     */
    cursor?: DocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    distinct?: DocumentoScalarFieldEnum | DocumentoScalarFieldEnum[]
  }

  /**
   * Documento create
   */
  export type DocumentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Documento.
     */
    data: XOR<DocumentoCreateInput, DocumentoUncheckedCreateInput>
  }

  /**
   * Documento createMany
   */
  export type DocumentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Documentos.
     */
    data: DocumentoCreateManyInput | DocumentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Documento createManyAndReturn
   */
  export type DocumentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * The data used to create many Documentos.
     */
    data: DocumentoCreateManyInput | DocumentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Documento update
   */
  export type DocumentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Documento.
     */
    data: XOR<DocumentoUpdateInput, DocumentoUncheckedUpdateInput>
    /**
     * Choose, which Documento to update.
     */
    where: DocumentoWhereUniqueInput
  }

  /**
   * Documento updateMany
   */
  export type DocumentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Documentos.
     */
    data: XOR<DocumentoUpdateManyMutationInput, DocumentoUncheckedUpdateManyInput>
    /**
     * Filter which Documentos to update
     */
    where?: DocumentoWhereInput
    /**
     * Limit how many Documentos to update.
     */
    limit?: number
  }

  /**
   * Documento updateManyAndReturn
   */
  export type DocumentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * The data used to update Documentos.
     */
    data: XOR<DocumentoUpdateManyMutationInput, DocumentoUncheckedUpdateManyInput>
    /**
     * Filter which Documentos to update
     */
    where?: DocumentoWhereInput
    /**
     * Limit how many Documentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Documento upsert
   */
  export type DocumentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Documento to update in case it exists.
     */
    where: DocumentoWhereUniqueInput
    /**
     * In case the Documento found by the `where` argument doesn't exist, create a new Documento with this data.
     */
    create: XOR<DocumentoCreateInput, DocumentoUncheckedCreateInput>
    /**
     * In case the Documento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentoUpdateInput, DocumentoUncheckedUpdateInput>
  }

  /**
   * Documento delete
   */
  export type DocumentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    /**
     * Filter which Documento to delete.
     */
    where: DocumentoWhereUniqueInput
  }

  /**
   * Documento deleteMany
   */
  export type DocumentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documentos to delete
     */
    where?: DocumentoWhereInput
    /**
     * Limit how many Documentos to delete.
     */
    limit?: number
  }

  /**
   * Documento.hijos
   */
  export type Documento$hijosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    where?: HijoWhereInput
    orderBy?: HijoOrderByWithRelationInput | HijoOrderByWithRelationInput[]
    cursor?: HijoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * Documento.permisos
   */
  export type Documento$permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    cursor?: PermisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Documento.cambios_adscripcion
   */
  export type Documento$cambios_adscripcionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    where?: CambioAdscripcionWhereInput
    orderBy?: CambioAdscripcionOrderByWithRelationInput | CambioAdscripcionOrderByWithRelationInput[]
    cursor?: CambioAdscripcionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CambioAdscripcionScalarFieldEnum | CambioAdscripcionScalarFieldEnum[]
  }

  /**
   * Documento without action
   */
  export type DocumentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
  }


  /**
   * Model Hijo
   */

  export type AggregateHijo = {
    _count: HijoCountAggregateOutputType | null
    _avg: HijoAvgAggregateOutputType | null
    _sum: HijoSumAggregateOutputType | null
    _min: HijoMinAggregateOutputType | null
    _max: HijoMaxAggregateOutputType | null
  }

  export type HijoAvgAggregateOutputType = {
    id_hijo: number | null
    id_trabajador: number | null
    acta_nacimiento_id: number | null
  }

  export type HijoSumAggregateOutputType = {
    id_hijo: number | null
    id_trabajador: number | null
    acta_nacimiento_id: number | null
  }

  export type HijoMinAggregateOutputType = {
    id_hijo: number | null
    id_trabajador: number | null
    nombre_completo: string | null
    fecha_nacimiento: Date | null
    acta_nacimiento_id: number | null
    vigente: boolean | null
  }

  export type HijoMaxAggregateOutputType = {
    id_hijo: number | null
    id_trabajador: number | null
    nombre_completo: string | null
    fecha_nacimiento: Date | null
    acta_nacimiento_id: number | null
    vigente: boolean | null
  }

  export type HijoCountAggregateOutputType = {
    id_hijo: number
    id_trabajador: number
    nombre_completo: number
    fecha_nacimiento: number
    acta_nacimiento_id: number
    vigente: number
    _all: number
  }


  export type HijoAvgAggregateInputType = {
    id_hijo?: true
    id_trabajador?: true
    acta_nacimiento_id?: true
  }

  export type HijoSumAggregateInputType = {
    id_hijo?: true
    id_trabajador?: true
    acta_nacimiento_id?: true
  }

  export type HijoMinAggregateInputType = {
    id_hijo?: true
    id_trabajador?: true
    nombre_completo?: true
    fecha_nacimiento?: true
    acta_nacimiento_id?: true
    vigente?: true
  }

  export type HijoMaxAggregateInputType = {
    id_hijo?: true
    id_trabajador?: true
    nombre_completo?: true
    fecha_nacimiento?: true
    acta_nacimiento_id?: true
    vigente?: true
  }

  export type HijoCountAggregateInputType = {
    id_hijo?: true
    id_trabajador?: true
    nombre_completo?: true
    fecha_nacimiento?: true
    acta_nacimiento_id?: true
    vigente?: true
    _all?: true
  }

  export type HijoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Hijo to aggregate.
     */
    where?: HijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hijos to fetch.
     */
    orderBy?: HijoOrderByWithRelationInput | HijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hijos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Hijos
    **/
    _count?: true | HijoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HijoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HijoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HijoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HijoMaxAggregateInputType
  }

  export type GetHijoAggregateType<T extends HijoAggregateArgs> = {
        [P in keyof T & keyof AggregateHijo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHijo[P]>
      : GetScalarType<T[P], AggregateHijo[P]>
  }




  export type HijoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HijoWhereInput
    orderBy?: HijoOrderByWithAggregationInput | HijoOrderByWithAggregationInput[]
    by: HijoScalarFieldEnum[] | HijoScalarFieldEnum
    having?: HijoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HijoCountAggregateInputType | true
    _avg?: HijoAvgAggregateInputType
    _sum?: HijoSumAggregateInputType
    _min?: HijoMinAggregateInputType
    _max?: HijoMaxAggregateInputType
  }

  export type HijoGroupByOutputType = {
    id_hijo: number
    id_trabajador: number
    nombre_completo: string
    fecha_nacimiento: Date
    acta_nacimiento_id: number | null
    vigente: boolean | null
    _count: HijoCountAggregateOutputType | null
    _avg: HijoAvgAggregateOutputType | null
    _sum: HijoSumAggregateOutputType | null
    _min: HijoMinAggregateOutputType | null
    _max: HijoMaxAggregateOutputType | null
  }

  type GetHijoGroupByPayload<T extends HijoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HijoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HijoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HijoGroupByOutputType[P]>
            : GetScalarType<T[P], HijoGroupByOutputType[P]>
        }
      >
    >


  export type HijoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_hijo?: boolean
    id_trabajador?: boolean
    nombre_completo?: boolean
    fecha_nacimiento?: boolean
    acta_nacimiento_id?: boolean
    vigente?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    acta_nacimiento?: boolean | Hijo$acta_nacimientoArgs<ExtArgs>
  }, ExtArgs["result"]["hijo"]>

  export type HijoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_hijo?: boolean
    id_trabajador?: boolean
    nombre_completo?: boolean
    fecha_nacimiento?: boolean
    acta_nacimiento_id?: boolean
    vigente?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    acta_nacimiento?: boolean | Hijo$acta_nacimientoArgs<ExtArgs>
  }, ExtArgs["result"]["hijo"]>

  export type HijoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_hijo?: boolean
    id_trabajador?: boolean
    nombre_completo?: boolean
    fecha_nacimiento?: boolean
    acta_nacimiento_id?: boolean
    vigente?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    acta_nacimiento?: boolean | Hijo$acta_nacimientoArgs<ExtArgs>
  }, ExtArgs["result"]["hijo"]>

  export type HijoSelectScalar = {
    id_hijo?: boolean
    id_trabajador?: boolean
    nombre_completo?: boolean
    fecha_nacimiento?: boolean
    acta_nacimiento_id?: boolean
    vigente?: boolean
  }

  export type HijoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_hijo" | "id_trabajador" | "nombre_completo" | "fecha_nacimiento" | "acta_nacimiento_id" | "vigente", ExtArgs["result"]["hijo"]>
  export type HijoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    acta_nacimiento?: boolean | Hijo$acta_nacimientoArgs<ExtArgs>
  }
  export type HijoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    acta_nacimiento?: boolean | Hijo$acta_nacimientoArgs<ExtArgs>
  }
  export type HijoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    acta_nacimiento?: boolean | Hijo$acta_nacimientoArgs<ExtArgs>
  }

  export type $HijoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Hijo"
    objects: {
      trabajador: Prisma.$TrabajadorSntiPayload<ExtArgs>
      acta_nacimiento: Prisma.$DocumentoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_hijo: number
      id_trabajador: number
      nombre_completo: string
      fecha_nacimiento: Date
      acta_nacimiento_id: number | null
      vigente: boolean | null
    }, ExtArgs["result"]["hijo"]>
    composites: {}
  }

  type HijoGetPayload<S extends boolean | null | undefined | HijoDefaultArgs> = $Result.GetResult<Prisma.$HijoPayload, S>

  type HijoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HijoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HijoCountAggregateInputType | true
    }

  export interface HijoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Hijo'], meta: { name: 'Hijo' } }
    /**
     * Find zero or one Hijo that matches the filter.
     * @param {HijoFindUniqueArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HijoFindUniqueArgs>(args: SelectSubset<T, HijoFindUniqueArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Hijo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HijoFindUniqueOrThrowArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HijoFindUniqueOrThrowArgs>(args: SelectSubset<T, HijoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hijo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoFindFirstArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HijoFindFirstArgs>(args?: SelectSubset<T, HijoFindFirstArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Hijo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoFindFirstOrThrowArgs} args - Arguments to find a Hijo
     * @example
     * // Get one Hijo
     * const hijo = await prisma.hijo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HijoFindFirstOrThrowArgs>(args?: SelectSubset<T, HijoFindFirstOrThrowArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Hijos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Hijos
     * const hijos = await prisma.hijo.findMany()
     * 
     * // Get first 10 Hijos
     * const hijos = await prisma.hijo.findMany({ take: 10 })
     * 
     * // Only select the `id_hijo`
     * const hijoWithId_hijoOnly = await prisma.hijo.findMany({ select: { id_hijo: true } })
     * 
     */
    findMany<T extends HijoFindManyArgs>(args?: SelectSubset<T, HijoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Hijo.
     * @param {HijoCreateArgs} args - Arguments to create a Hijo.
     * @example
     * // Create one Hijo
     * const Hijo = await prisma.hijo.create({
     *   data: {
     *     // ... data to create a Hijo
     *   }
     * })
     * 
     */
    create<T extends HijoCreateArgs>(args: SelectSubset<T, HijoCreateArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Hijos.
     * @param {HijoCreateManyArgs} args - Arguments to create many Hijos.
     * @example
     * // Create many Hijos
     * const hijo = await prisma.hijo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HijoCreateManyArgs>(args?: SelectSubset<T, HijoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Hijos and returns the data saved in the database.
     * @param {HijoCreateManyAndReturnArgs} args - Arguments to create many Hijos.
     * @example
     * // Create many Hijos
     * const hijo = await prisma.hijo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Hijos and only return the `id_hijo`
     * const hijoWithId_hijoOnly = await prisma.hijo.createManyAndReturn({
     *   select: { id_hijo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HijoCreateManyAndReturnArgs>(args?: SelectSubset<T, HijoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Hijo.
     * @param {HijoDeleteArgs} args - Arguments to delete one Hijo.
     * @example
     * // Delete one Hijo
     * const Hijo = await prisma.hijo.delete({
     *   where: {
     *     // ... filter to delete one Hijo
     *   }
     * })
     * 
     */
    delete<T extends HijoDeleteArgs>(args: SelectSubset<T, HijoDeleteArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Hijo.
     * @param {HijoUpdateArgs} args - Arguments to update one Hijo.
     * @example
     * // Update one Hijo
     * const hijo = await prisma.hijo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HijoUpdateArgs>(args: SelectSubset<T, HijoUpdateArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Hijos.
     * @param {HijoDeleteManyArgs} args - Arguments to filter Hijos to delete.
     * @example
     * // Delete a few Hijos
     * const { count } = await prisma.hijo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HijoDeleteManyArgs>(args?: SelectSubset<T, HijoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hijos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Hijos
     * const hijo = await prisma.hijo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HijoUpdateManyArgs>(args: SelectSubset<T, HijoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Hijos and returns the data updated in the database.
     * @param {HijoUpdateManyAndReturnArgs} args - Arguments to update many Hijos.
     * @example
     * // Update many Hijos
     * const hijo = await prisma.hijo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Hijos and only return the `id_hijo`
     * const hijoWithId_hijoOnly = await prisma.hijo.updateManyAndReturn({
     *   select: { id_hijo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HijoUpdateManyAndReturnArgs>(args: SelectSubset<T, HijoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Hijo.
     * @param {HijoUpsertArgs} args - Arguments to update or create a Hijo.
     * @example
     * // Update or create a Hijo
     * const hijo = await prisma.hijo.upsert({
     *   create: {
     *     // ... data to create a Hijo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Hijo we want to update
     *   }
     * })
     */
    upsert<T extends HijoUpsertArgs>(args: SelectSubset<T, HijoUpsertArgs<ExtArgs>>): Prisma__HijoClient<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Hijos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoCountArgs} args - Arguments to filter Hijos to count.
     * @example
     * // Count the number of Hijos
     * const count = await prisma.hijo.count({
     *   where: {
     *     // ... the filter for the Hijos we want to count
     *   }
     * })
    **/
    count<T extends HijoCountArgs>(
      args?: Subset<T, HijoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HijoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Hijo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HijoAggregateArgs>(args: Subset<T, HijoAggregateArgs>): Prisma.PrismaPromise<GetHijoAggregateType<T>>

    /**
     * Group by Hijo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HijoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HijoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HijoGroupByArgs['orderBy'] }
        : { orderBy?: HijoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HijoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHijoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Hijo model
   */
  readonly fields: HijoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Hijo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HijoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends TrabajadorSntiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSntiDefaultArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    acta_nacimiento<T extends Hijo$acta_nacimientoArgs<ExtArgs> = {}>(args?: Subset<T, Hijo$acta_nacimientoArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Hijo model
   */ 
  interface HijoFieldRefs {
    readonly id_hijo: FieldRef<"Hijo", 'Int'>
    readonly id_trabajador: FieldRef<"Hijo", 'Int'>
    readonly nombre_completo: FieldRef<"Hijo", 'String'>
    readonly fecha_nacimiento: FieldRef<"Hijo", 'DateTime'>
    readonly acta_nacimiento_id: FieldRef<"Hijo", 'Int'>
    readonly vigente: FieldRef<"Hijo", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Hijo findUnique
   */
  export type HijoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * Filter, which Hijo to fetch.
     */
    where: HijoWhereUniqueInput
  }

  /**
   * Hijo findUniqueOrThrow
   */
  export type HijoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * Filter, which Hijo to fetch.
     */
    where: HijoWhereUniqueInput
  }

  /**
   * Hijo findFirst
   */
  export type HijoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * Filter, which Hijo to fetch.
     */
    where?: HijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hijos to fetch.
     */
    orderBy?: HijoOrderByWithRelationInput | HijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Hijos.
     */
    cursor?: HijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hijos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Hijos.
     */
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * Hijo findFirstOrThrow
   */
  export type HijoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * Filter, which Hijo to fetch.
     */
    where?: HijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hijos to fetch.
     */
    orderBy?: HijoOrderByWithRelationInput | HijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Hijos.
     */
    cursor?: HijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hijos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Hijos.
     */
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * Hijo findMany
   */
  export type HijoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * Filter, which Hijos to fetch.
     */
    where?: HijoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Hijos to fetch.
     */
    orderBy?: HijoOrderByWithRelationInput | HijoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Hijos.
     */
    cursor?: HijoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Hijos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Hijos.
     */
    skip?: number
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * Hijo create
   */
  export type HijoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * The data needed to create a Hijo.
     */
    data: XOR<HijoCreateInput, HijoUncheckedCreateInput>
  }

  /**
   * Hijo createMany
   */
  export type HijoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Hijos.
     */
    data: HijoCreateManyInput | HijoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Hijo createManyAndReturn
   */
  export type HijoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * The data used to create many Hijos.
     */
    data: HijoCreateManyInput | HijoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Hijo update
   */
  export type HijoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * The data needed to update a Hijo.
     */
    data: XOR<HijoUpdateInput, HijoUncheckedUpdateInput>
    /**
     * Choose, which Hijo to update.
     */
    where: HijoWhereUniqueInput
  }

  /**
   * Hijo updateMany
   */
  export type HijoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Hijos.
     */
    data: XOR<HijoUpdateManyMutationInput, HijoUncheckedUpdateManyInput>
    /**
     * Filter which Hijos to update
     */
    where?: HijoWhereInput
    /**
     * Limit how many Hijos to update.
     */
    limit?: number
  }

  /**
   * Hijo updateManyAndReturn
   */
  export type HijoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * The data used to update Hijos.
     */
    data: XOR<HijoUpdateManyMutationInput, HijoUncheckedUpdateManyInput>
    /**
     * Filter which Hijos to update
     */
    where?: HijoWhereInput
    /**
     * Limit how many Hijos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Hijo upsert
   */
  export type HijoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * The filter to search for the Hijo to update in case it exists.
     */
    where: HijoWhereUniqueInput
    /**
     * In case the Hijo found by the `where` argument doesn't exist, create a new Hijo with this data.
     */
    create: XOR<HijoCreateInput, HijoUncheckedCreateInput>
    /**
     * In case the Hijo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HijoUpdateInput, HijoUncheckedUpdateInput>
  }

  /**
   * Hijo delete
   */
  export type HijoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    /**
     * Filter which Hijo to delete.
     */
    where: HijoWhereUniqueInput
  }

  /**
   * Hijo deleteMany
   */
  export type HijoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Hijos to delete
     */
    where?: HijoWhereInput
    /**
     * Limit how many Hijos to delete.
     */
    limit?: number
  }

  /**
   * Hijo.acta_nacimiento
   */
  export type Hijo$acta_nacimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    where?: DocumentoWhereInput
  }

  /**
   * Hijo without action
   */
  export type HijoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
  }


  /**
   * Model Permiso
   */

  export type AggregatePermiso = {
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  export type PermisoAvgAggregateOutputType = {
    id_permiso: number | null
    id_trabajador: number | null
    documento_aprobacion_id: number | null
  }

  export type PermisoSumAggregateOutputType = {
    id_permiso: number | null
    id_trabajador: number | null
    documento_aprobacion_id: number | null
  }

  export type PermisoMinAggregateOutputType = {
    id_permiso: number | null
    id_trabajador: number | null
    tipo_permiso: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    motivo: string | null
    estatus: string | null
    documento_aprobacion_id: number | null
    fecha_registro: Date | null
  }

  export type PermisoMaxAggregateOutputType = {
    id_permiso: number | null
    id_trabajador: number | null
    tipo_permiso: string | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    motivo: string | null
    estatus: string | null
    documento_aprobacion_id: number | null
    fecha_registro: Date | null
  }

  export type PermisoCountAggregateOutputType = {
    id_permiso: number
    id_trabajador: number
    tipo_permiso: number
    fecha_inicio: number
    fecha_fin: number
    motivo: number
    estatus: number
    documento_aprobacion_id: number
    fecha_registro: number
    _all: number
  }


  export type PermisoAvgAggregateInputType = {
    id_permiso?: true
    id_trabajador?: true
    documento_aprobacion_id?: true
  }

  export type PermisoSumAggregateInputType = {
    id_permiso?: true
    id_trabajador?: true
    documento_aprobacion_id?: true
  }

  export type PermisoMinAggregateInputType = {
    id_permiso?: true
    id_trabajador?: true
    tipo_permiso?: true
    fecha_inicio?: true
    fecha_fin?: true
    motivo?: true
    estatus?: true
    documento_aprobacion_id?: true
    fecha_registro?: true
  }

  export type PermisoMaxAggregateInputType = {
    id_permiso?: true
    id_trabajador?: true
    tipo_permiso?: true
    fecha_inicio?: true
    fecha_fin?: true
    motivo?: true
    estatus?: true
    documento_aprobacion_id?: true
    fecha_registro?: true
  }

  export type PermisoCountAggregateInputType = {
    id_permiso?: true
    id_trabajador?: true
    tipo_permiso?: true
    fecha_inicio?: true
    fecha_fin?: true
    motivo?: true
    estatus?: true
    documento_aprobacion_id?: true
    fecha_registro?: true
    _all?: true
  }

  export type PermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permiso to aggregate.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permisos
    **/
    _count?: true | PermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoMaxAggregateInputType
  }

  export type GetPermisoAggregateType<T extends PermisoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermiso[P]>
      : GetScalarType<T[P], AggregatePermiso[P]>
  }




  export type PermisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithAggregationInput | PermisoOrderByWithAggregationInput[]
    by: PermisoScalarFieldEnum[] | PermisoScalarFieldEnum
    having?: PermisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoCountAggregateInputType | true
    _avg?: PermisoAvgAggregateInputType
    _sum?: PermisoSumAggregateInputType
    _min?: PermisoMinAggregateInputType
    _max?: PermisoMaxAggregateInputType
  }

  export type PermisoGroupByOutputType = {
    id_permiso: number
    id_trabajador: number
    tipo_permiso: string | null
    fecha_inicio: Date
    fecha_fin: Date
    motivo: string
    estatus: string | null
    documento_aprobacion_id: number | null
    fecha_registro: Date | null
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  type GetPermisoGroupByPayload<T extends PermisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoGroupByOutputType[P]>
        }
      >
    >


  export type PermisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_permiso?: boolean
    id_trabajador?: boolean
    tipo_permiso?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
    estatus?: boolean
    documento_aprobacion_id?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_aprobacion?: boolean | Permiso$documento_aprobacionArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_permiso?: boolean
    id_trabajador?: boolean
    tipo_permiso?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
    estatus?: boolean
    documento_aprobacion_id?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_aprobacion?: boolean | Permiso$documento_aprobacionArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_permiso?: boolean
    id_trabajador?: boolean
    tipo_permiso?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
    estatus?: boolean
    documento_aprobacion_id?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_aprobacion?: boolean | Permiso$documento_aprobacionArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectScalar = {
    id_permiso?: boolean
    id_trabajador?: boolean
    tipo_permiso?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    motivo?: boolean
    estatus?: boolean
    documento_aprobacion_id?: boolean
    fecha_registro?: boolean
  }

  export type PermisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_permiso" | "id_trabajador" | "tipo_permiso" | "fecha_inicio" | "fecha_fin" | "motivo" | "estatus" | "documento_aprobacion_id" | "fecha_registro", ExtArgs["result"]["permiso"]>
  export type PermisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_aprobacion?: boolean | Permiso$documento_aprobacionArgs<ExtArgs>
  }
  export type PermisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_aprobacion?: boolean | Permiso$documento_aprobacionArgs<ExtArgs>
  }
  export type PermisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
    documento_aprobacion?: boolean | Permiso$documento_aprobacionArgs<ExtArgs>
  }

  export type $PermisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permiso"
    objects: {
      trabajador: Prisma.$TrabajadorSntiPayload<ExtArgs>
      documento_aprobacion: Prisma.$DocumentoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_permiso: number
      id_trabajador: number
      tipo_permiso: string | null
      fecha_inicio: Date
      fecha_fin: Date
      motivo: string
      estatus: string | null
      documento_aprobacion_id: number | null
      fecha_registro: Date | null
    }, ExtArgs["result"]["permiso"]>
    composites: {}
  }

  type PermisoGetPayload<S extends boolean | null | undefined | PermisoDefaultArgs> = $Result.GetResult<Prisma.$PermisoPayload, S>

  type PermisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoCountAggregateInputType | true
    }

  export interface PermisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permiso'], meta: { name: 'Permiso' } }
    /**
     * Find zero or one Permiso that matches the filter.
     * @param {PermisoFindUniqueArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoFindUniqueArgs>(args: SelectSubset<T, PermisoFindUniqueArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoFindUniqueOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoFindFirstArgs>(args?: SelectSubset<T, PermisoFindFirstArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permiso.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permiso.findMany({ take: 10 })
     * 
     * // Only select the `id_permiso`
     * const permisoWithId_permisoOnly = await prisma.permiso.findMany({ select: { id_permiso: true } })
     * 
     */
    findMany<T extends PermisoFindManyArgs>(args?: SelectSubset<T, PermisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permiso.
     * @param {PermisoCreateArgs} args - Arguments to create a Permiso.
     * @example
     * // Create one Permiso
     * const Permiso = await prisma.permiso.create({
     *   data: {
     *     // ... data to create a Permiso
     *   }
     * })
     * 
     */
    create<T extends PermisoCreateArgs>(args: SelectSubset<T, PermisoCreateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permisos.
     * @param {PermisoCreateManyArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoCreateManyArgs>(args?: SelectSubset<T, PermisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permisos and returns the data saved in the database.
     * @param {PermisoCreateManyAndReturnArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permisos and only return the `id_permiso`
     * const permisoWithId_permisoOnly = await prisma.permiso.createManyAndReturn({
     *   select: { id_permiso: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permiso.
     * @param {PermisoDeleteArgs} args - Arguments to delete one Permiso.
     * @example
     * // Delete one Permiso
     * const Permiso = await prisma.permiso.delete({
     *   where: {
     *     // ... filter to delete one Permiso
     *   }
     * })
     * 
     */
    delete<T extends PermisoDeleteArgs>(args: SelectSubset<T, PermisoDeleteArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permiso.
     * @param {PermisoUpdateArgs} args - Arguments to update one Permiso.
     * @example
     * // Update one Permiso
     * const permiso = await prisma.permiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoUpdateArgs>(args: SelectSubset<T, PermisoUpdateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permisos.
     * @param {PermisoDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoDeleteManyArgs>(args?: SelectSubset<T, PermisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoUpdateManyArgs>(args: SelectSubset<T, PermisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos and returns the data updated in the database.
     * @param {PermisoUpdateManyAndReturnArgs} args - Arguments to update many Permisos.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permisos and only return the `id_permiso`
     * const permisoWithId_permisoOnly = await prisma.permiso.updateManyAndReturn({
     *   select: { id_permiso: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permiso.
     * @param {PermisoUpsertArgs} args - Arguments to update or create a Permiso.
     * @example
     * // Update or create a Permiso
     * const permiso = await prisma.permiso.upsert({
     *   create: {
     *     // ... data to create a Permiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permiso we want to update
     *   }
     * })
     */
    upsert<T extends PermisoUpsertArgs>(args: SelectSubset<T, PermisoUpsertArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permiso.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends PermisoCountArgs>(
      args?: Subset<T, PermisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoAggregateArgs>(args: Subset<T, PermisoAggregateArgs>): Prisma.PrismaPromise<GetPermisoAggregateType<T>>

    /**
     * Group by Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoGroupByArgs['orderBy'] }
        : { orderBy?: PermisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permiso model
   */
  readonly fields: PermisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends TrabajadorSntiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSntiDefaultArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    documento_aprobacion<T extends Permiso$documento_aprobacionArgs<ExtArgs> = {}>(args?: Subset<T, Permiso$documento_aprobacionArgs<ExtArgs>>): Prisma__DocumentoClient<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permiso model
   */ 
  interface PermisoFieldRefs {
    readonly id_permiso: FieldRef<"Permiso", 'Int'>
    readonly id_trabajador: FieldRef<"Permiso", 'Int'>
    readonly tipo_permiso: FieldRef<"Permiso", 'String'>
    readonly fecha_inicio: FieldRef<"Permiso", 'DateTime'>
    readonly fecha_fin: FieldRef<"Permiso", 'DateTime'>
    readonly motivo: FieldRef<"Permiso", 'String'>
    readonly estatus: FieldRef<"Permiso", 'String'>
    readonly documento_aprobacion_id: FieldRef<"Permiso", 'Int'>
    readonly fecha_registro: FieldRef<"Permiso", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Permiso findUnique
   */
  export type PermisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findUniqueOrThrow
   */
  export type PermisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findFirst
   */
  export type PermisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findFirstOrThrow
   */
  export type PermisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findMany
   */
  export type PermisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permisos to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso create
   */
  export type PermisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to create a Permiso.
     */
    data: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
  }

  /**
   * Permiso createMany
   */
  export type PermisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso createManyAndReturn
   */
  export type PermisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permiso update
   */
  export type PermisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to update a Permiso.
     */
    data: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
    /**
     * Choose, which Permiso to update.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso updateMany
   */
  export type PermisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso updateManyAndReturn
   */
  export type PermisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permiso upsert
   */
  export type PermisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The filter to search for the Permiso to update in case it exists.
     */
    where: PermisoWhereUniqueInput
    /**
     * In case the Permiso found by the `where` argument doesn't exist, create a new Permiso with this data.
     */
    create: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
    /**
     * In case the Permiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
  }

  /**
   * Permiso delete
   */
  export type PermisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter which Permiso to delete.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso deleteMany
   */
  export type PermisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permisos to delete
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to delete.
     */
    limit?: number
  }

  /**
   * Permiso.documento_aprobacion
   */
  export type Permiso$documento_aprobacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    where?: DocumentoWhereInput
  }

  /**
   * Permiso without action
   */
  export type PermisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
  }


  /**
   * Model SancionSnti
   */

  export type AggregateSancionSnti = {
    _count: SancionSntiCountAggregateOutputType | null
    _avg: SancionSntiAvgAggregateOutputType | null
    _sum: SancionSntiSumAggregateOutputType | null
    _min: SancionSntiMinAggregateOutputType | null
    _max: SancionSntiMaxAggregateOutputType | null
  }

  export type SancionSntiAvgAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
  }

  export type SancionSntiSumAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
  }

  export type SancionSntiMinAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
    tipo_sancion: string | null
    descripcion: string | null
    fecha_aplicacion: Date | null
    fecha_fin: Date | null
    estatus: string | null
    usuario_registro: string | null
    fecha_registro: Date | null
  }

  export type SancionSntiMaxAggregateOutputType = {
    id_sancion: number | null
    id_trabajador: number | null
    tipo_sancion: string | null
    descripcion: string | null
    fecha_aplicacion: Date | null
    fecha_fin: Date | null
    estatus: string | null
    usuario_registro: string | null
    fecha_registro: Date | null
  }

  export type SancionSntiCountAggregateOutputType = {
    id_sancion: number
    id_trabajador: number
    tipo_sancion: number
    descripcion: number
    fecha_aplicacion: number
    fecha_fin: number
    estatus: number
    usuario_registro: number
    fecha_registro: number
    _all: number
  }


  export type SancionSntiAvgAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
  }

  export type SancionSntiSumAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
  }

  export type SancionSntiMinAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
    tipo_sancion?: true
    descripcion?: true
    fecha_aplicacion?: true
    fecha_fin?: true
    estatus?: true
    usuario_registro?: true
    fecha_registro?: true
  }

  export type SancionSntiMaxAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
    tipo_sancion?: true
    descripcion?: true
    fecha_aplicacion?: true
    fecha_fin?: true
    estatus?: true
    usuario_registro?: true
    fecha_registro?: true
  }

  export type SancionSntiCountAggregateInputType = {
    id_sancion?: true
    id_trabajador?: true
    tipo_sancion?: true
    descripcion?: true
    fecha_aplicacion?: true
    fecha_fin?: true
    estatus?: true
    usuario_registro?: true
    fecha_registro?: true
    _all?: true
  }

  export type SancionSntiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SancionSnti to aggregate.
     */
    where?: SancionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SancionSntis to fetch.
     */
    orderBy?: SancionSntiOrderByWithRelationInput | SancionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SancionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SancionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SancionSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SancionSntis
    **/
    _count?: true | SancionSntiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SancionSntiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SancionSntiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SancionSntiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SancionSntiMaxAggregateInputType
  }

  export type GetSancionSntiAggregateType<T extends SancionSntiAggregateArgs> = {
        [P in keyof T & keyof AggregateSancionSnti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSancionSnti[P]>
      : GetScalarType<T[P], AggregateSancionSnti[P]>
  }




  export type SancionSntiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SancionSntiWhereInput
    orderBy?: SancionSntiOrderByWithAggregationInput | SancionSntiOrderByWithAggregationInput[]
    by: SancionSntiScalarFieldEnum[] | SancionSntiScalarFieldEnum
    having?: SancionSntiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SancionSntiCountAggregateInputType | true
    _avg?: SancionSntiAvgAggregateInputType
    _sum?: SancionSntiSumAggregateInputType
    _min?: SancionSntiMinAggregateInputType
    _max?: SancionSntiMaxAggregateInputType
  }

  export type SancionSntiGroupByOutputType = {
    id_sancion: number
    id_trabajador: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date
    fecha_fin: Date | null
    estatus: string | null
    usuario_registro: string | null
    fecha_registro: Date | null
    _count: SancionSntiCountAggregateOutputType | null
    _avg: SancionSntiAvgAggregateOutputType | null
    _sum: SancionSntiSumAggregateOutputType | null
    _min: SancionSntiMinAggregateOutputType | null
    _max: SancionSntiMaxAggregateOutputType | null
  }

  type GetSancionSntiGroupByPayload<T extends SancionSntiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SancionSntiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SancionSntiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SancionSntiGroupByOutputType[P]>
            : GetScalarType<T[P], SancionSntiGroupByOutputType[P]>
        }
      >
    >


  export type SancionSntiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sancionSnti"]>

  export type SancionSntiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sancionSnti"]>

  export type SancionSntiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sancionSnti"]>

  export type SancionSntiSelectScalar = {
    id_sancion?: boolean
    id_trabajador?: boolean
    tipo_sancion?: boolean
    descripcion?: boolean
    fecha_aplicacion?: boolean
    fecha_fin?: boolean
    estatus?: boolean
    usuario_registro?: boolean
    fecha_registro?: boolean
  }

  export type SancionSntiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sancion" | "id_trabajador" | "tipo_sancion" | "descripcion" | "fecha_aplicacion" | "fecha_fin" | "estatus" | "usuario_registro" | "fecha_registro", ExtArgs["result"]["sancionSnti"]>
  export type SancionSntiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }
  export type SancionSntiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }
  export type SancionSntiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | TrabajadorSntiDefaultArgs<ExtArgs>
  }

  export type $SancionSntiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SancionSnti"
    objects: {
      trabajador: Prisma.$TrabajadorSntiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sancion: number
      id_trabajador: number
      tipo_sancion: string
      descripcion: string
      fecha_aplicacion: Date
      fecha_fin: Date | null
      estatus: string | null
      usuario_registro: string | null
      fecha_registro: Date | null
    }, ExtArgs["result"]["sancionSnti"]>
    composites: {}
  }

  type SancionSntiGetPayload<S extends boolean | null | undefined | SancionSntiDefaultArgs> = $Result.GetResult<Prisma.$SancionSntiPayload, S>

  type SancionSntiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SancionSntiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SancionSntiCountAggregateInputType | true
    }

  export interface SancionSntiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SancionSnti'], meta: { name: 'SancionSnti' } }
    /**
     * Find zero or one SancionSnti that matches the filter.
     * @param {SancionSntiFindUniqueArgs} args - Arguments to find a SancionSnti
     * @example
     * // Get one SancionSnti
     * const sancionSnti = await prisma.sancionSnti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SancionSntiFindUniqueArgs>(args: SelectSubset<T, SancionSntiFindUniqueArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SancionSnti that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SancionSntiFindUniqueOrThrowArgs} args - Arguments to find a SancionSnti
     * @example
     * // Get one SancionSnti
     * const sancionSnti = await prisma.sancionSnti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SancionSntiFindUniqueOrThrowArgs>(args: SelectSubset<T, SancionSntiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SancionSnti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiFindFirstArgs} args - Arguments to find a SancionSnti
     * @example
     * // Get one SancionSnti
     * const sancionSnti = await prisma.sancionSnti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SancionSntiFindFirstArgs>(args?: SelectSubset<T, SancionSntiFindFirstArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SancionSnti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiFindFirstOrThrowArgs} args - Arguments to find a SancionSnti
     * @example
     * // Get one SancionSnti
     * const sancionSnti = await prisma.sancionSnti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SancionSntiFindFirstOrThrowArgs>(args?: SelectSubset<T, SancionSntiFindFirstOrThrowArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SancionSntis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SancionSntis
     * const sancionSntis = await prisma.sancionSnti.findMany()
     * 
     * // Get first 10 SancionSntis
     * const sancionSntis = await prisma.sancionSnti.findMany({ take: 10 })
     * 
     * // Only select the `id_sancion`
     * const sancionSntiWithId_sancionOnly = await prisma.sancionSnti.findMany({ select: { id_sancion: true } })
     * 
     */
    findMany<T extends SancionSntiFindManyArgs>(args?: SelectSubset<T, SancionSntiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SancionSnti.
     * @param {SancionSntiCreateArgs} args - Arguments to create a SancionSnti.
     * @example
     * // Create one SancionSnti
     * const SancionSnti = await prisma.sancionSnti.create({
     *   data: {
     *     // ... data to create a SancionSnti
     *   }
     * })
     * 
     */
    create<T extends SancionSntiCreateArgs>(args: SelectSubset<T, SancionSntiCreateArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SancionSntis.
     * @param {SancionSntiCreateManyArgs} args - Arguments to create many SancionSntis.
     * @example
     * // Create many SancionSntis
     * const sancionSnti = await prisma.sancionSnti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SancionSntiCreateManyArgs>(args?: SelectSubset<T, SancionSntiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SancionSntis and returns the data saved in the database.
     * @param {SancionSntiCreateManyAndReturnArgs} args - Arguments to create many SancionSntis.
     * @example
     * // Create many SancionSntis
     * const sancionSnti = await prisma.sancionSnti.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SancionSntis and only return the `id_sancion`
     * const sancionSntiWithId_sancionOnly = await prisma.sancionSnti.createManyAndReturn({
     *   select: { id_sancion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SancionSntiCreateManyAndReturnArgs>(args?: SelectSubset<T, SancionSntiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SancionSnti.
     * @param {SancionSntiDeleteArgs} args - Arguments to delete one SancionSnti.
     * @example
     * // Delete one SancionSnti
     * const SancionSnti = await prisma.sancionSnti.delete({
     *   where: {
     *     // ... filter to delete one SancionSnti
     *   }
     * })
     * 
     */
    delete<T extends SancionSntiDeleteArgs>(args: SelectSubset<T, SancionSntiDeleteArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SancionSnti.
     * @param {SancionSntiUpdateArgs} args - Arguments to update one SancionSnti.
     * @example
     * // Update one SancionSnti
     * const sancionSnti = await prisma.sancionSnti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SancionSntiUpdateArgs>(args: SelectSubset<T, SancionSntiUpdateArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SancionSntis.
     * @param {SancionSntiDeleteManyArgs} args - Arguments to filter SancionSntis to delete.
     * @example
     * // Delete a few SancionSntis
     * const { count } = await prisma.sancionSnti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SancionSntiDeleteManyArgs>(args?: SelectSubset<T, SancionSntiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SancionSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SancionSntis
     * const sancionSnti = await prisma.sancionSnti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SancionSntiUpdateManyArgs>(args: SelectSubset<T, SancionSntiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SancionSntis and returns the data updated in the database.
     * @param {SancionSntiUpdateManyAndReturnArgs} args - Arguments to update many SancionSntis.
     * @example
     * // Update many SancionSntis
     * const sancionSnti = await prisma.sancionSnti.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SancionSntis and only return the `id_sancion`
     * const sancionSntiWithId_sancionOnly = await prisma.sancionSnti.updateManyAndReturn({
     *   select: { id_sancion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SancionSntiUpdateManyAndReturnArgs>(args: SelectSubset<T, SancionSntiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SancionSnti.
     * @param {SancionSntiUpsertArgs} args - Arguments to update or create a SancionSnti.
     * @example
     * // Update or create a SancionSnti
     * const sancionSnti = await prisma.sancionSnti.upsert({
     *   create: {
     *     // ... data to create a SancionSnti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SancionSnti we want to update
     *   }
     * })
     */
    upsert<T extends SancionSntiUpsertArgs>(args: SelectSubset<T, SancionSntiUpsertArgs<ExtArgs>>): Prisma__SancionSntiClient<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SancionSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiCountArgs} args - Arguments to filter SancionSntis to count.
     * @example
     * // Count the number of SancionSntis
     * const count = await prisma.sancionSnti.count({
     *   where: {
     *     // ... the filter for the SancionSntis we want to count
     *   }
     * })
    **/
    count<T extends SancionSntiCountArgs>(
      args?: Subset<T, SancionSntiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SancionSntiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SancionSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SancionSntiAggregateArgs>(args: Subset<T, SancionSntiAggregateArgs>): Prisma.PrismaPromise<GetSancionSntiAggregateType<T>>

    /**
     * Group by SancionSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SancionSntiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SancionSntiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SancionSntiGroupByArgs['orderBy'] }
        : { orderBy?: SancionSntiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SancionSntiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSancionSntiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SancionSnti model
   */
  readonly fields: SancionSntiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SancionSnti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SancionSntiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends TrabajadorSntiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSntiDefaultArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SancionSnti model
   */ 
  interface SancionSntiFieldRefs {
    readonly id_sancion: FieldRef<"SancionSnti", 'Int'>
    readonly id_trabajador: FieldRef<"SancionSnti", 'Int'>
    readonly tipo_sancion: FieldRef<"SancionSnti", 'String'>
    readonly descripcion: FieldRef<"SancionSnti", 'String'>
    readonly fecha_aplicacion: FieldRef<"SancionSnti", 'DateTime'>
    readonly fecha_fin: FieldRef<"SancionSnti", 'DateTime'>
    readonly estatus: FieldRef<"SancionSnti", 'String'>
    readonly usuario_registro: FieldRef<"SancionSnti", 'String'>
    readonly fecha_registro: FieldRef<"SancionSnti", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SancionSnti findUnique
   */
  export type SancionSntiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SancionSnti to fetch.
     */
    where: SancionSntiWhereUniqueInput
  }

  /**
   * SancionSnti findUniqueOrThrow
   */
  export type SancionSntiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SancionSnti to fetch.
     */
    where: SancionSntiWhereUniqueInput
  }

  /**
   * SancionSnti findFirst
   */
  export type SancionSntiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SancionSnti to fetch.
     */
    where?: SancionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SancionSntis to fetch.
     */
    orderBy?: SancionSntiOrderByWithRelationInput | SancionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SancionSntis.
     */
    cursor?: SancionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SancionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SancionSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SancionSntis.
     */
    distinct?: SancionSntiScalarFieldEnum | SancionSntiScalarFieldEnum[]
  }

  /**
   * SancionSnti findFirstOrThrow
   */
  export type SancionSntiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SancionSnti to fetch.
     */
    where?: SancionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SancionSntis to fetch.
     */
    orderBy?: SancionSntiOrderByWithRelationInput | SancionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SancionSntis.
     */
    cursor?: SancionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SancionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SancionSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SancionSntis.
     */
    distinct?: SancionSntiScalarFieldEnum | SancionSntiScalarFieldEnum[]
  }

  /**
   * SancionSnti findMany
   */
  export type SancionSntiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SancionSntis to fetch.
     */
    where?: SancionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SancionSntis to fetch.
     */
    orderBy?: SancionSntiOrderByWithRelationInput | SancionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SancionSntis.
     */
    cursor?: SancionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SancionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SancionSntis.
     */
    skip?: number
    distinct?: SancionSntiScalarFieldEnum | SancionSntiScalarFieldEnum[]
  }

  /**
   * SancionSnti create
   */
  export type SancionSntiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * The data needed to create a SancionSnti.
     */
    data: XOR<SancionSntiCreateInput, SancionSntiUncheckedCreateInput>
  }

  /**
   * SancionSnti createMany
   */
  export type SancionSntiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SancionSntis.
     */
    data: SancionSntiCreateManyInput | SancionSntiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SancionSnti createManyAndReturn
   */
  export type SancionSntiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * The data used to create many SancionSntis.
     */
    data: SancionSntiCreateManyInput | SancionSntiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SancionSnti update
   */
  export type SancionSntiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * The data needed to update a SancionSnti.
     */
    data: XOR<SancionSntiUpdateInput, SancionSntiUncheckedUpdateInput>
    /**
     * Choose, which SancionSnti to update.
     */
    where: SancionSntiWhereUniqueInput
  }

  /**
   * SancionSnti updateMany
   */
  export type SancionSntiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SancionSntis.
     */
    data: XOR<SancionSntiUpdateManyMutationInput, SancionSntiUncheckedUpdateManyInput>
    /**
     * Filter which SancionSntis to update
     */
    where?: SancionSntiWhereInput
    /**
     * Limit how many SancionSntis to update.
     */
    limit?: number
  }

  /**
   * SancionSnti updateManyAndReturn
   */
  export type SancionSntiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * The data used to update SancionSntis.
     */
    data: XOR<SancionSntiUpdateManyMutationInput, SancionSntiUncheckedUpdateManyInput>
    /**
     * Filter which SancionSntis to update
     */
    where?: SancionSntiWhereInput
    /**
     * Limit how many SancionSntis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SancionSnti upsert
   */
  export type SancionSntiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * The filter to search for the SancionSnti to update in case it exists.
     */
    where: SancionSntiWhereUniqueInput
    /**
     * In case the SancionSnti found by the `where` argument doesn't exist, create a new SancionSnti with this data.
     */
    create: XOR<SancionSntiCreateInput, SancionSntiUncheckedCreateInput>
    /**
     * In case the SancionSnti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SancionSntiUpdateInput, SancionSntiUncheckedUpdateInput>
  }

  /**
   * SancionSnti delete
   */
  export type SancionSntiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    /**
     * Filter which SancionSnti to delete.
     */
    where: SancionSntiWhereUniqueInput
  }

  /**
   * SancionSnti deleteMany
   */
  export type SancionSntiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SancionSntis to delete
     */
    where?: SancionSntiWhereInput
    /**
     * Limit how many SancionSntis to delete.
     */
    limit?: number
  }

  /**
   * SancionSnti without action
   */
  export type SancionSntiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
  }


  /**
   * Model SeccionSnti
   */

  export type AggregateSeccionSnti = {
    _count: SeccionSntiCountAggregateOutputType | null
    _avg: SeccionSntiAvgAggregateOutputType | null
    _sum: SeccionSntiSumAggregateOutputType | null
    _min: SeccionSntiMinAggregateOutputType | null
    _max: SeccionSntiMaxAggregateOutputType | null
  }

  export type SeccionSntiAvgAggregateOutputType = {
    id_seccion: number | null
  }

  export type SeccionSntiSumAggregateOutputType = {
    id_seccion: number | null
  }

  export type SeccionSntiMinAggregateOutputType = {
    id_seccion: number | null
    nombre_seccion: string | null
    descripcion: string | null
  }

  export type SeccionSntiMaxAggregateOutputType = {
    id_seccion: number | null
    nombre_seccion: string | null
    descripcion: string | null
  }

  export type SeccionSntiCountAggregateOutputType = {
    id_seccion: number
    nombre_seccion: number
    descripcion: number
    _all: number
  }


  export type SeccionSntiAvgAggregateInputType = {
    id_seccion?: true
  }

  export type SeccionSntiSumAggregateInputType = {
    id_seccion?: true
  }

  export type SeccionSntiMinAggregateInputType = {
    id_seccion?: true
    nombre_seccion?: true
    descripcion?: true
  }

  export type SeccionSntiMaxAggregateInputType = {
    id_seccion?: true
    nombre_seccion?: true
    descripcion?: true
  }

  export type SeccionSntiCountAggregateInputType = {
    id_seccion?: true
    nombre_seccion?: true
    descripcion?: true
    _all?: true
  }

  export type SeccionSntiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeccionSnti to aggregate.
     */
    where?: SeccionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeccionSntis to fetch.
     */
    orderBy?: SeccionSntiOrderByWithRelationInput | SeccionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeccionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeccionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeccionSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SeccionSntis
    **/
    _count?: true | SeccionSntiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeccionSntiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SeccionSntiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeccionSntiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeccionSntiMaxAggregateInputType
  }

  export type GetSeccionSntiAggregateType<T extends SeccionSntiAggregateArgs> = {
        [P in keyof T & keyof AggregateSeccionSnti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeccionSnti[P]>
      : GetScalarType<T[P], AggregateSeccionSnti[P]>
  }




  export type SeccionSntiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeccionSntiWhereInput
    orderBy?: SeccionSntiOrderByWithAggregationInput | SeccionSntiOrderByWithAggregationInput[]
    by: SeccionSntiScalarFieldEnum[] | SeccionSntiScalarFieldEnum
    having?: SeccionSntiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeccionSntiCountAggregateInputType | true
    _avg?: SeccionSntiAvgAggregateInputType
    _sum?: SeccionSntiSumAggregateInputType
    _min?: SeccionSntiMinAggregateInputType
    _max?: SeccionSntiMaxAggregateInputType
  }

  export type SeccionSntiGroupByOutputType = {
    id_seccion: number
    nombre_seccion: string
    descripcion: string | null
    _count: SeccionSntiCountAggregateOutputType | null
    _avg: SeccionSntiAvgAggregateOutputType | null
    _sum: SeccionSntiSumAggregateOutputType | null
    _min: SeccionSntiMinAggregateOutputType | null
    _max: SeccionSntiMaxAggregateOutputType | null
  }

  type GetSeccionSntiGroupByPayload<T extends SeccionSntiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeccionSntiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeccionSntiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeccionSntiGroupByOutputType[P]>
            : GetScalarType<T[P], SeccionSntiGroupByOutputType[P]>
        }
      >
    >


  export type SeccionSntiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
    trabajadores?: boolean | SeccionSnti$trabajadoresArgs<ExtArgs>
    _count?: boolean | SeccionSntiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seccionSnti"]>

  export type SeccionSntiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["seccionSnti"]>

  export type SeccionSntiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["seccionSnti"]>

  export type SeccionSntiSelectScalar = {
    id_seccion?: boolean
    nombre_seccion?: boolean
    descripcion?: boolean
  }

  export type SeccionSntiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_seccion" | "nombre_seccion" | "descripcion", ExtArgs["result"]["seccionSnti"]>
  export type SeccionSntiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajadores?: boolean | SeccionSnti$trabajadoresArgs<ExtArgs>
    _count?: boolean | SeccionSntiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SeccionSntiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SeccionSntiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SeccionSntiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SeccionSnti"
    objects: {
      trabajadores: Prisma.$TrabajadorSntiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_seccion: number
      nombre_seccion: string
      descripcion: string | null
    }, ExtArgs["result"]["seccionSnti"]>
    composites: {}
  }

  type SeccionSntiGetPayload<S extends boolean | null | undefined | SeccionSntiDefaultArgs> = $Result.GetResult<Prisma.$SeccionSntiPayload, S>

  type SeccionSntiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeccionSntiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeccionSntiCountAggregateInputType | true
    }

  export interface SeccionSntiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SeccionSnti'], meta: { name: 'SeccionSnti' } }
    /**
     * Find zero or one SeccionSnti that matches the filter.
     * @param {SeccionSntiFindUniqueArgs} args - Arguments to find a SeccionSnti
     * @example
     * // Get one SeccionSnti
     * const seccionSnti = await prisma.seccionSnti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeccionSntiFindUniqueArgs>(args: SelectSubset<T, SeccionSntiFindUniqueArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SeccionSnti that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeccionSntiFindUniqueOrThrowArgs} args - Arguments to find a SeccionSnti
     * @example
     * // Get one SeccionSnti
     * const seccionSnti = await prisma.seccionSnti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeccionSntiFindUniqueOrThrowArgs>(args: SelectSubset<T, SeccionSntiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeccionSnti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiFindFirstArgs} args - Arguments to find a SeccionSnti
     * @example
     * // Get one SeccionSnti
     * const seccionSnti = await prisma.seccionSnti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeccionSntiFindFirstArgs>(args?: SelectSubset<T, SeccionSntiFindFirstArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeccionSnti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiFindFirstOrThrowArgs} args - Arguments to find a SeccionSnti
     * @example
     * // Get one SeccionSnti
     * const seccionSnti = await prisma.seccionSnti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeccionSntiFindFirstOrThrowArgs>(args?: SelectSubset<T, SeccionSntiFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SeccionSntis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SeccionSntis
     * const seccionSntis = await prisma.seccionSnti.findMany()
     * 
     * // Get first 10 SeccionSntis
     * const seccionSntis = await prisma.seccionSnti.findMany({ take: 10 })
     * 
     * // Only select the `id_seccion`
     * const seccionSntiWithId_seccionOnly = await prisma.seccionSnti.findMany({ select: { id_seccion: true } })
     * 
     */
    findMany<T extends SeccionSntiFindManyArgs>(args?: SelectSubset<T, SeccionSntiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SeccionSnti.
     * @param {SeccionSntiCreateArgs} args - Arguments to create a SeccionSnti.
     * @example
     * // Create one SeccionSnti
     * const SeccionSnti = await prisma.seccionSnti.create({
     *   data: {
     *     // ... data to create a SeccionSnti
     *   }
     * })
     * 
     */
    create<T extends SeccionSntiCreateArgs>(args: SelectSubset<T, SeccionSntiCreateArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SeccionSntis.
     * @param {SeccionSntiCreateManyArgs} args - Arguments to create many SeccionSntis.
     * @example
     * // Create many SeccionSntis
     * const seccionSnti = await prisma.seccionSnti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeccionSntiCreateManyArgs>(args?: SelectSubset<T, SeccionSntiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SeccionSntis and returns the data saved in the database.
     * @param {SeccionSntiCreateManyAndReturnArgs} args - Arguments to create many SeccionSntis.
     * @example
     * // Create many SeccionSntis
     * const seccionSnti = await prisma.seccionSnti.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SeccionSntis and only return the `id_seccion`
     * const seccionSntiWithId_seccionOnly = await prisma.seccionSnti.createManyAndReturn({
     *   select: { id_seccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeccionSntiCreateManyAndReturnArgs>(args?: SelectSubset<T, SeccionSntiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SeccionSnti.
     * @param {SeccionSntiDeleteArgs} args - Arguments to delete one SeccionSnti.
     * @example
     * // Delete one SeccionSnti
     * const SeccionSnti = await prisma.seccionSnti.delete({
     *   where: {
     *     // ... filter to delete one SeccionSnti
     *   }
     * })
     * 
     */
    delete<T extends SeccionSntiDeleteArgs>(args: SelectSubset<T, SeccionSntiDeleteArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SeccionSnti.
     * @param {SeccionSntiUpdateArgs} args - Arguments to update one SeccionSnti.
     * @example
     * // Update one SeccionSnti
     * const seccionSnti = await prisma.seccionSnti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeccionSntiUpdateArgs>(args: SelectSubset<T, SeccionSntiUpdateArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SeccionSntis.
     * @param {SeccionSntiDeleteManyArgs} args - Arguments to filter SeccionSntis to delete.
     * @example
     * // Delete a few SeccionSntis
     * const { count } = await prisma.seccionSnti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeccionSntiDeleteManyArgs>(args?: SelectSubset<T, SeccionSntiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeccionSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SeccionSntis
     * const seccionSnti = await prisma.seccionSnti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeccionSntiUpdateManyArgs>(args: SelectSubset<T, SeccionSntiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeccionSntis and returns the data updated in the database.
     * @param {SeccionSntiUpdateManyAndReturnArgs} args - Arguments to update many SeccionSntis.
     * @example
     * // Update many SeccionSntis
     * const seccionSnti = await prisma.seccionSnti.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SeccionSntis and only return the `id_seccion`
     * const seccionSntiWithId_seccionOnly = await prisma.seccionSnti.updateManyAndReturn({
     *   select: { id_seccion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeccionSntiUpdateManyAndReturnArgs>(args: SelectSubset<T, SeccionSntiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SeccionSnti.
     * @param {SeccionSntiUpsertArgs} args - Arguments to update or create a SeccionSnti.
     * @example
     * // Update or create a SeccionSnti
     * const seccionSnti = await prisma.seccionSnti.upsert({
     *   create: {
     *     // ... data to create a SeccionSnti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SeccionSnti we want to update
     *   }
     * })
     */
    upsert<T extends SeccionSntiUpsertArgs>(args: SelectSubset<T, SeccionSntiUpsertArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SeccionSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiCountArgs} args - Arguments to filter SeccionSntis to count.
     * @example
     * // Count the number of SeccionSntis
     * const count = await prisma.seccionSnti.count({
     *   where: {
     *     // ... the filter for the SeccionSntis we want to count
     *   }
     * })
    **/
    count<T extends SeccionSntiCountArgs>(
      args?: Subset<T, SeccionSntiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeccionSntiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SeccionSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeccionSntiAggregateArgs>(args: Subset<T, SeccionSntiAggregateArgs>): Prisma.PrismaPromise<GetSeccionSntiAggregateType<T>>

    /**
     * Group by SeccionSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeccionSntiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeccionSntiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeccionSntiGroupByArgs['orderBy'] }
        : { orderBy?: SeccionSntiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeccionSntiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeccionSntiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SeccionSnti model
   */
  readonly fields: SeccionSntiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SeccionSnti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeccionSntiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajadores<T extends SeccionSnti$trabajadoresArgs<ExtArgs> = {}>(args?: Subset<T, SeccionSnti$trabajadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SeccionSnti model
   */ 
  interface SeccionSntiFieldRefs {
    readonly id_seccion: FieldRef<"SeccionSnti", 'Int'>
    readonly nombre_seccion: FieldRef<"SeccionSnti", 'String'>
    readonly descripcion: FieldRef<"SeccionSnti", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SeccionSnti findUnique
   */
  export type SeccionSntiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SeccionSnti to fetch.
     */
    where: SeccionSntiWhereUniqueInput
  }

  /**
   * SeccionSnti findUniqueOrThrow
   */
  export type SeccionSntiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SeccionSnti to fetch.
     */
    where: SeccionSntiWhereUniqueInput
  }

  /**
   * SeccionSnti findFirst
   */
  export type SeccionSntiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SeccionSnti to fetch.
     */
    where?: SeccionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeccionSntis to fetch.
     */
    orderBy?: SeccionSntiOrderByWithRelationInput | SeccionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeccionSntis.
     */
    cursor?: SeccionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeccionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeccionSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeccionSntis.
     */
    distinct?: SeccionSntiScalarFieldEnum | SeccionSntiScalarFieldEnum[]
  }

  /**
   * SeccionSnti findFirstOrThrow
   */
  export type SeccionSntiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SeccionSnti to fetch.
     */
    where?: SeccionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeccionSntis to fetch.
     */
    orderBy?: SeccionSntiOrderByWithRelationInput | SeccionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeccionSntis.
     */
    cursor?: SeccionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeccionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeccionSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeccionSntis.
     */
    distinct?: SeccionSntiScalarFieldEnum | SeccionSntiScalarFieldEnum[]
  }

  /**
   * SeccionSnti findMany
   */
  export type SeccionSntiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * Filter, which SeccionSntis to fetch.
     */
    where?: SeccionSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeccionSntis to fetch.
     */
    orderBy?: SeccionSntiOrderByWithRelationInput | SeccionSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SeccionSntis.
     */
    cursor?: SeccionSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeccionSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeccionSntis.
     */
    skip?: number
    distinct?: SeccionSntiScalarFieldEnum | SeccionSntiScalarFieldEnum[]
  }

  /**
   * SeccionSnti create
   */
  export type SeccionSntiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * The data needed to create a SeccionSnti.
     */
    data: XOR<SeccionSntiCreateInput, SeccionSntiUncheckedCreateInput>
  }

  /**
   * SeccionSnti createMany
   */
  export type SeccionSntiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SeccionSntis.
     */
    data: SeccionSntiCreateManyInput | SeccionSntiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeccionSnti createManyAndReturn
   */
  export type SeccionSntiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * The data used to create many SeccionSntis.
     */
    data: SeccionSntiCreateManyInput | SeccionSntiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeccionSnti update
   */
  export type SeccionSntiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * The data needed to update a SeccionSnti.
     */
    data: XOR<SeccionSntiUpdateInput, SeccionSntiUncheckedUpdateInput>
    /**
     * Choose, which SeccionSnti to update.
     */
    where: SeccionSntiWhereUniqueInput
  }

  /**
   * SeccionSnti updateMany
   */
  export type SeccionSntiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SeccionSntis.
     */
    data: XOR<SeccionSntiUpdateManyMutationInput, SeccionSntiUncheckedUpdateManyInput>
    /**
     * Filter which SeccionSntis to update
     */
    where?: SeccionSntiWhereInput
    /**
     * Limit how many SeccionSntis to update.
     */
    limit?: number
  }

  /**
   * SeccionSnti updateManyAndReturn
   */
  export type SeccionSntiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * The data used to update SeccionSntis.
     */
    data: XOR<SeccionSntiUpdateManyMutationInput, SeccionSntiUncheckedUpdateManyInput>
    /**
     * Filter which SeccionSntis to update
     */
    where?: SeccionSntiWhereInput
    /**
     * Limit how many SeccionSntis to update.
     */
    limit?: number
  }

  /**
   * SeccionSnti upsert
   */
  export type SeccionSntiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * The filter to search for the SeccionSnti to update in case it exists.
     */
    where: SeccionSntiWhereUniqueInput
    /**
     * In case the SeccionSnti found by the `where` argument doesn't exist, create a new SeccionSnti with this data.
     */
    create: XOR<SeccionSntiCreateInput, SeccionSntiUncheckedCreateInput>
    /**
     * In case the SeccionSnti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeccionSntiUpdateInput, SeccionSntiUncheckedUpdateInput>
  }

  /**
   * SeccionSnti delete
   */
  export type SeccionSntiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
    /**
     * Filter which SeccionSnti to delete.
     */
    where: SeccionSntiWhereUniqueInput
  }

  /**
   * SeccionSnti deleteMany
   */
  export type SeccionSntiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeccionSntis to delete
     */
    where?: SeccionSntiWhereInput
    /**
     * Limit how many SeccionSntis to delete.
     */
    limit?: number
  }

  /**
   * SeccionSnti.trabajadores
   */
  export type SeccionSnti$trabajadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    where?: TrabajadorSntiWhereInput
    orderBy?: TrabajadorSntiOrderByWithRelationInput | TrabajadorSntiOrderByWithRelationInput[]
    cursor?: TrabajadorSntiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrabajadorSntiScalarFieldEnum | TrabajadorSntiScalarFieldEnum[]
  }

  /**
   * SeccionSnti without action
   */
  export type SeccionSntiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeccionSnti
     */
    select?: SeccionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeccionSnti
     */
    omit?: SeccionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeccionSntiInclude<ExtArgs> | null
  }


  /**
   * Model TrabajadorSnti
   */

  export type AggregateTrabajadorSnti = {
    _count: TrabajadorSntiCountAggregateOutputType | null
    _avg: TrabajadorSntiAvgAggregateOutputType | null
    _sum: TrabajadorSntiSumAggregateOutputType | null
    _min: TrabajadorSntiMinAggregateOutputType | null
    _max: TrabajadorSntiMaxAggregateOutputType | null
  }

  export type TrabajadorSntiAvgAggregateOutputType = {
    id_trabajador: number | null
    numero_hijos: number | null
    id_seccion: number | null
  }

  export type TrabajadorSntiSumAggregateOutputType = {
    id_trabajador: number | null
    numero_hijos: number | null
    id_seccion: number | null
  }

  export type TrabajadorSntiMinAggregateOutputType = {
    id_trabajador: number | null
    nombre: string | null
    apellido_paterno: string | null
    apellido_materno: string | null
    fecha_nacimiento: Date | null
    sexo: string | null
    curp: string | null
    rfc: string | null
    email: string | null
    situacion_sentimental: string | null
    numero_hijos: number | null
    numero_empleado: string | null
    numero_plaza: string | null
    fecha_ingreso: Date | null
    fecha_ingreso_gobierno: Date | null
    nivel_puesto: string | null
    nombre_puesto: string | null
    puesto_inpi: string | null
    adscripcion: string | null
    id_seccion: number | null
    nivel_estudios: string | null
    institucion_estudios: string | null
    certificado_estudios: boolean | null
    plaza_base: string | null
    fecha_actualizacion: Date | null
  }

  export type TrabajadorSntiMaxAggregateOutputType = {
    id_trabajador: number | null
    nombre: string | null
    apellido_paterno: string | null
    apellido_materno: string | null
    fecha_nacimiento: Date | null
    sexo: string | null
    curp: string | null
    rfc: string | null
    email: string | null
    situacion_sentimental: string | null
    numero_hijos: number | null
    numero_empleado: string | null
    numero_plaza: string | null
    fecha_ingreso: Date | null
    fecha_ingreso_gobierno: Date | null
    nivel_puesto: string | null
    nombre_puesto: string | null
    puesto_inpi: string | null
    adscripcion: string | null
    id_seccion: number | null
    nivel_estudios: string | null
    institucion_estudios: string | null
    certificado_estudios: boolean | null
    plaza_base: string | null
    fecha_actualizacion: Date | null
  }

  export type TrabajadorSntiCountAggregateOutputType = {
    id_trabajador: number
    nombre: number
    apellido_paterno: number
    apellido_materno: number
    fecha_nacimiento: number
    sexo: number
    curp: number
    rfc: number
    email: number
    situacion_sentimental: number
    numero_hijos: number
    numero_empleado: number
    numero_plaza: number
    fecha_ingreso: number
    fecha_ingreso_gobierno: number
    nivel_puesto: number
    nombre_puesto: number
    puesto_inpi: number
    adscripcion: number
    id_seccion: number
    nivel_estudios: number
    institucion_estudios: number
    certificado_estudios: number
    plaza_base: number
    fecha_actualizacion: number
    _all: number
  }


  export type TrabajadorSntiAvgAggregateInputType = {
    id_trabajador?: true
    numero_hijos?: true
    id_seccion?: true
  }

  export type TrabajadorSntiSumAggregateInputType = {
    id_trabajador?: true
    numero_hijos?: true
    id_seccion?: true
  }

  export type TrabajadorSntiMinAggregateInputType = {
    id_trabajador?: true
    nombre?: true
    apellido_paterno?: true
    apellido_materno?: true
    fecha_nacimiento?: true
    sexo?: true
    curp?: true
    rfc?: true
    email?: true
    situacion_sentimental?: true
    numero_hijos?: true
    numero_empleado?: true
    numero_plaza?: true
    fecha_ingreso?: true
    fecha_ingreso_gobierno?: true
    nivel_puesto?: true
    nombre_puesto?: true
    puesto_inpi?: true
    adscripcion?: true
    id_seccion?: true
    nivel_estudios?: true
    institucion_estudios?: true
    certificado_estudios?: true
    plaza_base?: true
    fecha_actualizacion?: true
  }

  export type TrabajadorSntiMaxAggregateInputType = {
    id_trabajador?: true
    nombre?: true
    apellido_paterno?: true
    apellido_materno?: true
    fecha_nacimiento?: true
    sexo?: true
    curp?: true
    rfc?: true
    email?: true
    situacion_sentimental?: true
    numero_hijos?: true
    numero_empleado?: true
    numero_plaza?: true
    fecha_ingreso?: true
    fecha_ingreso_gobierno?: true
    nivel_puesto?: true
    nombre_puesto?: true
    puesto_inpi?: true
    adscripcion?: true
    id_seccion?: true
    nivel_estudios?: true
    institucion_estudios?: true
    certificado_estudios?: true
    plaza_base?: true
    fecha_actualizacion?: true
  }

  export type TrabajadorSntiCountAggregateInputType = {
    id_trabajador?: true
    nombre?: true
    apellido_paterno?: true
    apellido_materno?: true
    fecha_nacimiento?: true
    sexo?: true
    curp?: true
    rfc?: true
    email?: true
    situacion_sentimental?: true
    numero_hijos?: true
    numero_empleado?: true
    numero_plaza?: true
    fecha_ingreso?: true
    fecha_ingreso_gobierno?: true
    nivel_puesto?: true
    nombre_puesto?: true
    puesto_inpi?: true
    adscripcion?: true
    id_seccion?: true
    nivel_estudios?: true
    institucion_estudios?: true
    certificado_estudios?: true
    plaza_base?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type TrabajadorSntiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrabajadorSnti to aggregate.
     */
    where?: TrabajadorSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrabajadorSntis to fetch.
     */
    orderBy?: TrabajadorSntiOrderByWithRelationInput | TrabajadorSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TrabajadorSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrabajadorSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrabajadorSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TrabajadorSntis
    **/
    _count?: true | TrabajadorSntiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TrabajadorSntiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TrabajadorSntiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrabajadorSntiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrabajadorSntiMaxAggregateInputType
  }

  export type GetTrabajadorSntiAggregateType<T extends TrabajadorSntiAggregateArgs> = {
        [P in keyof T & keyof AggregateTrabajadorSnti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrabajadorSnti[P]>
      : GetScalarType<T[P], AggregateTrabajadorSnti[P]>
  }




  export type TrabajadorSntiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrabajadorSntiWhereInput
    orderBy?: TrabajadorSntiOrderByWithAggregationInput | TrabajadorSntiOrderByWithAggregationInput[]
    by: TrabajadorSntiScalarFieldEnum[] | TrabajadorSntiScalarFieldEnum
    having?: TrabajadorSntiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrabajadorSntiCountAggregateInputType | true
    _avg?: TrabajadorSntiAvgAggregateInputType
    _sum?: TrabajadorSntiSumAggregateInputType
    _min?: TrabajadorSntiMinAggregateInputType
    _max?: TrabajadorSntiMaxAggregateInputType
  }

  export type TrabajadorSntiGroupByOutputType = {
    id_trabajador: number
    nombre: string
    apellido_paterno: string
    apellido_materno: string | null
    fecha_nacimiento: Date
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental: string | null
    numero_hijos: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date
    fecha_ingreso_gobierno: Date
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios: string | null
    institucion_estudios: string | null
    certificado_estudios: boolean | null
    plaza_base: string | null
    fecha_actualizacion: Date | null
    _count: TrabajadorSntiCountAggregateOutputType | null
    _avg: TrabajadorSntiAvgAggregateOutputType | null
    _sum: TrabajadorSntiSumAggregateOutputType | null
    _min: TrabajadorSntiMinAggregateOutputType | null
    _max: TrabajadorSntiMaxAggregateOutputType | null
  }

  type GetTrabajadorSntiGroupByPayload<T extends TrabajadorSntiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TrabajadorSntiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrabajadorSntiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrabajadorSntiGroupByOutputType[P]>
            : GetScalarType<T[P], TrabajadorSntiGroupByOutputType[P]>
        }
      >
    >


  export type TrabajadorSntiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
    seccion?: boolean | SeccionSntiDefaultArgs<ExtArgs>
    cambios_adscripcion?: boolean | TrabajadorSnti$cambios_adscripcionArgs<ExtArgs>
    documentos?: boolean | TrabajadorSnti$documentosArgs<ExtArgs>
    hijos?: boolean | TrabajadorSnti$hijosArgs<ExtArgs>
    permisos?: boolean | TrabajadorSnti$permisosArgs<ExtArgs>
    sanciones?: boolean | TrabajadorSnti$sancionesArgs<ExtArgs>
    usuarios?: boolean | TrabajadorSnti$usuariosArgs<ExtArgs>
    _count?: boolean | TrabajadorSntiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trabajadorSnti"]>

  export type TrabajadorSntiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
    seccion?: boolean | SeccionSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trabajadorSnti"]>

  export type TrabajadorSntiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
    seccion?: boolean | SeccionSntiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trabajadorSnti"]>

  export type TrabajadorSntiSelectScalar = {
    id_trabajador?: boolean
    nombre?: boolean
    apellido_paterno?: boolean
    apellido_materno?: boolean
    fecha_nacimiento?: boolean
    sexo?: boolean
    curp?: boolean
    rfc?: boolean
    email?: boolean
    situacion_sentimental?: boolean
    numero_hijos?: boolean
    numero_empleado?: boolean
    numero_plaza?: boolean
    fecha_ingreso?: boolean
    fecha_ingreso_gobierno?: boolean
    nivel_puesto?: boolean
    nombre_puesto?: boolean
    puesto_inpi?: boolean
    adscripcion?: boolean
    id_seccion?: boolean
    nivel_estudios?: boolean
    institucion_estudios?: boolean
    certificado_estudios?: boolean
    plaza_base?: boolean
    fecha_actualizacion?: boolean
  }

  export type TrabajadorSntiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_trabajador" | "nombre" | "apellido_paterno" | "apellido_materno" | "fecha_nacimiento" | "sexo" | "curp" | "rfc" | "email" | "situacion_sentimental" | "numero_hijos" | "numero_empleado" | "numero_plaza" | "fecha_ingreso" | "fecha_ingreso_gobierno" | "nivel_puesto" | "nombre_puesto" | "puesto_inpi" | "adscripcion" | "id_seccion" | "nivel_estudios" | "institucion_estudios" | "certificado_estudios" | "plaza_base" | "fecha_actualizacion", ExtArgs["result"]["trabajadorSnti"]>
  export type TrabajadorSntiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seccion?: boolean | SeccionSntiDefaultArgs<ExtArgs>
    cambios_adscripcion?: boolean | TrabajadorSnti$cambios_adscripcionArgs<ExtArgs>
    documentos?: boolean | TrabajadorSnti$documentosArgs<ExtArgs>
    hijos?: boolean | TrabajadorSnti$hijosArgs<ExtArgs>
    permisos?: boolean | TrabajadorSnti$permisosArgs<ExtArgs>
    sanciones?: boolean | TrabajadorSnti$sancionesArgs<ExtArgs>
    usuarios?: boolean | TrabajadorSnti$usuariosArgs<ExtArgs>
    _count?: boolean | TrabajadorSntiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TrabajadorSntiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seccion?: boolean | SeccionSntiDefaultArgs<ExtArgs>
  }
  export type TrabajadorSntiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seccion?: boolean | SeccionSntiDefaultArgs<ExtArgs>
  }

  export type $TrabajadorSntiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TrabajadorSnti"
    objects: {
      seccion: Prisma.$SeccionSntiPayload<ExtArgs>
      cambios_adscripcion: Prisma.$CambioAdscripcionPayload<ExtArgs>[]
      documentos: Prisma.$DocumentoPayload<ExtArgs>[]
      hijos: Prisma.$HijoPayload<ExtArgs>[]
      permisos: Prisma.$PermisoPayload<ExtArgs>[]
      sanciones: Prisma.$SancionSntiPayload<ExtArgs>[]
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_trabajador: number
      nombre: string
      apellido_paterno: string
      apellido_materno: string | null
      fecha_nacimiento: Date
      sexo: string
      curp: string
      rfc: string
      email: string
      situacion_sentimental: string | null
      numero_hijos: number
      numero_empleado: string
      numero_plaza: string
      fecha_ingreso: Date
      fecha_ingreso_gobierno: Date
      nivel_puesto: string
      nombre_puesto: string
      puesto_inpi: string | null
      adscripcion: string
      id_seccion: number
      nivel_estudios: string | null
      institucion_estudios: string | null
      certificado_estudios: boolean | null
      plaza_base: string | null
      fecha_actualizacion: Date | null
    }, ExtArgs["result"]["trabajadorSnti"]>
    composites: {}
  }

  type TrabajadorSntiGetPayload<S extends boolean | null | undefined | TrabajadorSntiDefaultArgs> = $Result.GetResult<Prisma.$TrabajadorSntiPayload, S>

  type TrabajadorSntiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TrabajadorSntiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TrabajadorSntiCountAggregateInputType | true
    }

  export interface TrabajadorSntiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TrabajadorSnti'], meta: { name: 'TrabajadorSnti' } }
    /**
     * Find zero or one TrabajadorSnti that matches the filter.
     * @param {TrabajadorSntiFindUniqueArgs} args - Arguments to find a TrabajadorSnti
     * @example
     * // Get one TrabajadorSnti
     * const trabajadorSnti = await prisma.trabajadorSnti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TrabajadorSntiFindUniqueArgs>(args: SelectSubset<T, TrabajadorSntiFindUniqueArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TrabajadorSnti that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TrabajadorSntiFindUniqueOrThrowArgs} args - Arguments to find a TrabajadorSnti
     * @example
     * // Get one TrabajadorSnti
     * const trabajadorSnti = await prisma.trabajadorSnti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TrabajadorSntiFindUniqueOrThrowArgs>(args: SelectSubset<T, TrabajadorSntiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TrabajadorSnti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiFindFirstArgs} args - Arguments to find a TrabajadorSnti
     * @example
     * // Get one TrabajadorSnti
     * const trabajadorSnti = await prisma.trabajadorSnti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TrabajadorSntiFindFirstArgs>(args?: SelectSubset<T, TrabajadorSntiFindFirstArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TrabajadorSnti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiFindFirstOrThrowArgs} args - Arguments to find a TrabajadorSnti
     * @example
     * // Get one TrabajadorSnti
     * const trabajadorSnti = await prisma.trabajadorSnti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TrabajadorSntiFindFirstOrThrowArgs>(args?: SelectSubset<T, TrabajadorSntiFindFirstOrThrowArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TrabajadorSntis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TrabajadorSntis
     * const trabajadorSntis = await prisma.trabajadorSnti.findMany()
     * 
     * // Get first 10 TrabajadorSntis
     * const trabajadorSntis = await prisma.trabajadorSnti.findMany({ take: 10 })
     * 
     * // Only select the `id_trabajador`
     * const trabajadorSntiWithId_trabajadorOnly = await prisma.trabajadorSnti.findMany({ select: { id_trabajador: true } })
     * 
     */
    findMany<T extends TrabajadorSntiFindManyArgs>(args?: SelectSubset<T, TrabajadorSntiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TrabajadorSnti.
     * @param {TrabajadorSntiCreateArgs} args - Arguments to create a TrabajadorSnti.
     * @example
     * // Create one TrabajadorSnti
     * const TrabajadorSnti = await prisma.trabajadorSnti.create({
     *   data: {
     *     // ... data to create a TrabajadorSnti
     *   }
     * })
     * 
     */
    create<T extends TrabajadorSntiCreateArgs>(args: SelectSubset<T, TrabajadorSntiCreateArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TrabajadorSntis.
     * @param {TrabajadorSntiCreateManyArgs} args - Arguments to create many TrabajadorSntis.
     * @example
     * // Create many TrabajadorSntis
     * const trabajadorSnti = await prisma.trabajadorSnti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TrabajadorSntiCreateManyArgs>(args?: SelectSubset<T, TrabajadorSntiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TrabajadorSntis and returns the data saved in the database.
     * @param {TrabajadorSntiCreateManyAndReturnArgs} args - Arguments to create many TrabajadorSntis.
     * @example
     * // Create many TrabajadorSntis
     * const trabajadorSnti = await prisma.trabajadorSnti.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TrabajadorSntis and only return the `id_trabajador`
     * const trabajadorSntiWithId_trabajadorOnly = await prisma.trabajadorSnti.createManyAndReturn({
     *   select: { id_trabajador: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TrabajadorSntiCreateManyAndReturnArgs>(args?: SelectSubset<T, TrabajadorSntiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TrabajadorSnti.
     * @param {TrabajadorSntiDeleteArgs} args - Arguments to delete one TrabajadorSnti.
     * @example
     * // Delete one TrabajadorSnti
     * const TrabajadorSnti = await prisma.trabajadorSnti.delete({
     *   where: {
     *     // ... filter to delete one TrabajadorSnti
     *   }
     * })
     * 
     */
    delete<T extends TrabajadorSntiDeleteArgs>(args: SelectSubset<T, TrabajadorSntiDeleteArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TrabajadorSnti.
     * @param {TrabajadorSntiUpdateArgs} args - Arguments to update one TrabajadorSnti.
     * @example
     * // Update one TrabajadorSnti
     * const trabajadorSnti = await prisma.trabajadorSnti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TrabajadorSntiUpdateArgs>(args: SelectSubset<T, TrabajadorSntiUpdateArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TrabajadorSntis.
     * @param {TrabajadorSntiDeleteManyArgs} args - Arguments to filter TrabajadorSntis to delete.
     * @example
     * // Delete a few TrabajadorSntis
     * const { count } = await prisma.trabajadorSnti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TrabajadorSntiDeleteManyArgs>(args?: SelectSubset<T, TrabajadorSntiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrabajadorSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TrabajadorSntis
     * const trabajadorSnti = await prisma.trabajadorSnti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TrabajadorSntiUpdateManyArgs>(args: SelectSubset<T, TrabajadorSntiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrabajadorSntis and returns the data updated in the database.
     * @param {TrabajadorSntiUpdateManyAndReturnArgs} args - Arguments to update many TrabajadorSntis.
     * @example
     * // Update many TrabajadorSntis
     * const trabajadorSnti = await prisma.trabajadorSnti.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TrabajadorSntis and only return the `id_trabajador`
     * const trabajadorSntiWithId_trabajadorOnly = await prisma.trabajadorSnti.updateManyAndReturn({
     *   select: { id_trabajador: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TrabajadorSntiUpdateManyAndReturnArgs>(args: SelectSubset<T, TrabajadorSntiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TrabajadorSnti.
     * @param {TrabajadorSntiUpsertArgs} args - Arguments to update or create a TrabajadorSnti.
     * @example
     * // Update or create a TrabajadorSnti
     * const trabajadorSnti = await prisma.trabajadorSnti.upsert({
     *   create: {
     *     // ... data to create a TrabajadorSnti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TrabajadorSnti we want to update
     *   }
     * })
     */
    upsert<T extends TrabajadorSntiUpsertArgs>(args: SelectSubset<T, TrabajadorSntiUpsertArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TrabajadorSntis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiCountArgs} args - Arguments to filter TrabajadorSntis to count.
     * @example
     * // Count the number of TrabajadorSntis
     * const count = await prisma.trabajadorSnti.count({
     *   where: {
     *     // ... the filter for the TrabajadorSntis we want to count
     *   }
     * })
    **/
    count<T extends TrabajadorSntiCountArgs>(
      args?: Subset<T, TrabajadorSntiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrabajadorSntiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TrabajadorSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrabajadorSntiAggregateArgs>(args: Subset<T, TrabajadorSntiAggregateArgs>): Prisma.PrismaPromise<GetTrabajadorSntiAggregateType<T>>

    /**
     * Group by TrabajadorSnti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrabajadorSntiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrabajadorSntiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrabajadorSntiGroupByArgs['orderBy'] }
        : { orderBy?: TrabajadorSntiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrabajadorSntiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrabajadorSntiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TrabajadorSnti model
   */
  readonly fields: TrabajadorSntiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TrabajadorSnti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TrabajadorSntiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    seccion<T extends SeccionSntiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SeccionSntiDefaultArgs<ExtArgs>>): Prisma__SeccionSntiClient<$Result.GetResult<Prisma.$SeccionSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cambios_adscripcion<T extends TrabajadorSnti$cambios_adscripcionArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSnti$cambios_adscripcionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CambioAdscripcionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documentos<T extends TrabajadorSnti$documentosArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSnti$documentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    hijos<T extends TrabajadorSnti$hijosArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSnti$hijosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HijoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    permisos<T extends TrabajadorSnti$permisosArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSnti$permisosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sanciones<T extends TrabajadorSnti$sancionesArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSnti$sancionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SancionSntiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends TrabajadorSnti$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, TrabajadorSnti$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TrabajadorSnti model
   */ 
  interface TrabajadorSntiFieldRefs {
    readonly id_trabajador: FieldRef<"TrabajadorSnti", 'Int'>
    readonly nombre: FieldRef<"TrabajadorSnti", 'String'>
    readonly apellido_paterno: FieldRef<"TrabajadorSnti", 'String'>
    readonly apellido_materno: FieldRef<"TrabajadorSnti", 'String'>
    readonly fecha_nacimiento: FieldRef<"TrabajadorSnti", 'DateTime'>
    readonly sexo: FieldRef<"TrabajadorSnti", 'String'>
    readonly curp: FieldRef<"TrabajadorSnti", 'String'>
    readonly rfc: FieldRef<"TrabajadorSnti", 'String'>
    readonly email: FieldRef<"TrabajadorSnti", 'String'>
    readonly situacion_sentimental: FieldRef<"TrabajadorSnti", 'String'>
    readonly numero_hijos: FieldRef<"TrabajadorSnti", 'Int'>
    readonly numero_empleado: FieldRef<"TrabajadorSnti", 'String'>
    readonly numero_plaza: FieldRef<"TrabajadorSnti", 'String'>
    readonly fecha_ingreso: FieldRef<"TrabajadorSnti", 'DateTime'>
    readonly fecha_ingreso_gobierno: FieldRef<"TrabajadorSnti", 'DateTime'>
    readonly nivel_puesto: FieldRef<"TrabajadorSnti", 'String'>
    readonly nombre_puesto: FieldRef<"TrabajadorSnti", 'String'>
    readonly puesto_inpi: FieldRef<"TrabajadorSnti", 'String'>
    readonly adscripcion: FieldRef<"TrabajadorSnti", 'String'>
    readonly id_seccion: FieldRef<"TrabajadorSnti", 'Int'>
    readonly nivel_estudios: FieldRef<"TrabajadorSnti", 'String'>
    readonly institucion_estudios: FieldRef<"TrabajadorSnti", 'String'>
    readonly certificado_estudios: FieldRef<"TrabajadorSnti", 'Boolean'>
    readonly plaza_base: FieldRef<"TrabajadorSnti", 'String'>
    readonly fecha_actualizacion: FieldRef<"TrabajadorSnti", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TrabajadorSnti findUnique
   */
  export type TrabajadorSntiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * Filter, which TrabajadorSnti to fetch.
     */
    where: TrabajadorSntiWhereUniqueInput
  }

  /**
   * TrabajadorSnti findUniqueOrThrow
   */
  export type TrabajadorSntiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * Filter, which TrabajadorSnti to fetch.
     */
    where: TrabajadorSntiWhereUniqueInput
  }

  /**
   * TrabajadorSnti findFirst
   */
  export type TrabajadorSntiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * Filter, which TrabajadorSnti to fetch.
     */
    where?: TrabajadorSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrabajadorSntis to fetch.
     */
    orderBy?: TrabajadorSntiOrderByWithRelationInput | TrabajadorSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrabajadorSntis.
     */
    cursor?: TrabajadorSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrabajadorSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrabajadorSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrabajadorSntis.
     */
    distinct?: TrabajadorSntiScalarFieldEnum | TrabajadorSntiScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti findFirstOrThrow
   */
  export type TrabajadorSntiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * Filter, which TrabajadorSnti to fetch.
     */
    where?: TrabajadorSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrabajadorSntis to fetch.
     */
    orderBy?: TrabajadorSntiOrderByWithRelationInput | TrabajadorSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrabajadorSntis.
     */
    cursor?: TrabajadorSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrabajadorSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrabajadorSntis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrabajadorSntis.
     */
    distinct?: TrabajadorSntiScalarFieldEnum | TrabajadorSntiScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti findMany
   */
  export type TrabajadorSntiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * Filter, which TrabajadorSntis to fetch.
     */
    where?: TrabajadorSntiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrabajadorSntis to fetch.
     */
    orderBy?: TrabajadorSntiOrderByWithRelationInput | TrabajadorSntiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TrabajadorSntis.
     */
    cursor?: TrabajadorSntiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrabajadorSntis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrabajadorSntis.
     */
    skip?: number
    distinct?: TrabajadorSntiScalarFieldEnum | TrabajadorSntiScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti create
   */
  export type TrabajadorSntiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * The data needed to create a TrabajadorSnti.
     */
    data: XOR<TrabajadorSntiCreateInput, TrabajadorSntiUncheckedCreateInput>
  }

  /**
   * TrabajadorSnti createMany
   */
  export type TrabajadorSntiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TrabajadorSntis.
     */
    data: TrabajadorSntiCreateManyInput | TrabajadorSntiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TrabajadorSnti createManyAndReturn
   */
  export type TrabajadorSntiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * The data used to create many TrabajadorSntis.
     */
    data: TrabajadorSntiCreateManyInput | TrabajadorSntiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TrabajadorSnti update
   */
  export type TrabajadorSntiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * The data needed to update a TrabajadorSnti.
     */
    data: XOR<TrabajadorSntiUpdateInput, TrabajadorSntiUncheckedUpdateInput>
    /**
     * Choose, which TrabajadorSnti to update.
     */
    where: TrabajadorSntiWhereUniqueInput
  }

  /**
   * TrabajadorSnti updateMany
   */
  export type TrabajadorSntiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TrabajadorSntis.
     */
    data: XOR<TrabajadorSntiUpdateManyMutationInput, TrabajadorSntiUncheckedUpdateManyInput>
    /**
     * Filter which TrabajadorSntis to update
     */
    where?: TrabajadorSntiWhereInput
    /**
     * Limit how many TrabajadorSntis to update.
     */
    limit?: number
  }

  /**
   * TrabajadorSnti updateManyAndReturn
   */
  export type TrabajadorSntiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * The data used to update TrabajadorSntis.
     */
    data: XOR<TrabajadorSntiUpdateManyMutationInput, TrabajadorSntiUncheckedUpdateManyInput>
    /**
     * Filter which TrabajadorSntis to update
     */
    where?: TrabajadorSntiWhereInput
    /**
     * Limit how many TrabajadorSntis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TrabajadorSnti upsert
   */
  export type TrabajadorSntiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * The filter to search for the TrabajadorSnti to update in case it exists.
     */
    where: TrabajadorSntiWhereUniqueInput
    /**
     * In case the TrabajadorSnti found by the `where` argument doesn't exist, create a new TrabajadorSnti with this data.
     */
    create: XOR<TrabajadorSntiCreateInput, TrabajadorSntiUncheckedCreateInput>
    /**
     * In case the TrabajadorSnti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TrabajadorSntiUpdateInput, TrabajadorSntiUncheckedUpdateInput>
  }

  /**
   * TrabajadorSnti delete
   */
  export type TrabajadorSntiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    /**
     * Filter which TrabajadorSnti to delete.
     */
    where: TrabajadorSntiWhereUniqueInput
  }

  /**
   * TrabajadorSnti deleteMany
   */
  export type TrabajadorSntiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrabajadorSntis to delete
     */
    where?: TrabajadorSntiWhereInput
    /**
     * Limit how many TrabajadorSntis to delete.
     */
    limit?: number
  }

  /**
   * TrabajadorSnti.cambios_adscripcion
   */
  export type TrabajadorSnti$cambios_adscripcionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CambioAdscripcion
     */
    select?: CambioAdscripcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CambioAdscripcion
     */
    omit?: CambioAdscripcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CambioAdscripcionInclude<ExtArgs> | null
    where?: CambioAdscripcionWhereInput
    orderBy?: CambioAdscripcionOrderByWithRelationInput | CambioAdscripcionOrderByWithRelationInput[]
    cursor?: CambioAdscripcionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CambioAdscripcionScalarFieldEnum | CambioAdscripcionScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti.documentos
   */
  export type TrabajadorSnti$documentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documento
     */
    select?: DocumentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Documento
     */
    omit?: DocumentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoInclude<ExtArgs> | null
    where?: DocumentoWhereInput
    orderBy?: DocumentoOrderByWithRelationInput | DocumentoOrderByWithRelationInput[]
    cursor?: DocumentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentoScalarFieldEnum | DocumentoScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti.hijos
   */
  export type TrabajadorSnti$hijosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Hijo
     */
    select?: HijoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Hijo
     */
    omit?: HijoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HijoInclude<ExtArgs> | null
    where?: HijoWhereInput
    orderBy?: HijoOrderByWithRelationInput | HijoOrderByWithRelationInput[]
    cursor?: HijoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HijoScalarFieldEnum | HijoScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti.permisos
   */
  export type TrabajadorSnti$permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    cursor?: PermisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti.sanciones
   */
  export type TrabajadorSnti$sancionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SancionSnti
     */
    select?: SancionSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SancionSnti
     */
    omit?: SancionSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SancionSntiInclude<ExtArgs> | null
    where?: SancionSntiWhereInput
    orderBy?: SancionSntiOrderByWithRelationInput | SancionSntiOrderByWithRelationInput[]
    cursor?: SancionSntiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SancionSntiScalarFieldEnum | SancionSntiScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti.usuarios
   */
  export type TrabajadorSnti$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * TrabajadorSnti without action
   */
  export type TrabajadorSntiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
    id_trabajador: number | null
    intentos_fallidos: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
    id_trabajador: number | null
    intentos_fallidos: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    id_trabajador: number | null
    identificador: string | null
    contraseña_hash: string | null
    rol: string | null
    intentos_fallidos: number | null
    bloqueado: boolean | null
    fecha_creacion: Date | null
    ultimo_login: Date | null
    ultimo_cambio_password: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    id_trabajador: number | null
    identificador: string | null
    contraseña_hash: string | null
    rol: string | null
    intentos_fallidos: number | null
    bloqueado: boolean | null
    fecha_creacion: Date | null
    ultimo_login: Date | null
    ultimo_cambio_password: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    id_trabajador: number
    identificador: number
    contraseña_hash: number
    rol: number
    intentos_fallidos: number
    bloqueado: number
    fecha_creacion: number
    ultimo_login: number
    ultimo_cambio_password: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
    id_trabajador?: true
    intentos_fallidos?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
    id_trabajador?: true
    intentos_fallidos?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    id_trabajador?: true
    identificador?: true
    contraseña_hash?: true
    rol?: true
    intentos_fallidos?: true
    bloqueado?: true
    fecha_creacion?: true
    ultimo_login?: true
    ultimo_cambio_password?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    id_trabajador?: true
    identificador?: true
    contraseña_hash?: true
    rol?: true
    intentos_fallidos?: true
    bloqueado?: true
    fecha_creacion?: true
    ultimo_login?: true
    ultimo_cambio_password?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    id_trabajador?: true
    identificador?: true
    contraseña_hash?: true
    rol?: true
    intentos_fallidos?: true
    bloqueado?: true
    fecha_creacion?: true
    ultimo_login?: true
    ultimo_cambio_password?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    id_trabajador: number | null
    identificador: string
    contraseña_hash: string
    rol: string
    intentos_fallidos: number | null
    bloqueado: boolean | null
    fecha_creacion: Date | null
    ultimo_login: Date | null
    ultimo_cambio_password: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    id_trabajador?: boolean
    identificador?: boolean
    contraseña_hash?: boolean
    rol?: boolean
    intentos_fallidos?: boolean
    bloqueado?: boolean
    fecha_creacion?: boolean
    ultimo_login?: boolean
    ultimo_cambio_password?: boolean
    trabajador?: boolean | Usuario$trabajadorArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    id_trabajador?: boolean
    identificador?: boolean
    contraseña_hash?: boolean
    rol?: boolean
    intentos_fallidos?: boolean
    bloqueado?: boolean
    fecha_creacion?: boolean
    ultimo_login?: boolean
    ultimo_cambio_password?: boolean
    trabajador?: boolean | Usuario$trabajadorArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    id_trabajador?: boolean
    identificador?: boolean
    contraseña_hash?: boolean
    rol?: boolean
    intentos_fallidos?: boolean
    bloqueado?: boolean
    fecha_creacion?: boolean
    ultimo_login?: boolean
    ultimo_cambio_password?: boolean
    trabajador?: boolean | Usuario$trabajadorArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    id_trabajador?: boolean
    identificador?: boolean
    contraseña_hash?: boolean
    rol?: boolean
    intentos_fallidos?: boolean
    bloqueado?: boolean
    fecha_creacion?: boolean
    ultimo_login?: boolean
    ultimo_cambio_password?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "id_trabajador" | "identificador" | "contraseña_hash" | "rol" | "intentos_fallidos" | "bloqueado" | "fecha_creacion" | "ultimo_login" | "ultimo_cambio_password", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | Usuario$trabajadorArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | Usuario$trabajadorArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    trabajador?: boolean | Usuario$trabajadorArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      trabajador: Prisma.$TrabajadorSntiPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      id_trabajador: number | null
      identificador: string
      contraseña_hash: string
      rol: string
      intentos_fallidos: number | null
      bloqueado: boolean | null
      fecha_creacion: Date | null
      ultimo_login: Date | null
      ultimo_cambio_password: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    trabajador<T extends Usuario$trabajadorArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$trabajadorArgs<ExtArgs>>): Prisma__TrabajadorSntiClient<$Result.GetResult<Prisma.$TrabajadorSntiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'Int'>
    readonly id_trabajador: FieldRef<"Usuario", 'Int'>
    readonly identificador: FieldRef<"Usuario", 'String'>
    readonly contraseña_hash: FieldRef<"Usuario", 'String'>
    readonly rol: FieldRef<"Usuario", 'String'>
    readonly intentos_fallidos: FieldRef<"Usuario", 'Int'>
    readonly bloqueado: FieldRef<"Usuario", 'Boolean'>
    readonly fecha_creacion: FieldRef<"Usuario", 'DateTime'>
    readonly ultimo_login: FieldRef<"Usuario", 'DateTime'>
    readonly ultimo_cambio_password: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.trabajador
   */
  export type Usuario$trabajadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrabajadorSnti
     */
    select?: TrabajadorSntiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TrabajadorSnti
     */
    omit?: TrabajadorSntiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrabajadorSntiInclude<ExtArgs> | null
    where?: TrabajadorSntiWhereInput
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CursoScalarFieldEnum: {
    id_curso: 'id_curso',
    codigo_curso: 'codigo_curso',
    nombre_curso: 'nombre_curso',
    horas_duracion: 'horas_duracion',
    estatus: 'estatus'
  };

  export type CursoScalarFieldEnum = (typeof CursoScalarFieldEnum)[keyof typeof CursoScalarFieldEnum]


  export const SancionScalarFieldEnum: {
    id_sancion: 'id_sancion',
    id_trabajador: 'id_trabajador',
    tipo_sancion: 'tipo_sancion',
    descripcion: 'descripcion',
    fecha_aplicacion: 'fecha_aplicacion',
    fecha_fin: 'fecha_fin',
    estatus: 'estatus',
    usuario_registro: 'usuario_registro',
    fecha_registro: 'fecha_registro'
  };

  export type SancionScalarFieldEnum = (typeof SancionScalarFieldEnum)[keyof typeof SancionScalarFieldEnum]


  export const SeccionScalarFieldEnum: {
    id_seccion: 'id_seccion',
    nombre_seccion: 'nombre_seccion',
    descripcion: 'descripcion'
  };

  export type SeccionScalarFieldEnum = (typeof SeccionScalarFieldEnum)[keyof typeof SeccionScalarFieldEnum]


  export const TrabajadorScalarFieldEnum: {
    id_trabajador: 'id_trabajador',
    nombre: 'nombre',
    apellido_paterno: 'apellido_paterno',
    apellido_materno: 'apellido_materno',
    fecha_nacimiento: 'fecha_nacimiento',
    sexo: 'sexo',
    curp: 'curp',
    rfc: 'rfc',
    email: 'email',
    situacion_sentimental: 'situacion_sentimental',
    numero_hijos: 'numero_hijos',
    numero_empleado: 'numero_empleado',
    numero_plaza: 'numero_plaza',
    fecha_ingreso: 'fecha_ingreso',
    fecha_ingreso_gobierno: 'fecha_ingreso_gobierno',
    nivel_puesto: 'nivel_puesto',
    nombre_puesto: 'nombre_puesto',
    puesto_inpi: 'puesto_inpi',
    adscripcion: 'adscripcion',
    id_seccion: 'id_seccion',
    nivel_estudios: 'nivel_estudios',
    institucion_estudios: 'institucion_estudios',
    certificado_estudios: 'certificado_estudios',
    plaza_base: 'plaza_base',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type TrabajadorScalarFieldEnum = (typeof TrabajadorScalarFieldEnum)[keyof typeof TrabajadorScalarFieldEnum]


  export const AuditoriaScalarFieldEnum: {
    id_auditoria: 'id_auditoria',
    tabla_afectada: 'tabla_afectada',
    id_registro: 'id_registro',
    accion: 'accion',
    datos_anteriores: 'datos_anteriores',
    datos_nuevos: 'datos_nuevos',
    usuario: 'usuario',
    fecha_registro: 'fecha_registro'
  };

  export type AuditoriaScalarFieldEnum = (typeof AuditoriaScalarFieldEnum)[keyof typeof AuditoriaScalarFieldEnum]


  export const CambioAdscripcionScalarFieldEnum: {
    id_cambio: 'id_cambio',
    id_trabajador: 'id_trabajador',
    adscripcion_anterior: 'adscripcion_anterior',
    adscripcion_nueva: 'adscripcion_nueva',
    fecha_cambio: 'fecha_cambio',
    motivo: 'motivo',
    documento_respaldo_id: 'documento_respaldo_id',
    usuario_registro: 'usuario_registro',
    fecha_registro: 'fecha_registro'
  };

  export type CambioAdscripcionScalarFieldEnum = (typeof CambioAdscripcionScalarFieldEnum)[keyof typeof CambioAdscripcionScalarFieldEnum]


  export const CursoSntiScalarFieldEnum: {
    id_curso: 'id_curso',
    codigo_curso: 'codigo_curso',
    nombre_curso: 'nombre_curso',
    horas_duracion: 'horas_duracion'
  };

  export type CursoSntiScalarFieldEnum = (typeof CursoSntiScalarFieldEnum)[keyof typeof CursoSntiScalarFieldEnum]


  export const DocumentoScalarFieldEnum: {
    id_documento: 'id_documento',
    id_trabajador: 'id_trabajador',
    tipo_documento: 'tipo_documento',
    metadata: 'metadata',
    hash_archivo: 'hash_archivo',
    nombre_archivo: 'nombre_archivo',
    descripcion: 'descripcion',
    tipo_archivo: 'tipo_archivo',
    ruta_almacenamiento: 'ruta_almacenamiento',
    fecha_subida: 'fecha_subida',
    tamano_bytes: 'tamano_bytes',
    es_publico: 'es_publico'
  };

  export type DocumentoScalarFieldEnum = (typeof DocumentoScalarFieldEnum)[keyof typeof DocumentoScalarFieldEnum]


  export const HijoScalarFieldEnum: {
    id_hijo: 'id_hijo',
    id_trabajador: 'id_trabajador',
    nombre_completo: 'nombre_completo',
    fecha_nacimiento: 'fecha_nacimiento',
    acta_nacimiento_id: 'acta_nacimiento_id',
    vigente: 'vigente'
  };

  export type HijoScalarFieldEnum = (typeof HijoScalarFieldEnum)[keyof typeof HijoScalarFieldEnum]


  export const PermisoScalarFieldEnum: {
    id_permiso: 'id_permiso',
    id_trabajador: 'id_trabajador',
    tipo_permiso: 'tipo_permiso',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    motivo: 'motivo',
    estatus: 'estatus',
    documento_aprobacion_id: 'documento_aprobacion_id',
    fecha_registro: 'fecha_registro'
  };

  export type PermisoScalarFieldEnum = (typeof PermisoScalarFieldEnum)[keyof typeof PermisoScalarFieldEnum]


  export const SancionSntiScalarFieldEnum: {
    id_sancion: 'id_sancion',
    id_trabajador: 'id_trabajador',
    tipo_sancion: 'tipo_sancion',
    descripcion: 'descripcion',
    fecha_aplicacion: 'fecha_aplicacion',
    fecha_fin: 'fecha_fin',
    estatus: 'estatus',
    usuario_registro: 'usuario_registro',
    fecha_registro: 'fecha_registro'
  };

  export type SancionSntiScalarFieldEnum = (typeof SancionSntiScalarFieldEnum)[keyof typeof SancionSntiScalarFieldEnum]


  export const SeccionSntiScalarFieldEnum: {
    id_seccion: 'id_seccion',
    nombre_seccion: 'nombre_seccion',
    descripcion: 'descripcion'
  };

  export type SeccionSntiScalarFieldEnum = (typeof SeccionSntiScalarFieldEnum)[keyof typeof SeccionSntiScalarFieldEnum]


  export const TrabajadorSntiScalarFieldEnum: {
    id_trabajador: 'id_trabajador',
    nombre: 'nombre',
    apellido_paterno: 'apellido_paterno',
    apellido_materno: 'apellido_materno',
    fecha_nacimiento: 'fecha_nacimiento',
    sexo: 'sexo',
    curp: 'curp',
    rfc: 'rfc',
    email: 'email',
    situacion_sentimental: 'situacion_sentimental',
    numero_hijos: 'numero_hijos',
    numero_empleado: 'numero_empleado',
    numero_plaza: 'numero_plaza',
    fecha_ingreso: 'fecha_ingreso',
    fecha_ingreso_gobierno: 'fecha_ingreso_gobierno',
    nivel_puesto: 'nivel_puesto',
    nombre_puesto: 'nombre_puesto',
    puesto_inpi: 'puesto_inpi',
    adscripcion: 'adscripcion',
    id_seccion: 'id_seccion',
    nivel_estudios: 'nivel_estudios',
    institucion_estudios: 'institucion_estudios',
    certificado_estudios: 'certificado_estudios',
    plaza_base: 'plaza_base',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type TrabajadorSntiScalarFieldEnum = (typeof TrabajadorSntiScalarFieldEnum)[keyof typeof TrabajadorSntiScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    id_trabajador: 'id_trabajador',
    identificador: 'identificador',
    contraseña_hash: 'contraseña_hash',
    rol: 'rol',
    intentos_fallidos: 'intentos_fallidos',
    bloqueado: 'bloqueado',
    fecha_creacion: 'fecha_creacion',
    ultimo_login: 'ultimo_login',
    ultimo_cambio_password: 'ultimo_cambio_password'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type CursoWhereInput = {
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    id_curso?: IntFilter<"Curso"> | number
    codigo_curso?: StringFilter<"Curso"> | string
    nombre_curso?: StringFilter<"Curso"> | string
    horas_duracion?: IntFilter<"Curso"> | number
    estatus?: StringNullableFilter<"Curso"> | string | null
  }

  export type CursoOrderByWithRelationInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
    estatus?: SortOrderInput | SortOrder
  }

  export type CursoWhereUniqueInput = Prisma.AtLeast<{
    id_curso?: number
    codigo_curso?: string
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    nombre_curso?: StringFilter<"Curso"> | string
    horas_duracion?: IntFilter<"Curso"> | number
    estatus?: StringNullableFilter<"Curso"> | string | null
  }, "id_curso" | "codigo_curso">

  export type CursoOrderByWithAggregationInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
    estatus?: SortOrderInput | SortOrder
    _count?: CursoCountOrderByAggregateInput
    _avg?: CursoAvgOrderByAggregateInput
    _max?: CursoMaxOrderByAggregateInput
    _min?: CursoMinOrderByAggregateInput
    _sum?: CursoSumOrderByAggregateInput
  }

  export type CursoScalarWhereWithAggregatesInput = {
    AND?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    OR?: CursoScalarWhereWithAggregatesInput[]
    NOT?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    id_curso?: IntWithAggregatesFilter<"Curso"> | number
    codigo_curso?: StringWithAggregatesFilter<"Curso"> | string
    nombre_curso?: StringWithAggregatesFilter<"Curso"> | string
    horas_duracion?: IntWithAggregatesFilter<"Curso"> | number
    estatus?: StringNullableWithAggregatesFilter<"Curso"> | string | null
  }

  export type SancionWhereInput = {
    AND?: SancionWhereInput | SancionWhereInput[]
    OR?: SancionWhereInput[]
    NOT?: SancionWhereInput | SancionWhereInput[]
    id_sancion?: IntFilter<"Sancion"> | number
    id_trabajador?: IntFilter<"Sancion"> | number
    tipo_sancion?: StringFilter<"Sancion"> | string
    descripcion?: StringFilter<"Sancion"> | string
    fecha_aplicacion?: DateTimeFilter<"Sancion"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"Sancion"> | Date | string | null
    estatus?: StringFilter<"Sancion"> | string
    usuario_registro?: StringNullableFilter<"Sancion"> | string | null
    fecha_registro?: DateTimeNullableFilter<"Sancion"> | Date | string | null
    trabajador?: XOR<TrabajadorScalarRelationFilter, TrabajadorWhereInput>
  }

  export type SancionOrderByWithRelationInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    trabajador?: TrabajadorOrderByWithRelationInput
  }

  export type SancionWhereUniqueInput = Prisma.AtLeast<{
    id_sancion?: number
    AND?: SancionWhereInput | SancionWhereInput[]
    OR?: SancionWhereInput[]
    NOT?: SancionWhereInput | SancionWhereInput[]
    id_trabajador?: IntFilter<"Sancion"> | number
    tipo_sancion?: StringFilter<"Sancion"> | string
    descripcion?: StringFilter<"Sancion"> | string
    fecha_aplicacion?: DateTimeFilter<"Sancion"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"Sancion"> | Date | string | null
    estatus?: StringFilter<"Sancion"> | string
    usuario_registro?: StringNullableFilter<"Sancion"> | string | null
    fecha_registro?: DateTimeNullableFilter<"Sancion"> | Date | string | null
    trabajador?: XOR<TrabajadorScalarRelationFilter, TrabajadorWhereInput>
  }, "id_sancion">

  export type SancionOrderByWithAggregationInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    _count?: SancionCountOrderByAggregateInput
    _avg?: SancionAvgOrderByAggregateInput
    _max?: SancionMaxOrderByAggregateInput
    _min?: SancionMinOrderByAggregateInput
    _sum?: SancionSumOrderByAggregateInput
  }

  export type SancionScalarWhereWithAggregatesInput = {
    AND?: SancionScalarWhereWithAggregatesInput | SancionScalarWhereWithAggregatesInput[]
    OR?: SancionScalarWhereWithAggregatesInput[]
    NOT?: SancionScalarWhereWithAggregatesInput | SancionScalarWhereWithAggregatesInput[]
    id_sancion?: IntWithAggregatesFilter<"Sancion"> | number
    id_trabajador?: IntWithAggregatesFilter<"Sancion"> | number
    tipo_sancion?: StringWithAggregatesFilter<"Sancion"> | string
    descripcion?: StringWithAggregatesFilter<"Sancion"> | string
    fecha_aplicacion?: DateTimeWithAggregatesFilter<"Sancion"> | Date | string
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"Sancion"> | Date | string | null
    estatus?: StringWithAggregatesFilter<"Sancion"> | string
    usuario_registro?: StringNullableWithAggregatesFilter<"Sancion"> | string | null
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"Sancion"> | Date | string | null
  }

  export type SeccionWhereInput = {
    AND?: SeccionWhereInput | SeccionWhereInput[]
    OR?: SeccionWhereInput[]
    NOT?: SeccionWhereInput | SeccionWhereInput[]
    id_seccion?: IntFilter<"Seccion"> | number
    nombre_seccion?: StringFilter<"Seccion"> | string
    descripcion?: StringNullableFilter<"Seccion"> | string | null
    trabajadores?: TrabajadorListRelationFilter
  }

  export type SeccionOrderByWithRelationInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    trabajadores?: TrabajadorOrderByRelationAggregateInput
  }

  export type SeccionWhereUniqueInput = Prisma.AtLeast<{
    id_seccion?: number
    AND?: SeccionWhereInput | SeccionWhereInput[]
    OR?: SeccionWhereInput[]
    NOT?: SeccionWhereInput | SeccionWhereInput[]
    nombre_seccion?: StringFilter<"Seccion"> | string
    descripcion?: StringNullableFilter<"Seccion"> | string | null
    trabajadores?: TrabajadorListRelationFilter
  }, "id_seccion">

  export type SeccionOrderByWithAggregationInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: SeccionCountOrderByAggregateInput
    _avg?: SeccionAvgOrderByAggregateInput
    _max?: SeccionMaxOrderByAggregateInput
    _min?: SeccionMinOrderByAggregateInput
    _sum?: SeccionSumOrderByAggregateInput
  }

  export type SeccionScalarWhereWithAggregatesInput = {
    AND?: SeccionScalarWhereWithAggregatesInput | SeccionScalarWhereWithAggregatesInput[]
    OR?: SeccionScalarWhereWithAggregatesInput[]
    NOT?: SeccionScalarWhereWithAggregatesInput | SeccionScalarWhereWithAggregatesInput[]
    id_seccion?: IntWithAggregatesFilter<"Seccion"> | number
    nombre_seccion?: StringWithAggregatesFilter<"Seccion"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Seccion"> | string | null
  }

  export type TrabajadorWhereInput = {
    AND?: TrabajadorWhereInput | TrabajadorWhereInput[]
    OR?: TrabajadorWhereInput[]
    NOT?: TrabajadorWhereInput | TrabajadorWhereInput[]
    id_trabajador?: IntFilter<"Trabajador"> | number
    nombre?: StringFilter<"Trabajador"> | string
    apellido_paterno?: StringFilter<"Trabajador"> | string
    apellido_materno?: StringNullableFilter<"Trabajador"> | string | null
    fecha_nacimiento?: DateTimeFilter<"Trabajador"> | Date | string
    sexo?: StringFilter<"Trabajador"> | string
    curp?: StringFilter<"Trabajador"> | string
    rfc?: StringFilter<"Trabajador"> | string
    email?: StringFilter<"Trabajador"> | string
    situacion_sentimental?: StringNullableFilter<"Trabajador"> | string | null
    numero_hijos?: IntFilter<"Trabajador"> | number
    numero_empleado?: StringFilter<"Trabajador"> | string
    numero_plaza?: StringFilter<"Trabajador"> | string
    fecha_ingreso?: DateTimeFilter<"Trabajador"> | Date | string
    fecha_ingreso_gobierno?: DateTimeFilter<"Trabajador"> | Date | string
    nivel_puesto?: StringFilter<"Trabajador"> | string
    nombre_puesto?: StringFilter<"Trabajador"> | string
    puesto_inpi?: StringNullableFilter<"Trabajador"> | string | null
    adscripcion?: StringFilter<"Trabajador"> | string
    id_seccion?: IntFilter<"Trabajador"> | number
    nivel_estudios?: StringNullableFilter<"Trabajador"> | string | null
    institucion_estudios?: StringNullableFilter<"Trabajador"> | string | null
    certificado_estudios?: BoolNullableFilter<"Trabajador"> | boolean | null
    plaza_base?: StringNullableFilter<"Trabajador"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"Trabajador"> | Date | string | null
    seccion?: XOR<SeccionScalarRelationFilter, SeccionWhereInput>
    sanciones?: SancionListRelationFilter
  }

  export type TrabajadorOrderByWithRelationInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrderInput | SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrderInput | SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrderInput | SortOrder
    institucion_estudios?: SortOrderInput | SortOrder
    certificado_estudios?: SortOrderInput | SortOrder
    plaza_base?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    seccion?: SeccionOrderByWithRelationInput
    sanciones?: SancionOrderByRelationAggregateInput
  }

  export type TrabajadorWhereUniqueInput = Prisma.AtLeast<{
    id_trabajador?: number
    curp?: string
    rfc?: string
    email?: string
    numero_empleado?: string
    numero_plaza?: string
    AND?: TrabajadorWhereInput | TrabajadorWhereInput[]
    OR?: TrabajadorWhereInput[]
    NOT?: TrabajadorWhereInput | TrabajadorWhereInput[]
    nombre?: StringFilter<"Trabajador"> | string
    apellido_paterno?: StringFilter<"Trabajador"> | string
    apellido_materno?: StringNullableFilter<"Trabajador"> | string | null
    fecha_nacimiento?: DateTimeFilter<"Trabajador"> | Date | string
    sexo?: StringFilter<"Trabajador"> | string
    situacion_sentimental?: StringNullableFilter<"Trabajador"> | string | null
    numero_hijos?: IntFilter<"Trabajador"> | number
    fecha_ingreso?: DateTimeFilter<"Trabajador"> | Date | string
    fecha_ingreso_gobierno?: DateTimeFilter<"Trabajador"> | Date | string
    nivel_puesto?: StringFilter<"Trabajador"> | string
    nombre_puesto?: StringFilter<"Trabajador"> | string
    puesto_inpi?: StringNullableFilter<"Trabajador"> | string | null
    adscripcion?: StringFilter<"Trabajador"> | string
    id_seccion?: IntFilter<"Trabajador"> | number
    nivel_estudios?: StringNullableFilter<"Trabajador"> | string | null
    institucion_estudios?: StringNullableFilter<"Trabajador"> | string | null
    certificado_estudios?: BoolNullableFilter<"Trabajador"> | boolean | null
    plaza_base?: StringNullableFilter<"Trabajador"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"Trabajador"> | Date | string | null
    seccion?: XOR<SeccionScalarRelationFilter, SeccionWhereInput>
    sanciones?: SancionListRelationFilter
  }, "id_trabajador" | "curp" | "rfc" | "email" | "numero_empleado" | "numero_plaza">

  export type TrabajadorOrderByWithAggregationInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrderInput | SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrderInput | SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrderInput | SortOrder
    institucion_estudios?: SortOrderInput | SortOrder
    certificado_estudios?: SortOrderInput | SortOrder
    plaza_base?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: TrabajadorCountOrderByAggregateInput
    _avg?: TrabajadorAvgOrderByAggregateInput
    _max?: TrabajadorMaxOrderByAggregateInput
    _min?: TrabajadorMinOrderByAggregateInput
    _sum?: TrabajadorSumOrderByAggregateInput
  }

  export type TrabajadorScalarWhereWithAggregatesInput = {
    AND?: TrabajadorScalarWhereWithAggregatesInput | TrabajadorScalarWhereWithAggregatesInput[]
    OR?: TrabajadorScalarWhereWithAggregatesInput[]
    NOT?: TrabajadorScalarWhereWithAggregatesInput | TrabajadorScalarWhereWithAggregatesInput[]
    id_trabajador?: IntWithAggregatesFilter<"Trabajador"> | number
    nombre?: StringWithAggregatesFilter<"Trabajador"> | string
    apellido_paterno?: StringWithAggregatesFilter<"Trabajador"> | string
    apellido_materno?: StringNullableWithAggregatesFilter<"Trabajador"> | string | null
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"Trabajador"> | Date | string
    sexo?: StringWithAggregatesFilter<"Trabajador"> | string
    curp?: StringWithAggregatesFilter<"Trabajador"> | string
    rfc?: StringWithAggregatesFilter<"Trabajador"> | string
    email?: StringWithAggregatesFilter<"Trabajador"> | string
    situacion_sentimental?: StringNullableWithAggregatesFilter<"Trabajador"> | string | null
    numero_hijos?: IntWithAggregatesFilter<"Trabajador"> | number
    numero_empleado?: StringWithAggregatesFilter<"Trabajador"> | string
    numero_plaza?: StringWithAggregatesFilter<"Trabajador"> | string
    fecha_ingreso?: DateTimeWithAggregatesFilter<"Trabajador"> | Date | string
    fecha_ingreso_gobierno?: DateTimeWithAggregatesFilter<"Trabajador"> | Date | string
    nivel_puesto?: StringWithAggregatesFilter<"Trabajador"> | string
    nombre_puesto?: StringWithAggregatesFilter<"Trabajador"> | string
    puesto_inpi?: StringNullableWithAggregatesFilter<"Trabajador"> | string | null
    adscripcion?: StringWithAggregatesFilter<"Trabajador"> | string
    id_seccion?: IntWithAggregatesFilter<"Trabajador"> | number
    nivel_estudios?: StringNullableWithAggregatesFilter<"Trabajador"> | string | null
    institucion_estudios?: StringNullableWithAggregatesFilter<"Trabajador"> | string | null
    certificado_estudios?: BoolNullableWithAggregatesFilter<"Trabajador"> | boolean | null
    plaza_base?: StringNullableWithAggregatesFilter<"Trabajador"> | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"Trabajador"> | Date | string | null
  }

  export type AuditoriaWhereInput = {
    AND?: AuditoriaWhereInput | AuditoriaWhereInput[]
    OR?: AuditoriaWhereInput[]
    NOT?: AuditoriaWhereInput | AuditoriaWhereInput[]
    id_auditoria?: IntFilter<"Auditoria"> | number
    tabla_afectada?: StringFilter<"Auditoria"> | string
    id_registro?: IntFilter<"Auditoria"> | number
    accion?: StringFilter<"Auditoria"> | string
    datos_anteriores?: JsonNullableFilter<"Auditoria">
    datos_nuevos?: JsonNullableFilter<"Auditoria">
    usuario?: StringFilter<"Auditoria"> | string
    fecha_registro?: DateTimeNullableFilter<"Auditoria"> | Date | string | null
  }

  export type AuditoriaOrderByWithRelationInput = {
    id_auditoria?: SortOrder
    tabla_afectada?: SortOrder
    id_registro?: SortOrder
    accion?: SortOrder
    datos_anteriores?: SortOrderInput | SortOrder
    datos_nuevos?: SortOrderInput | SortOrder
    usuario?: SortOrder
    fecha_registro?: SortOrderInput | SortOrder
  }

  export type AuditoriaWhereUniqueInput = Prisma.AtLeast<{
    id_auditoria?: number
    AND?: AuditoriaWhereInput | AuditoriaWhereInput[]
    OR?: AuditoriaWhereInput[]
    NOT?: AuditoriaWhereInput | AuditoriaWhereInput[]
    tabla_afectada?: StringFilter<"Auditoria"> | string
    id_registro?: IntFilter<"Auditoria"> | number
    accion?: StringFilter<"Auditoria"> | string
    datos_anteriores?: JsonNullableFilter<"Auditoria">
    datos_nuevos?: JsonNullableFilter<"Auditoria">
    usuario?: StringFilter<"Auditoria"> | string
    fecha_registro?: DateTimeNullableFilter<"Auditoria"> | Date | string | null
  }, "id_auditoria">

  export type AuditoriaOrderByWithAggregationInput = {
    id_auditoria?: SortOrder
    tabla_afectada?: SortOrder
    id_registro?: SortOrder
    accion?: SortOrder
    datos_anteriores?: SortOrderInput | SortOrder
    datos_nuevos?: SortOrderInput | SortOrder
    usuario?: SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    _count?: AuditoriaCountOrderByAggregateInput
    _avg?: AuditoriaAvgOrderByAggregateInput
    _max?: AuditoriaMaxOrderByAggregateInput
    _min?: AuditoriaMinOrderByAggregateInput
    _sum?: AuditoriaSumOrderByAggregateInput
  }

  export type AuditoriaScalarWhereWithAggregatesInput = {
    AND?: AuditoriaScalarWhereWithAggregatesInput | AuditoriaScalarWhereWithAggregatesInput[]
    OR?: AuditoriaScalarWhereWithAggregatesInput[]
    NOT?: AuditoriaScalarWhereWithAggregatesInput | AuditoriaScalarWhereWithAggregatesInput[]
    id_auditoria?: IntWithAggregatesFilter<"Auditoria"> | number
    tabla_afectada?: StringWithAggregatesFilter<"Auditoria"> | string
    id_registro?: IntWithAggregatesFilter<"Auditoria"> | number
    accion?: StringWithAggregatesFilter<"Auditoria"> | string
    datos_anteriores?: JsonNullableWithAggregatesFilter<"Auditoria">
    datos_nuevos?: JsonNullableWithAggregatesFilter<"Auditoria">
    usuario?: StringWithAggregatesFilter<"Auditoria"> | string
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"Auditoria"> | Date | string | null
  }

  export type CambioAdscripcionWhereInput = {
    AND?: CambioAdscripcionWhereInput | CambioAdscripcionWhereInput[]
    OR?: CambioAdscripcionWhereInput[]
    NOT?: CambioAdscripcionWhereInput | CambioAdscripcionWhereInput[]
    id_cambio?: IntFilter<"CambioAdscripcion"> | number
    id_trabajador?: IntFilter<"CambioAdscripcion"> | number
    adscripcion_anterior?: StringFilter<"CambioAdscripcion"> | string
    adscripcion_nueva?: StringFilter<"CambioAdscripcion"> | string
    fecha_cambio?: DateTimeFilter<"CambioAdscripcion"> | Date | string
    motivo?: StringFilter<"CambioAdscripcion"> | string
    documento_respaldo_id?: IntNullableFilter<"CambioAdscripcion"> | number | null
    usuario_registro?: StringNullableFilter<"CambioAdscripcion"> | string | null
    fecha_registro?: DateTimeNullableFilter<"CambioAdscripcion"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    documento_respaldo?: XOR<DocumentoNullableScalarRelationFilter, DocumentoWhereInput> | null
  }

  export type CambioAdscripcionOrderByWithRelationInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    adscripcion_anterior?: SortOrder
    adscripcion_nueva?: SortOrder
    fecha_cambio?: SortOrder
    motivo?: SortOrder
    documento_respaldo_id?: SortOrderInput | SortOrder
    usuario_registro?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    trabajador?: TrabajadorSntiOrderByWithRelationInput
    documento_respaldo?: DocumentoOrderByWithRelationInput
  }

  export type CambioAdscripcionWhereUniqueInput = Prisma.AtLeast<{
    id_cambio?: number
    AND?: CambioAdscripcionWhereInput | CambioAdscripcionWhereInput[]
    OR?: CambioAdscripcionWhereInput[]
    NOT?: CambioAdscripcionWhereInput | CambioAdscripcionWhereInput[]
    id_trabajador?: IntFilter<"CambioAdscripcion"> | number
    adscripcion_anterior?: StringFilter<"CambioAdscripcion"> | string
    adscripcion_nueva?: StringFilter<"CambioAdscripcion"> | string
    fecha_cambio?: DateTimeFilter<"CambioAdscripcion"> | Date | string
    motivo?: StringFilter<"CambioAdscripcion"> | string
    documento_respaldo_id?: IntNullableFilter<"CambioAdscripcion"> | number | null
    usuario_registro?: StringNullableFilter<"CambioAdscripcion"> | string | null
    fecha_registro?: DateTimeNullableFilter<"CambioAdscripcion"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    documento_respaldo?: XOR<DocumentoNullableScalarRelationFilter, DocumentoWhereInput> | null
  }, "id_cambio">

  export type CambioAdscripcionOrderByWithAggregationInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    adscripcion_anterior?: SortOrder
    adscripcion_nueva?: SortOrder
    fecha_cambio?: SortOrder
    motivo?: SortOrder
    documento_respaldo_id?: SortOrderInput | SortOrder
    usuario_registro?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    _count?: CambioAdscripcionCountOrderByAggregateInput
    _avg?: CambioAdscripcionAvgOrderByAggregateInput
    _max?: CambioAdscripcionMaxOrderByAggregateInput
    _min?: CambioAdscripcionMinOrderByAggregateInput
    _sum?: CambioAdscripcionSumOrderByAggregateInput
  }

  export type CambioAdscripcionScalarWhereWithAggregatesInput = {
    AND?: CambioAdscripcionScalarWhereWithAggregatesInput | CambioAdscripcionScalarWhereWithAggregatesInput[]
    OR?: CambioAdscripcionScalarWhereWithAggregatesInput[]
    NOT?: CambioAdscripcionScalarWhereWithAggregatesInput | CambioAdscripcionScalarWhereWithAggregatesInput[]
    id_cambio?: IntWithAggregatesFilter<"CambioAdscripcion"> | number
    id_trabajador?: IntWithAggregatesFilter<"CambioAdscripcion"> | number
    adscripcion_anterior?: StringWithAggregatesFilter<"CambioAdscripcion"> | string
    adscripcion_nueva?: StringWithAggregatesFilter<"CambioAdscripcion"> | string
    fecha_cambio?: DateTimeWithAggregatesFilter<"CambioAdscripcion"> | Date | string
    motivo?: StringWithAggregatesFilter<"CambioAdscripcion"> | string
    documento_respaldo_id?: IntNullableWithAggregatesFilter<"CambioAdscripcion"> | number | null
    usuario_registro?: StringNullableWithAggregatesFilter<"CambioAdscripcion"> | string | null
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"CambioAdscripcion"> | Date | string | null
  }

  export type CursoSntiWhereInput = {
    AND?: CursoSntiWhereInput | CursoSntiWhereInput[]
    OR?: CursoSntiWhereInput[]
    NOT?: CursoSntiWhereInput | CursoSntiWhereInput[]
    id_curso?: IntFilter<"CursoSnti"> | number
    codigo_curso?: StringFilter<"CursoSnti"> | string
    nombre_curso?: StringFilter<"CursoSnti"> | string
    horas_duracion?: IntFilter<"CursoSnti"> | number
  }

  export type CursoSntiOrderByWithRelationInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type CursoSntiWhereUniqueInput = Prisma.AtLeast<{
    id_curso?: number
    codigo_curso?: string
    AND?: CursoSntiWhereInput | CursoSntiWhereInput[]
    OR?: CursoSntiWhereInput[]
    NOT?: CursoSntiWhereInput | CursoSntiWhereInput[]
    nombre_curso?: StringFilter<"CursoSnti"> | string
    horas_duracion?: IntFilter<"CursoSnti"> | number
  }, "id_curso" | "codigo_curso">

  export type CursoSntiOrderByWithAggregationInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
    _count?: CursoSntiCountOrderByAggregateInput
    _avg?: CursoSntiAvgOrderByAggregateInput
    _max?: CursoSntiMaxOrderByAggregateInput
    _min?: CursoSntiMinOrderByAggregateInput
    _sum?: CursoSntiSumOrderByAggregateInput
  }

  export type CursoSntiScalarWhereWithAggregatesInput = {
    AND?: CursoSntiScalarWhereWithAggregatesInput | CursoSntiScalarWhereWithAggregatesInput[]
    OR?: CursoSntiScalarWhereWithAggregatesInput[]
    NOT?: CursoSntiScalarWhereWithAggregatesInput | CursoSntiScalarWhereWithAggregatesInput[]
    id_curso?: IntWithAggregatesFilter<"CursoSnti"> | number
    codigo_curso?: StringWithAggregatesFilter<"CursoSnti"> | string
    nombre_curso?: StringWithAggregatesFilter<"CursoSnti"> | string
    horas_duracion?: IntWithAggregatesFilter<"CursoSnti"> | number
  }

  export type DocumentoWhereInput = {
    AND?: DocumentoWhereInput | DocumentoWhereInput[]
    OR?: DocumentoWhereInput[]
    NOT?: DocumentoWhereInput | DocumentoWhereInput[]
    id_documento?: IntFilter<"Documento"> | number
    id_trabajador?: IntFilter<"Documento"> | number
    tipo_documento?: StringFilter<"Documento"> | string
    metadata?: JsonNullableFilter<"Documento">
    hash_archivo?: StringFilter<"Documento"> | string
    nombre_archivo?: StringFilter<"Documento"> | string
    descripcion?: StringNullableFilter<"Documento"> | string | null
    tipo_archivo?: StringNullableFilter<"Documento"> | string | null
    ruta_almacenamiento?: StringFilter<"Documento"> | string
    fecha_subida?: DateTimeNullableFilter<"Documento"> | Date | string | null
    tamano_bytes?: BigIntFilter<"Documento"> | bigint | number
    es_publico?: BoolNullableFilter<"Documento"> | boolean | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    hijos?: HijoListRelationFilter
    permisos?: PermisoListRelationFilter
    cambios_adscripcion?: CambioAdscripcionListRelationFilter
  }

  export type DocumentoOrderByWithRelationInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tipo_documento?: SortOrder
    metadata?: SortOrderInput | SortOrder
    hash_archivo?: SortOrder
    nombre_archivo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    tipo_archivo?: SortOrderInput | SortOrder
    ruta_almacenamiento?: SortOrder
    fecha_subida?: SortOrderInput | SortOrder
    tamano_bytes?: SortOrder
    es_publico?: SortOrderInput | SortOrder
    trabajador?: TrabajadorSntiOrderByWithRelationInput
    hijos?: HijoOrderByRelationAggregateInput
    permisos?: PermisoOrderByRelationAggregateInput
    cambios_adscripcion?: CambioAdscripcionOrderByRelationAggregateInput
  }

  export type DocumentoWhereUniqueInput = Prisma.AtLeast<{
    id_documento?: number
    AND?: DocumentoWhereInput | DocumentoWhereInput[]
    OR?: DocumentoWhereInput[]
    NOT?: DocumentoWhereInput | DocumentoWhereInput[]
    id_trabajador?: IntFilter<"Documento"> | number
    tipo_documento?: StringFilter<"Documento"> | string
    metadata?: JsonNullableFilter<"Documento">
    hash_archivo?: StringFilter<"Documento"> | string
    nombre_archivo?: StringFilter<"Documento"> | string
    descripcion?: StringNullableFilter<"Documento"> | string | null
    tipo_archivo?: StringNullableFilter<"Documento"> | string | null
    ruta_almacenamiento?: StringFilter<"Documento"> | string
    fecha_subida?: DateTimeNullableFilter<"Documento"> | Date | string | null
    tamano_bytes?: BigIntFilter<"Documento"> | bigint | number
    es_publico?: BoolNullableFilter<"Documento"> | boolean | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    hijos?: HijoListRelationFilter
    permisos?: PermisoListRelationFilter
    cambios_adscripcion?: CambioAdscripcionListRelationFilter
  }, "id_documento">

  export type DocumentoOrderByWithAggregationInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tipo_documento?: SortOrder
    metadata?: SortOrderInput | SortOrder
    hash_archivo?: SortOrder
    nombre_archivo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    tipo_archivo?: SortOrderInput | SortOrder
    ruta_almacenamiento?: SortOrder
    fecha_subida?: SortOrderInput | SortOrder
    tamano_bytes?: SortOrder
    es_publico?: SortOrderInput | SortOrder
    _count?: DocumentoCountOrderByAggregateInput
    _avg?: DocumentoAvgOrderByAggregateInput
    _max?: DocumentoMaxOrderByAggregateInput
    _min?: DocumentoMinOrderByAggregateInput
    _sum?: DocumentoSumOrderByAggregateInput
  }

  export type DocumentoScalarWhereWithAggregatesInput = {
    AND?: DocumentoScalarWhereWithAggregatesInput | DocumentoScalarWhereWithAggregatesInput[]
    OR?: DocumentoScalarWhereWithAggregatesInput[]
    NOT?: DocumentoScalarWhereWithAggregatesInput | DocumentoScalarWhereWithAggregatesInput[]
    id_documento?: IntWithAggregatesFilter<"Documento"> | number
    id_trabajador?: IntWithAggregatesFilter<"Documento"> | number
    tipo_documento?: StringWithAggregatesFilter<"Documento"> | string
    metadata?: JsonNullableWithAggregatesFilter<"Documento">
    hash_archivo?: StringWithAggregatesFilter<"Documento"> | string
    nombre_archivo?: StringWithAggregatesFilter<"Documento"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Documento"> | string | null
    tipo_archivo?: StringNullableWithAggregatesFilter<"Documento"> | string | null
    ruta_almacenamiento?: StringWithAggregatesFilter<"Documento"> | string
    fecha_subida?: DateTimeNullableWithAggregatesFilter<"Documento"> | Date | string | null
    tamano_bytes?: BigIntWithAggregatesFilter<"Documento"> | bigint | number
    es_publico?: BoolNullableWithAggregatesFilter<"Documento"> | boolean | null
  }

  export type HijoWhereInput = {
    AND?: HijoWhereInput | HijoWhereInput[]
    OR?: HijoWhereInput[]
    NOT?: HijoWhereInput | HijoWhereInput[]
    id_hijo?: IntFilter<"Hijo"> | number
    id_trabajador?: IntFilter<"Hijo"> | number
    nombre_completo?: StringFilter<"Hijo"> | string
    fecha_nacimiento?: DateTimeFilter<"Hijo"> | Date | string
    acta_nacimiento_id?: IntNullableFilter<"Hijo"> | number | null
    vigente?: BoolNullableFilter<"Hijo"> | boolean | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    acta_nacimiento?: XOR<DocumentoNullableScalarRelationFilter, DocumentoWhereInput> | null
  }

  export type HijoOrderByWithRelationInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    nombre_completo?: SortOrder
    fecha_nacimiento?: SortOrder
    acta_nacimiento_id?: SortOrderInput | SortOrder
    vigente?: SortOrderInput | SortOrder
    trabajador?: TrabajadorSntiOrderByWithRelationInput
    acta_nacimiento?: DocumentoOrderByWithRelationInput
  }

  export type HijoWhereUniqueInput = Prisma.AtLeast<{
    id_hijo?: number
    AND?: HijoWhereInput | HijoWhereInput[]
    OR?: HijoWhereInput[]
    NOT?: HijoWhereInput | HijoWhereInput[]
    id_trabajador?: IntFilter<"Hijo"> | number
    nombre_completo?: StringFilter<"Hijo"> | string
    fecha_nacimiento?: DateTimeFilter<"Hijo"> | Date | string
    acta_nacimiento_id?: IntNullableFilter<"Hijo"> | number | null
    vigente?: BoolNullableFilter<"Hijo"> | boolean | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    acta_nacimiento?: XOR<DocumentoNullableScalarRelationFilter, DocumentoWhereInput> | null
  }, "id_hijo">

  export type HijoOrderByWithAggregationInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    nombre_completo?: SortOrder
    fecha_nacimiento?: SortOrder
    acta_nacimiento_id?: SortOrderInput | SortOrder
    vigente?: SortOrderInput | SortOrder
    _count?: HijoCountOrderByAggregateInput
    _avg?: HijoAvgOrderByAggregateInput
    _max?: HijoMaxOrderByAggregateInput
    _min?: HijoMinOrderByAggregateInput
    _sum?: HijoSumOrderByAggregateInput
  }

  export type HijoScalarWhereWithAggregatesInput = {
    AND?: HijoScalarWhereWithAggregatesInput | HijoScalarWhereWithAggregatesInput[]
    OR?: HijoScalarWhereWithAggregatesInput[]
    NOT?: HijoScalarWhereWithAggregatesInput | HijoScalarWhereWithAggregatesInput[]
    id_hijo?: IntWithAggregatesFilter<"Hijo"> | number
    id_trabajador?: IntWithAggregatesFilter<"Hijo"> | number
    nombre_completo?: StringWithAggregatesFilter<"Hijo"> | string
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"Hijo"> | Date | string
    acta_nacimiento_id?: IntNullableWithAggregatesFilter<"Hijo"> | number | null
    vigente?: BoolNullableWithAggregatesFilter<"Hijo"> | boolean | null
  }

  export type PermisoWhereInput = {
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    id_permiso?: IntFilter<"Permiso"> | number
    id_trabajador?: IntFilter<"Permiso"> | number
    tipo_permiso?: StringNullableFilter<"Permiso"> | string | null
    fecha_inicio?: DateTimeFilter<"Permiso"> | Date | string
    fecha_fin?: DateTimeFilter<"Permiso"> | Date | string
    motivo?: StringFilter<"Permiso"> | string
    estatus?: StringNullableFilter<"Permiso"> | string | null
    documento_aprobacion_id?: IntNullableFilter<"Permiso"> | number | null
    fecha_registro?: DateTimeNullableFilter<"Permiso"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    documento_aprobacion?: XOR<DocumentoNullableScalarRelationFilter, DocumentoWhereInput> | null
  }

  export type PermisoOrderByWithRelationInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    tipo_permiso?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
    estatus?: SortOrderInput | SortOrder
    documento_aprobacion_id?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    trabajador?: TrabajadorSntiOrderByWithRelationInput
    documento_aprobacion?: DocumentoOrderByWithRelationInput
  }

  export type PermisoWhereUniqueInput = Prisma.AtLeast<{
    id_permiso?: number
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    id_trabajador?: IntFilter<"Permiso"> | number
    tipo_permiso?: StringNullableFilter<"Permiso"> | string | null
    fecha_inicio?: DateTimeFilter<"Permiso"> | Date | string
    fecha_fin?: DateTimeFilter<"Permiso"> | Date | string
    motivo?: StringFilter<"Permiso"> | string
    estatus?: StringNullableFilter<"Permiso"> | string | null
    documento_aprobacion_id?: IntNullableFilter<"Permiso"> | number | null
    fecha_registro?: DateTimeNullableFilter<"Permiso"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
    documento_aprobacion?: XOR<DocumentoNullableScalarRelationFilter, DocumentoWhereInput> | null
  }, "id_permiso">

  export type PermisoOrderByWithAggregationInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    tipo_permiso?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
    estatus?: SortOrderInput | SortOrder
    documento_aprobacion_id?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    _count?: PermisoCountOrderByAggregateInput
    _avg?: PermisoAvgOrderByAggregateInput
    _max?: PermisoMaxOrderByAggregateInput
    _min?: PermisoMinOrderByAggregateInput
    _sum?: PermisoSumOrderByAggregateInput
  }

  export type PermisoScalarWhereWithAggregatesInput = {
    AND?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    OR?: PermisoScalarWhereWithAggregatesInput[]
    NOT?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    id_permiso?: IntWithAggregatesFilter<"Permiso"> | number
    id_trabajador?: IntWithAggregatesFilter<"Permiso"> | number
    tipo_permiso?: StringNullableWithAggregatesFilter<"Permiso"> | string | null
    fecha_inicio?: DateTimeWithAggregatesFilter<"Permiso"> | Date | string
    fecha_fin?: DateTimeWithAggregatesFilter<"Permiso"> | Date | string
    motivo?: StringWithAggregatesFilter<"Permiso"> | string
    estatus?: StringNullableWithAggregatesFilter<"Permiso"> | string | null
    documento_aprobacion_id?: IntNullableWithAggregatesFilter<"Permiso"> | number | null
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"Permiso"> | Date | string | null
  }

  export type SancionSntiWhereInput = {
    AND?: SancionSntiWhereInput | SancionSntiWhereInput[]
    OR?: SancionSntiWhereInput[]
    NOT?: SancionSntiWhereInput | SancionSntiWhereInput[]
    id_sancion?: IntFilter<"SancionSnti"> | number
    id_trabajador?: IntFilter<"SancionSnti"> | number
    tipo_sancion?: StringFilter<"SancionSnti"> | string
    descripcion?: StringFilter<"SancionSnti"> | string
    fecha_aplicacion?: DateTimeFilter<"SancionSnti"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"SancionSnti"> | Date | string | null
    estatus?: StringNullableFilter<"SancionSnti"> | string | null
    usuario_registro?: StringNullableFilter<"SancionSnti"> | string | null
    fecha_registro?: DateTimeNullableFilter<"SancionSnti"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
  }

  export type SancionSntiOrderByWithRelationInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estatus?: SortOrderInput | SortOrder
    usuario_registro?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    trabajador?: TrabajadorSntiOrderByWithRelationInput
  }

  export type SancionSntiWhereUniqueInput = Prisma.AtLeast<{
    id_sancion?: number
    AND?: SancionSntiWhereInput | SancionSntiWhereInput[]
    OR?: SancionSntiWhereInput[]
    NOT?: SancionSntiWhereInput | SancionSntiWhereInput[]
    id_trabajador?: IntFilter<"SancionSnti"> | number
    tipo_sancion?: StringFilter<"SancionSnti"> | string
    descripcion?: StringFilter<"SancionSnti"> | string
    fecha_aplicacion?: DateTimeFilter<"SancionSnti"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"SancionSnti"> | Date | string | null
    estatus?: StringNullableFilter<"SancionSnti"> | string | null
    usuario_registro?: StringNullableFilter<"SancionSnti"> | string | null
    fecha_registro?: DateTimeNullableFilter<"SancionSnti"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiScalarRelationFilter, TrabajadorSntiWhereInput>
  }, "id_sancion">

  export type SancionSntiOrderByWithAggregationInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estatus?: SortOrderInput | SortOrder
    usuario_registro?: SortOrderInput | SortOrder
    fecha_registro?: SortOrderInput | SortOrder
    _count?: SancionSntiCountOrderByAggregateInput
    _avg?: SancionSntiAvgOrderByAggregateInput
    _max?: SancionSntiMaxOrderByAggregateInput
    _min?: SancionSntiMinOrderByAggregateInput
    _sum?: SancionSntiSumOrderByAggregateInput
  }

  export type SancionSntiScalarWhereWithAggregatesInput = {
    AND?: SancionSntiScalarWhereWithAggregatesInput | SancionSntiScalarWhereWithAggregatesInput[]
    OR?: SancionSntiScalarWhereWithAggregatesInput[]
    NOT?: SancionSntiScalarWhereWithAggregatesInput | SancionSntiScalarWhereWithAggregatesInput[]
    id_sancion?: IntWithAggregatesFilter<"SancionSnti"> | number
    id_trabajador?: IntWithAggregatesFilter<"SancionSnti"> | number
    tipo_sancion?: StringWithAggregatesFilter<"SancionSnti"> | string
    descripcion?: StringWithAggregatesFilter<"SancionSnti"> | string
    fecha_aplicacion?: DateTimeWithAggregatesFilter<"SancionSnti"> | Date | string
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"SancionSnti"> | Date | string | null
    estatus?: StringNullableWithAggregatesFilter<"SancionSnti"> | string | null
    usuario_registro?: StringNullableWithAggregatesFilter<"SancionSnti"> | string | null
    fecha_registro?: DateTimeNullableWithAggregatesFilter<"SancionSnti"> | Date | string | null
  }

  export type SeccionSntiWhereInput = {
    AND?: SeccionSntiWhereInput | SeccionSntiWhereInput[]
    OR?: SeccionSntiWhereInput[]
    NOT?: SeccionSntiWhereInput | SeccionSntiWhereInput[]
    id_seccion?: IntFilter<"SeccionSnti"> | number
    nombre_seccion?: StringFilter<"SeccionSnti"> | string
    descripcion?: StringNullableFilter<"SeccionSnti"> | string | null
    trabajadores?: TrabajadorSntiListRelationFilter
  }

  export type SeccionSntiOrderByWithRelationInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    trabajadores?: TrabajadorSntiOrderByRelationAggregateInput
  }

  export type SeccionSntiWhereUniqueInput = Prisma.AtLeast<{
    id_seccion?: number
    AND?: SeccionSntiWhereInput | SeccionSntiWhereInput[]
    OR?: SeccionSntiWhereInput[]
    NOT?: SeccionSntiWhereInput | SeccionSntiWhereInput[]
    nombre_seccion?: StringFilter<"SeccionSnti"> | string
    descripcion?: StringNullableFilter<"SeccionSnti"> | string | null
    trabajadores?: TrabajadorSntiListRelationFilter
  }, "id_seccion">

  export type SeccionSntiOrderByWithAggregationInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: SeccionSntiCountOrderByAggregateInput
    _avg?: SeccionSntiAvgOrderByAggregateInput
    _max?: SeccionSntiMaxOrderByAggregateInput
    _min?: SeccionSntiMinOrderByAggregateInput
    _sum?: SeccionSntiSumOrderByAggregateInput
  }

  export type SeccionSntiScalarWhereWithAggregatesInput = {
    AND?: SeccionSntiScalarWhereWithAggregatesInput | SeccionSntiScalarWhereWithAggregatesInput[]
    OR?: SeccionSntiScalarWhereWithAggregatesInput[]
    NOT?: SeccionSntiScalarWhereWithAggregatesInput | SeccionSntiScalarWhereWithAggregatesInput[]
    id_seccion?: IntWithAggregatesFilter<"SeccionSnti"> | number
    nombre_seccion?: StringWithAggregatesFilter<"SeccionSnti"> | string
    descripcion?: StringNullableWithAggregatesFilter<"SeccionSnti"> | string | null
  }

  export type TrabajadorSntiWhereInput = {
    AND?: TrabajadorSntiWhereInput | TrabajadorSntiWhereInput[]
    OR?: TrabajadorSntiWhereInput[]
    NOT?: TrabajadorSntiWhereInput | TrabajadorSntiWhereInput[]
    id_trabajador?: IntFilter<"TrabajadorSnti"> | number
    nombre?: StringFilter<"TrabajadorSnti"> | string
    apellido_paterno?: StringFilter<"TrabajadorSnti"> | string
    apellido_materno?: StringNullableFilter<"TrabajadorSnti"> | string | null
    fecha_nacimiento?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    sexo?: StringFilter<"TrabajadorSnti"> | string
    curp?: StringFilter<"TrabajadorSnti"> | string
    rfc?: StringFilter<"TrabajadorSnti"> | string
    email?: StringFilter<"TrabajadorSnti"> | string
    situacion_sentimental?: StringNullableFilter<"TrabajadorSnti"> | string | null
    numero_hijos?: IntFilter<"TrabajadorSnti"> | number
    numero_empleado?: StringFilter<"TrabajadorSnti"> | string
    numero_plaza?: StringFilter<"TrabajadorSnti"> | string
    fecha_ingreso?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    fecha_ingreso_gobierno?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    nivel_puesto?: StringFilter<"TrabajadorSnti"> | string
    nombre_puesto?: StringFilter<"TrabajadorSnti"> | string
    puesto_inpi?: StringNullableFilter<"TrabajadorSnti"> | string | null
    adscripcion?: StringFilter<"TrabajadorSnti"> | string
    id_seccion?: IntFilter<"TrabajadorSnti"> | number
    nivel_estudios?: StringNullableFilter<"TrabajadorSnti"> | string | null
    institucion_estudios?: StringNullableFilter<"TrabajadorSnti"> | string | null
    certificado_estudios?: BoolNullableFilter<"TrabajadorSnti"> | boolean | null
    plaza_base?: StringNullableFilter<"TrabajadorSnti"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"TrabajadorSnti"> | Date | string | null
    seccion?: XOR<SeccionSntiScalarRelationFilter, SeccionSntiWhereInput>
    cambios_adscripcion?: CambioAdscripcionListRelationFilter
    documentos?: DocumentoListRelationFilter
    hijos?: HijoListRelationFilter
    permisos?: PermisoListRelationFilter
    sanciones?: SancionSntiListRelationFilter
    usuarios?: UsuarioListRelationFilter
  }

  export type TrabajadorSntiOrderByWithRelationInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrderInput | SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrderInput | SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrderInput | SortOrder
    institucion_estudios?: SortOrderInput | SortOrder
    certificado_estudios?: SortOrderInput | SortOrder
    plaza_base?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    seccion?: SeccionSntiOrderByWithRelationInput
    cambios_adscripcion?: CambioAdscripcionOrderByRelationAggregateInput
    documentos?: DocumentoOrderByRelationAggregateInput
    hijos?: HijoOrderByRelationAggregateInput
    permisos?: PermisoOrderByRelationAggregateInput
    sanciones?: SancionSntiOrderByRelationAggregateInput
    usuarios?: UsuarioOrderByRelationAggregateInput
  }

  export type TrabajadorSntiWhereUniqueInput = Prisma.AtLeast<{
    id_trabajador?: number
    curp?: string
    rfc?: string
    email?: string
    numero_empleado?: string
    numero_plaza?: string
    AND?: TrabajadorSntiWhereInput | TrabajadorSntiWhereInput[]
    OR?: TrabajadorSntiWhereInput[]
    NOT?: TrabajadorSntiWhereInput | TrabajadorSntiWhereInput[]
    nombre?: StringFilter<"TrabajadorSnti"> | string
    apellido_paterno?: StringFilter<"TrabajadorSnti"> | string
    apellido_materno?: StringNullableFilter<"TrabajadorSnti"> | string | null
    fecha_nacimiento?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    sexo?: StringFilter<"TrabajadorSnti"> | string
    situacion_sentimental?: StringNullableFilter<"TrabajadorSnti"> | string | null
    numero_hijos?: IntFilter<"TrabajadorSnti"> | number
    fecha_ingreso?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    fecha_ingreso_gobierno?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    nivel_puesto?: StringFilter<"TrabajadorSnti"> | string
    nombre_puesto?: StringFilter<"TrabajadorSnti"> | string
    puesto_inpi?: StringNullableFilter<"TrabajadorSnti"> | string | null
    adscripcion?: StringFilter<"TrabajadorSnti"> | string
    id_seccion?: IntFilter<"TrabajadorSnti"> | number
    nivel_estudios?: StringNullableFilter<"TrabajadorSnti"> | string | null
    institucion_estudios?: StringNullableFilter<"TrabajadorSnti"> | string | null
    certificado_estudios?: BoolNullableFilter<"TrabajadorSnti"> | boolean | null
    plaza_base?: StringNullableFilter<"TrabajadorSnti"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"TrabajadorSnti"> | Date | string | null
    seccion?: XOR<SeccionSntiScalarRelationFilter, SeccionSntiWhereInput>
    cambios_adscripcion?: CambioAdscripcionListRelationFilter
    documentos?: DocumentoListRelationFilter
    hijos?: HijoListRelationFilter
    permisos?: PermisoListRelationFilter
    sanciones?: SancionSntiListRelationFilter
    usuarios?: UsuarioListRelationFilter
  }, "id_trabajador" | "curp" | "rfc" | "email" | "numero_empleado" | "numero_plaza">

  export type TrabajadorSntiOrderByWithAggregationInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrderInput | SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrderInput | SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrderInput | SortOrder
    institucion_estudios?: SortOrderInput | SortOrder
    certificado_estudios?: SortOrderInput | SortOrder
    plaza_base?: SortOrderInput | SortOrder
    fecha_actualizacion?: SortOrderInput | SortOrder
    _count?: TrabajadorSntiCountOrderByAggregateInput
    _avg?: TrabajadorSntiAvgOrderByAggregateInput
    _max?: TrabajadorSntiMaxOrderByAggregateInput
    _min?: TrabajadorSntiMinOrderByAggregateInput
    _sum?: TrabajadorSntiSumOrderByAggregateInput
  }

  export type TrabajadorSntiScalarWhereWithAggregatesInput = {
    AND?: TrabajadorSntiScalarWhereWithAggregatesInput | TrabajadorSntiScalarWhereWithAggregatesInput[]
    OR?: TrabajadorSntiScalarWhereWithAggregatesInput[]
    NOT?: TrabajadorSntiScalarWhereWithAggregatesInput | TrabajadorSntiScalarWhereWithAggregatesInput[]
    id_trabajador?: IntWithAggregatesFilter<"TrabajadorSnti"> | number
    nombre?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    apellido_paterno?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    apellido_materno?: StringNullableWithAggregatesFilter<"TrabajadorSnti"> | string | null
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"TrabajadorSnti"> | Date | string
    sexo?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    curp?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    rfc?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    email?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    situacion_sentimental?: StringNullableWithAggregatesFilter<"TrabajadorSnti"> | string | null
    numero_hijos?: IntWithAggregatesFilter<"TrabajadorSnti"> | number
    numero_empleado?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    numero_plaza?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    fecha_ingreso?: DateTimeWithAggregatesFilter<"TrabajadorSnti"> | Date | string
    fecha_ingreso_gobierno?: DateTimeWithAggregatesFilter<"TrabajadorSnti"> | Date | string
    nivel_puesto?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    nombre_puesto?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    puesto_inpi?: StringNullableWithAggregatesFilter<"TrabajadorSnti"> | string | null
    adscripcion?: StringWithAggregatesFilter<"TrabajadorSnti"> | string
    id_seccion?: IntWithAggregatesFilter<"TrabajadorSnti"> | number
    nivel_estudios?: StringNullableWithAggregatesFilter<"TrabajadorSnti"> | string | null
    institucion_estudios?: StringNullableWithAggregatesFilter<"TrabajadorSnti"> | string | null
    certificado_estudios?: BoolNullableWithAggregatesFilter<"TrabajadorSnti"> | boolean | null
    plaza_base?: StringNullableWithAggregatesFilter<"TrabajadorSnti"> | string | null
    fecha_actualizacion?: DateTimeNullableWithAggregatesFilter<"TrabajadorSnti"> | Date | string | null
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    id_trabajador?: IntNullableFilter<"Usuario"> | number | null
    identificador?: StringFilter<"Usuario"> | string
    contraseña_hash?: StringFilter<"Usuario"> | string
    rol?: StringFilter<"Usuario"> | string
    intentos_fallidos?: IntNullableFilter<"Usuario"> | number | null
    bloqueado?: BoolNullableFilter<"Usuario"> | boolean | null
    fecha_creacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    ultimo_cambio_password?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiNullableScalarRelationFilter, TrabajadorSntiWhereInput> | null
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrderInput | SortOrder
    identificador?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    intentos_fallidos?: SortOrderInput | SortOrder
    bloqueado?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    ultimo_cambio_password?: SortOrderInput | SortOrder
    trabajador?: TrabajadorSntiOrderByWithRelationInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    id_trabajador?: number
    identificador?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    contraseña_hash?: StringFilter<"Usuario"> | string
    rol?: StringFilter<"Usuario"> | string
    intentos_fallidos?: IntNullableFilter<"Usuario"> | number | null
    bloqueado?: BoolNullableFilter<"Usuario"> | boolean | null
    fecha_creacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    ultimo_cambio_password?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    trabajador?: XOR<TrabajadorSntiNullableScalarRelationFilter, TrabajadorSntiWhereInput> | null
  }, "id_usuario" | "id_trabajador" | "identificador">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrderInput | SortOrder
    identificador?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    intentos_fallidos?: SortOrderInput | SortOrder
    bloqueado?: SortOrderInput | SortOrder
    fecha_creacion?: SortOrderInput | SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    ultimo_cambio_password?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"Usuario"> | number
    id_trabajador?: IntNullableWithAggregatesFilter<"Usuario"> | number | null
    identificador?: StringWithAggregatesFilter<"Usuario"> | string
    contraseña_hash?: StringWithAggregatesFilter<"Usuario"> | string
    rol?: StringWithAggregatesFilter<"Usuario"> | string
    intentos_fallidos?: IntNullableWithAggregatesFilter<"Usuario"> | number | null
    bloqueado?: BoolNullableWithAggregatesFilter<"Usuario"> | boolean | null
    fecha_creacion?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    ultimo_login?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    ultimo_cambio_password?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
  }

  export type CursoCreateInput = {
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
    estatus?: string | null
  }

  export type CursoUncheckedCreateInput = {
    id_curso?: number
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
    estatus?: string | null
  }

  export type CursoUpdateInput = {
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CursoUncheckedUpdateInput = {
    id_curso?: IntFieldUpdateOperationsInput | number
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CursoCreateManyInput = {
    id_curso?: number
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
    estatus?: string | null
  }

  export type CursoUpdateManyMutationInput = {
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CursoUncheckedUpdateManyInput = {
    id_curso?: IntFieldUpdateOperationsInput | number
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SancionCreateInput = {
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
    trabajador: TrabajadorCreateNestedOneWithoutSancionesInput
  }

  export type SancionUncheckedCreateInput = {
    id_sancion?: number
    id_trabajador: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionUpdateInput = {
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorUpdateOneRequiredWithoutSancionesNestedInput
  }

  export type SancionUncheckedUpdateInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionCreateManyInput = {
    id_sancion?: number
    id_trabajador: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionUpdateManyMutationInput = {
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionUncheckedUpdateManyInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SeccionCreateInput = {
    nombre_seccion: string
    descripcion?: string | null
    trabajadores?: TrabajadorCreateNestedManyWithoutSeccionInput
  }

  export type SeccionUncheckedCreateInput = {
    id_seccion?: number
    nombre_seccion: string
    descripcion?: string | null
    trabajadores?: TrabajadorUncheckedCreateNestedManyWithoutSeccionInput
  }

  export type SeccionUpdateInput = {
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    trabajadores?: TrabajadorUpdateManyWithoutSeccionNestedInput
  }

  export type SeccionUncheckedUpdateInput = {
    id_seccion?: IntFieldUpdateOperationsInput | number
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    trabajadores?: TrabajadorUncheckedUpdateManyWithoutSeccionNestedInput
  }

  export type SeccionCreateManyInput = {
    id_seccion?: number
    nombre_seccion: string
    descripcion?: string | null
  }

  export type SeccionUpdateManyMutationInput = {
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SeccionUncheckedUpdateManyInput = {
    id_seccion?: IntFieldUpdateOperationsInput | number
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TrabajadorCreateInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionCreateNestedOneWithoutTrabajadoresInput
    sanciones?: SancionCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorUncheckedCreateInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    sanciones?: SancionUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionUpdateOneRequiredWithoutTrabajadoresNestedInput
    sanciones?: SancionUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorUncheckedUpdateInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sanciones?: SancionUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorCreateManyInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type TrabajadorUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TrabajadorUncheckedUpdateManyInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuditoriaCreateInput = {
    tabla_afectada: string
    id_registro: number
    accion: string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario: string
    fecha_registro?: Date | string | null
  }

  export type AuditoriaUncheckedCreateInput = {
    id_auditoria?: number
    tabla_afectada: string
    id_registro: number
    accion: string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario: string
    fecha_registro?: Date | string | null
  }

  export type AuditoriaUpdateInput = {
    tabla_afectada?: StringFieldUpdateOperationsInput | string
    id_registro?: IntFieldUpdateOperationsInput | number
    accion?: StringFieldUpdateOperationsInput | string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario?: StringFieldUpdateOperationsInput | string
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuditoriaUncheckedUpdateInput = {
    id_auditoria?: IntFieldUpdateOperationsInput | number
    tabla_afectada?: StringFieldUpdateOperationsInput | string
    id_registro?: IntFieldUpdateOperationsInput | number
    accion?: StringFieldUpdateOperationsInput | string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario?: StringFieldUpdateOperationsInput | string
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuditoriaCreateManyInput = {
    id_auditoria?: number
    tabla_afectada: string
    id_registro: number
    accion: string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario: string
    fecha_registro?: Date | string | null
  }

  export type AuditoriaUpdateManyMutationInput = {
    tabla_afectada?: StringFieldUpdateOperationsInput | string
    id_registro?: IntFieldUpdateOperationsInput | number
    accion?: StringFieldUpdateOperationsInput | string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario?: StringFieldUpdateOperationsInput | string
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuditoriaUncheckedUpdateManyInput = {
    id_auditoria?: IntFieldUpdateOperationsInput | number
    tabla_afectada?: StringFieldUpdateOperationsInput | string
    id_registro?: IntFieldUpdateOperationsInput | number
    accion?: StringFieldUpdateOperationsInput | string
    datos_anteriores?: NullableJsonNullValueInput | InputJsonValue
    datos_nuevos?: NullableJsonNullValueInput | InputJsonValue
    usuario?: StringFieldUpdateOperationsInput | string
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionCreateInput = {
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutCambios_adscripcionInput
    documento_respaldo?: DocumentoCreateNestedOneWithoutCambios_adscripcionInput
  }

  export type CambioAdscripcionUncheckedCreateInput = {
    id_cambio?: number
    id_trabajador: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    documento_respaldo_id?: number | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type CambioAdscripcionUpdateInput = {
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutCambios_adscripcionNestedInput
    documento_respaldo?: DocumentoUpdateOneWithoutCambios_adscripcionNestedInput
  }

  export type CambioAdscripcionUncheckedUpdateInput = {
    id_cambio?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    documento_respaldo_id?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionCreateManyInput = {
    id_cambio?: number
    id_trabajador: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    documento_respaldo_id?: number | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type CambioAdscripcionUpdateManyMutationInput = {
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionUncheckedUpdateManyInput = {
    id_cambio?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    documento_respaldo_id?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CursoSntiCreateInput = {
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
  }

  export type CursoSntiUncheckedCreateInput = {
    id_curso?: number
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
  }

  export type CursoSntiUpdateInput = {
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
  }

  export type CursoSntiUncheckedUpdateInput = {
    id_curso?: IntFieldUpdateOperationsInput | number
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
  }

  export type CursoSntiCreateManyInput = {
    id_curso?: number
    codigo_curso: string
    nombre_curso: string
    horas_duracion: number
  }

  export type CursoSntiUpdateManyMutationInput = {
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
  }

  export type CursoSntiUncheckedUpdateManyInput = {
    id_curso?: IntFieldUpdateOperationsInput | number
    codigo_curso?: StringFieldUpdateOperationsInput | string
    nombre_curso?: StringFieldUpdateOperationsInput | string
    horas_duracion?: IntFieldUpdateOperationsInput | number
  }

  export type DocumentoCreateInput = {
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutDocumentosInput
    hijos?: HijoCreateNestedManyWithoutActa_nacimientoInput
    permisos?: PermisoCreateNestedManyWithoutDocumento_aprobacionInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoUncheckedCreateInput = {
    id_documento?: number
    id_trabajador: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    hijos?: HijoUncheckedCreateNestedManyWithoutActa_nacimientoInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutDocumento_aprobacionInput
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoUpdateInput = {
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutDocumentosNestedInput
    hijos?: HijoUpdateManyWithoutActa_nacimientoNestedInput
    permisos?: PermisoUpdateManyWithoutDocumento_aprobacionNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type DocumentoUncheckedUpdateInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hijos?: HijoUncheckedUpdateManyWithoutActa_nacimientoNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutDocumento_aprobacionNestedInput
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type DocumentoCreateManyInput = {
    id_documento?: number
    id_trabajador: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
  }

  export type DocumentoUpdateManyMutationInput = {
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type DocumentoUncheckedUpdateManyInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type HijoCreateInput = {
    nombre_completo: string
    fecha_nacimiento: Date | string
    vigente?: boolean | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutHijosInput
    acta_nacimiento?: DocumentoCreateNestedOneWithoutHijosInput
  }

  export type HijoUncheckedCreateInput = {
    id_hijo?: number
    id_trabajador: number
    nombre_completo: string
    fecha_nacimiento: Date | string
    acta_nacimiento_id?: number | null
    vigente?: boolean | null
  }

  export type HijoUpdateInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutHijosNestedInput
    acta_nacimiento?: DocumentoUpdateOneWithoutHijosNestedInput
  }

  export type HijoUncheckedUpdateInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    acta_nacimiento_id?: NullableIntFieldUpdateOperationsInput | number | null
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type HijoCreateManyInput = {
    id_hijo?: number
    id_trabajador: number
    nombre_completo: string
    fecha_nacimiento: Date | string
    acta_nacimiento_id?: number | null
    vigente?: boolean | null
  }

  export type HijoUpdateManyMutationInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type HijoUncheckedUpdateManyInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    acta_nacimiento_id?: NullableIntFieldUpdateOperationsInput | number | null
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PermisoCreateInput = {
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    fecha_registro?: Date | string | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutPermisosInput
    documento_aprobacion?: DocumentoCreateNestedOneWithoutPermisosInput
  }

  export type PermisoUncheckedCreateInput = {
    id_permiso?: number
    id_trabajador: number
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    documento_aprobacion_id?: number | null
    fecha_registro?: Date | string | null
  }

  export type PermisoUpdateInput = {
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutPermisosNestedInput
    documento_aprobacion?: DocumentoUpdateOneWithoutPermisosNestedInput
  }

  export type PermisoUncheckedUpdateInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    documento_aprobacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoCreateManyInput = {
    id_permiso?: number
    id_trabajador: number
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    documento_aprobacion_id?: number | null
    fecha_registro?: Date | string | null
  }

  export type PermisoUpdateManyMutationInput = {
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoUncheckedUpdateManyInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    documento_aprobacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionSntiCreateInput = {
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutSancionesInput
  }

  export type SancionSntiUncheckedCreateInput = {
    id_sancion?: number
    id_trabajador: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionSntiUpdateInput = {
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutSancionesNestedInput
  }

  export type SancionSntiUncheckedUpdateInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionSntiCreateManyInput = {
    id_sancion?: number
    id_trabajador: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionSntiUpdateManyMutationInput = {
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionSntiUncheckedUpdateManyInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SeccionSntiCreateInput = {
    nombre_seccion: string
    descripcion?: string | null
    trabajadores?: TrabajadorSntiCreateNestedManyWithoutSeccionInput
  }

  export type SeccionSntiUncheckedCreateInput = {
    id_seccion?: number
    nombre_seccion: string
    descripcion?: string | null
    trabajadores?: TrabajadorSntiUncheckedCreateNestedManyWithoutSeccionInput
  }

  export type SeccionSntiUpdateInput = {
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    trabajadores?: TrabajadorSntiUpdateManyWithoutSeccionNestedInput
  }

  export type SeccionSntiUncheckedUpdateInput = {
    id_seccion?: IntFieldUpdateOperationsInput | number
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    trabajadores?: TrabajadorSntiUncheckedUpdateManyWithoutSeccionNestedInput
  }

  export type SeccionSntiCreateManyInput = {
    id_seccion?: number
    nombre_seccion: string
    descripcion?: string | null
  }

  export type SeccionSntiUpdateManyMutationInput = {
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SeccionSntiUncheckedUpdateManyInput = {
    id_seccion?: IntFieldUpdateOperationsInput | number
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TrabajadorSntiCreateInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiCreateManyInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type TrabajadorSntiUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TrabajadorSntiUncheckedUpdateManyInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioCreateInput = {
    identificador: string
    contraseña_hash: string
    rol?: string
    intentos_fallidos?: number | null
    bloqueado?: boolean | null
    fecha_creacion?: Date | string | null
    ultimo_login?: Date | string | null
    ultimo_cambio_password?: Date | string | null
    trabajador?: TrabajadorSntiCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: number
    id_trabajador?: number | null
    identificador: string
    contraseña_hash: string
    rol?: string
    intentos_fallidos?: number | null
    bloqueado?: boolean | null
    fecha_creacion?: Date | string | null
    ultimo_login?: Date | string | null
    ultimo_cambio_password?: Date | string | null
  }

  export type UsuarioUpdateInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorSntiUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_trabajador?: NullableIntFieldUpdateOperationsInput | number | null
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: number
    id_trabajador?: number | null
    identificador: string
    contraseña_hash: string
    rol?: string
    intentos_fallidos?: number | null
    bloqueado?: boolean | null
    fecha_creacion?: Date | string | null
    ultimo_login?: Date | string | null
    ultimo_cambio_password?: Date | string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_trabajador?: NullableIntFieldUpdateOperationsInput | number | null
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CursoCountOrderByAggregateInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
    estatus?: SortOrder
  }

  export type CursoAvgOrderByAggregateInput = {
    id_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type CursoMaxOrderByAggregateInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
    estatus?: SortOrder
  }

  export type CursoMinOrderByAggregateInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
    estatus?: SortOrder
  }

  export type CursoSumOrderByAggregateInput = {
    id_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TrabajadorScalarRelationFilter = {
    is?: TrabajadorWhereInput
    isNot?: TrabajadorWhereInput
  }

  export type SancionCountOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type SancionAvgOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
  }

  export type SancionMaxOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type SancionMinOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type SancionSumOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type TrabajadorListRelationFilter = {
    every?: TrabajadorWhereInput
    some?: TrabajadorWhereInput
    none?: TrabajadorWhereInput
  }

  export type TrabajadorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SeccionCountOrderByAggregateInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrder
  }

  export type SeccionAvgOrderByAggregateInput = {
    id_seccion?: SortOrder
  }

  export type SeccionMaxOrderByAggregateInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrder
  }

  export type SeccionMinOrderByAggregateInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrder
  }

  export type SeccionSumOrderByAggregateInput = {
    id_seccion?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type SeccionScalarRelationFilter = {
    is?: SeccionWhereInput
    isNot?: SeccionWhereInput
  }

  export type SancionListRelationFilter = {
    every?: SancionWhereInput
    some?: SancionWhereInput
    none?: SancionWhereInput
  }

  export type SancionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TrabajadorCountOrderByAggregateInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrder
    institucion_estudios?: SortOrder
    certificado_estudios?: SortOrder
    plaza_base?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type TrabajadorAvgOrderByAggregateInput = {
    id_trabajador?: SortOrder
    numero_hijos?: SortOrder
    id_seccion?: SortOrder
  }

  export type TrabajadorMaxOrderByAggregateInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrder
    institucion_estudios?: SortOrder
    certificado_estudios?: SortOrder
    plaza_base?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type TrabajadorMinOrderByAggregateInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrder
    institucion_estudios?: SortOrder
    certificado_estudios?: SortOrder
    plaza_base?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type TrabajadorSumOrderByAggregateInput = {
    id_trabajador?: SortOrder
    numero_hijos?: SortOrder
    id_seccion?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type AuditoriaCountOrderByAggregateInput = {
    id_auditoria?: SortOrder
    tabla_afectada?: SortOrder
    id_registro?: SortOrder
    accion?: SortOrder
    datos_anteriores?: SortOrder
    datos_nuevos?: SortOrder
    usuario?: SortOrder
    fecha_registro?: SortOrder
  }

  export type AuditoriaAvgOrderByAggregateInput = {
    id_auditoria?: SortOrder
    id_registro?: SortOrder
  }

  export type AuditoriaMaxOrderByAggregateInput = {
    id_auditoria?: SortOrder
    tabla_afectada?: SortOrder
    id_registro?: SortOrder
    accion?: SortOrder
    usuario?: SortOrder
    fecha_registro?: SortOrder
  }

  export type AuditoriaMinOrderByAggregateInput = {
    id_auditoria?: SortOrder
    tabla_afectada?: SortOrder
    id_registro?: SortOrder
    accion?: SortOrder
    usuario?: SortOrder
    fecha_registro?: SortOrder
  }

  export type AuditoriaSumOrderByAggregateInput = {
    id_auditoria?: SortOrder
    id_registro?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type TrabajadorSntiScalarRelationFilter = {
    is?: TrabajadorSntiWhereInput
    isNot?: TrabajadorSntiWhereInput
  }

  export type DocumentoNullableScalarRelationFilter = {
    is?: DocumentoWhereInput | null
    isNot?: DocumentoWhereInput | null
  }

  export type CambioAdscripcionCountOrderByAggregateInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    adscripcion_anterior?: SortOrder
    adscripcion_nueva?: SortOrder
    fecha_cambio?: SortOrder
    motivo?: SortOrder
    documento_respaldo_id?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type CambioAdscripcionAvgOrderByAggregateInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    documento_respaldo_id?: SortOrder
  }

  export type CambioAdscripcionMaxOrderByAggregateInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    adscripcion_anterior?: SortOrder
    adscripcion_nueva?: SortOrder
    fecha_cambio?: SortOrder
    motivo?: SortOrder
    documento_respaldo_id?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type CambioAdscripcionMinOrderByAggregateInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    adscripcion_anterior?: SortOrder
    adscripcion_nueva?: SortOrder
    fecha_cambio?: SortOrder
    motivo?: SortOrder
    documento_respaldo_id?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type CambioAdscripcionSumOrderByAggregateInput = {
    id_cambio?: SortOrder
    id_trabajador?: SortOrder
    documento_respaldo_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type CursoSntiCountOrderByAggregateInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type CursoSntiAvgOrderByAggregateInput = {
    id_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type CursoSntiMaxOrderByAggregateInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type CursoSntiMinOrderByAggregateInput = {
    id_curso?: SortOrder
    codigo_curso?: SortOrder
    nombre_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type CursoSntiSumOrderByAggregateInput = {
    id_curso?: SortOrder
    horas_duracion?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type HijoListRelationFilter = {
    every?: HijoWhereInput
    some?: HijoWhereInput
    none?: HijoWhereInput
  }

  export type PermisoListRelationFilter = {
    every?: PermisoWhereInput
    some?: PermisoWhereInput
    none?: PermisoWhereInput
  }

  export type CambioAdscripcionListRelationFilter = {
    every?: CambioAdscripcionWhereInput
    some?: CambioAdscripcionWhereInput
    none?: CambioAdscripcionWhereInput
  }

  export type HijoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermisoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CambioAdscripcionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DocumentoCountOrderByAggregateInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tipo_documento?: SortOrder
    metadata?: SortOrder
    hash_archivo?: SortOrder
    nombre_archivo?: SortOrder
    descripcion?: SortOrder
    tipo_archivo?: SortOrder
    ruta_almacenamiento?: SortOrder
    fecha_subida?: SortOrder
    tamano_bytes?: SortOrder
    es_publico?: SortOrder
  }

  export type DocumentoAvgOrderByAggregateInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tamano_bytes?: SortOrder
  }

  export type DocumentoMaxOrderByAggregateInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tipo_documento?: SortOrder
    hash_archivo?: SortOrder
    nombre_archivo?: SortOrder
    descripcion?: SortOrder
    tipo_archivo?: SortOrder
    ruta_almacenamiento?: SortOrder
    fecha_subida?: SortOrder
    tamano_bytes?: SortOrder
    es_publico?: SortOrder
  }

  export type DocumentoMinOrderByAggregateInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tipo_documento?: SortOrder
    hash_archivo?: SortOrder
    nombre_archivo?: SortOrder
    descripcion?: SortOrder
    tipo_archivo?: SortOrder
    ruta_almacenamiento?: SortOrder
    fecha_subida?: SortOrder
    tamano_bytes?: SortOrder
    es_publico?: SortOrder
  }

  export type DocumentoSumOrderByAggregateInput = {
    id_documento?: SortOrder
    id_trabajador?: SortOrder
    tamano_bytes?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type HijoCountOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    nombre_completo?: SortOrder
    fecha_nacimiento?: SortOrder
    acta_nacimiento_id?: SortOrder
    vigente?: SortOrder
  }

  export type HijoAvgOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    acta_nacimiento_id?: SortOrder
  }

  export type HijoMaxOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    nombre_completo?: SortOrder
    fecha_nacimiento?: SortOrder
    acta_nacimiento_id?: SortOrder
    vigente?: SortOrder
  }

  export type HijoMinOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    nombre_completo?: SortOrder
    fecha_nacimiento?: SortOrder
    acta_nacimiento_id?: SortOrder
    vigente?: SortOrder
  }

  export type HijoSumOrderByAggregateInput = {
    id_hijo?: SortOrder
    id_trabajador?: SortOrder
    acta_nacimiento_id?: SortOrder
  }

  export type PermisoCountOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    tipo_permiso?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
    estatus?: SortOrder
    documento_aprobacion_id?: SortOrder
    fecha_registro?: SortOrder
  }

  export type PermisoAvgOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    documento_aprobacion_id?: SortOrder
  }

  export type PermisoMaxOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    tipo_permiso?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
    estatus?: SortOrder
    documento_aprobacion_id?: SortOrder
    fecha_registro?: SortOrder
  }

  export type PermisoMinOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    tipo_permiso?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    motivo?: SortOrder
    estatus?: SortOrder
    documento_aprobacion_id?: SortOrder
    fecha_registro?: SortOrder
  }

  export type PermisoSumOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_trabajador?: SortOrder
    documento_aprobacion_id?: SortOrder
  }

  export type SancionSntiCountOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type SancionSntiAvgOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
  }

  export type SancionSntiMaxOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type SancionSntiMinOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
    tipo_sancion?: SortOrder
    descripcion?: SortOrder
    fecha_aplicacion?: SortOrder
    fecha_fin?: SortOrder
    estatus?: SortOrder
    usuario_registro?: SortOrder
    fecha_registro?: SortOrder
  }

  export type SancionSntiSumOrderByAggregateInput = {
    id_sancion?: SortOrder
    id_trabajador?: SortOrder
  }

  export type TrabajadorSntiListRelationFilter = {
    every?: TrabajadorSntiWhereInput
    some?: TrabajadorSntiWhereInput
    none?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SeccionSntiCountOrderByAggregateInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrder
  }

  export type SeccionSntiAvgOrderByAggregateInput = {
    id_seccion?: SortOrder
  }

  export type SeccionSntiMaxOrderByAggregateInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrder
  }

  export type SeccionSntiMinOrderByAggregateInput = {
    id_seccion?: SortOrder
    nombre_seccion?: SortOrder
    descripcion?: SortOrder
  }

  export type SeccionSntiSumOrderByAggregateInput = {
    id_seccion?: SortOrder
  }

  export type SeccionSntiScalarRelationFilter = {
    is?: SeccionSntiWhereInput
    isNot?: SeccionSntiWhereInput
  }

  export type DocumentoListRelationFilter = {
    every?: DocumentoWhereInput
    some?: DocumentoWhereInput
    none?: DocumentoWhereInput
  }

  export type SancionSntiListRelationFilter = {
    every?: SancionSntiWhereInput
    some?: SancionSntiWhereInput
    none?: SancionSntiWhereInput
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type DocumentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SancionSntiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TrabajadorSntiCountOrderByAggregateInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrder
    institucion_estudios?: SortOrder
    certificado_estudios?: SortOrder
    plaza_base?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type TrabajadorSntiAvgOrderByAggregateInput = {
    id_trabajador?: SortOrder
    numero_hijos?: SortOrder
    id_seccion?: SortOrder
  }

  export type TrabajadorSntiMaxOrderByAggregateInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrder
    institucion_estudios?: SortOrder
    certificado_estudios?: SortOrder
    plaza_base?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type TrabajadorSntiMinOrderByAggregateInput = {
    id_trabajador?: SortOrder
    nombre?: SortOrder
    apellido_paterno?: SortOrder
    apellido_materno?: SortOrder
    fecha_nacimiento?: SortOrder
    sexo?: SortOrder
    curp?: SortOrder
    rfc?: SortOrder
    email?: SortOrder
    situacion_sentimental?: SortOrder
    numero_hijos?: SortOrder
    numero_empleado?: SortOrder
    numero_plaza?: SortOrder
    fecha_ingreso?: SortOrder
    fecha_ingreso_gobierno?: SortOrder
    nivel_puesto?: SortOrder
    nombre_puesto?: SortOrder
    puesto_inpi?: SortOrder
    adscripcion?: SortOrder
    id_seccion?: SortOrder
    nivel_estudios?: SortOrder
    institucion_estudios?: SortOrder
    certificado_estudios?: SortOrder
    plaza_base?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type TrabajadorSntiSumOrderByAggregateInput = {
    id_trabajador?: SortOrder
    numero_hijos?: SortOrder
    id_seccion?: SortOrder
  }

  export type TrabajadorSntiNullableScalarRelationFilter = {
    is?: TrabajadorSntiWhereInput | null
    isNot?: TrabajadorSntiWhereInput | null
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrder
    identificador?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    intentos_fallidos?: SortOrder
    bloqueado?: SortOrder
    fecha_creacion?: SortOrder
    ultimo_login?: SortOrder
    ultimo_cambio_password?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrder
    intentos_fallidos?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrder
    identificador?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    intentos_fallidos?: SortOrder
    bloqueado?: SortOrder
    fecha_creacion?: SortOrder
    ultimo_login?: SortOrder
    ultimo_cambio_password?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrder
    identificador?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    intentos_fallidos?: SortOrder
    bloqueado?: SortOrder
    fecha_creacion?: SortOrder
    ultimo_login?: SortOrder
    ultimo_cambio_password?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_trabajador?: SortOrder
    intentos_fallidos?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type TrabajadorCreateNestedOneWithoutSancionesInput = {
    create?: XOR<TrabajadorCreateWithoutSancionesInput, TrabajadorUncheckedCreateWithoutSancionesInput>
    connectOrCreate?: TrabajadorCreateOrConnectWithoutSancionesInput
    connect?: TrabajadorWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type TrabajadorUpdateOneRequiredWithoutSancionesNestedInput = {
    create?: XOR<TrabajadorCreateWithoutSancionesInput, TrabajadorUncheckedCreateWithoutSancionesInput>
    connectOrCreate?: TrabajadorCreateOrConnectWithoutSancionesInput
    upsert?: TrabajadorUpsertWithoutSancionesInput
    connect?: TrabajadorWhereUniqueInput
    update?: XOR<XOR<TrabajadorUpdateToOneWithWhereWithoutSancionesInput, TrabajadorUpdateWithoutSancionesInput>, TrabajadorUncheckedUpdateWithoutSancionesInput>
  }

  export type TrabajadorCreateNestedManyWithoutSeccionInput = {
    create?: XOR<TrabajadorCreateWithoutSeccionInput, TrabajadorUncheckedCreateWithoutSeccionInput> | TrabajadorCreateWithoutSeccionInput[] | TrabajadorUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorCreateOrConnectWithoutSeccionInput | TrabajadorCreateOrConnectWithoutSeccionInput[]
    createMany?: TrabajadorCreateManySeccionInputEnvelope
    connect?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
  }

  export type TrabajadorUncheckedCreateNestedManyWithoutSeccionInput = {
    create?: XOR<TrabajadorCreateWithoutSeccionInput, TrabajadorUncheckedCreateWithoutSeccionInput> | TrabajadorCreateWithoutSeccionInput[] | TrabajadorUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorCreateOrConnectWithoutSeccionInput | TrabajadorCreateOrConnectWithoutSeccionInput[]
    createMany?: TrabajadorCreateManySeccionInputEnvelope
    connect?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
  }

  export type TrabajadorUpdateManyWithoutSeccionNestedInput = {
    create?: XOR<TrabajadorCreateWithoutSeccionInput, TrabajadorUncheckedCreateWithoutSeccionInput> | TrabajadorCreateWithoutSeccionInput[] | TrabajadorUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorCreateOrConnectWithoutSeccionInput | TrabajadorCreateOrConnectWithoutSeccionInput[]
    upsert?: TrabajadorUpsertWithWhereUniqueWithoutSeccionInput | TrabajadorUpsertWithWhereUniqueWithoutSeccionInput[]
    createMany?: TrabajadorCreateManySeccionInputEnvelope
    set?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    disconnect?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    delete?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    connect?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    update?: TrabajadorUpdateWithWhereUniqueWithoutSeccionInput | TrabajadorUpdateWithWhereUniqueWithoutSeccionInput[]
    updateMany?: TrabajadorUpdateManyWithWhereWithoutSeccionInput | TrabajadorUpdateManyWithWhereWithoutSeccionInput[]
    deleteMany?: TrabajadorScalarWhereInput | TrabajadorScalarWhereInput[]
  }

  export type TrabajadorUncheckedUpdateManyWithoutSeccionNestedInput = {
    create?: XOR<TrabajadorCreateWithoutSeccionInput, TrabajadorUncheckedCreateWithoutSeccionInput> | TrabajadorCreateWithoutSeccionInput[] | TrabajadorUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorCreateOrConnectWithoutSeccionInput | TrabajadorCreateOrConnectWithoutSeccionInput[]
    upsert?: TrabajadorUpsertWithWhereUniqueWithoutSeccionInput | TrabajadorUpsertWithWhereUniqueWithoutSeccionInput[]
    createMany?: TrabajadorCreateManySeccionInputEnvelope
    set?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    disconnect?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    delete?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    connect?: TrabajadorWhereUniqueInput | TrabajadorWhereUniqueInput[]
    update?: TrabajadorUpdateWithWhereUniqueWithoutSeccionInput | TrabajadorUpdateWithWhereUniqueWithoutSeccionInput[]
    updateMany?: TrabajadorUpdateManyWithWhereWithoutSeccionInput | TrabajadorUpdateManyWithWhereWithoutSeccionInput[]
    deleteMany?: TrabajadorScalarWhereInput | TrabajadorScalarWhereInput[]
  }

  export type SeccionCreateNestedOneWithoutTrabajadoresInput = {
    create?: XOR<SeccionCreateWithoutTrabajadoresInput, SeccionUncheckedCreateWithoutTrabajadoresInput>
    connectOrCreate?: SeccionCreateOrConnectWithoutTrabajadoresInput
    connect?: SeccionWhereUniqueInput
  }

  export type SancionCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<SancionCreateWithoutTrabajadorInput, SancionUncheckedCreateWithoutTrabajadorInput> | SancionCreateWithoutTrabajadorInput[] | SancionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionCreateOrConnectWithoutTrabajadorInput | SancionCreateOrConnectWithoutTrabajadorInput[]
    createMany?: SancionCreateManyTrabajadorInputEnvelope
    connect?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
  }

  export type SancionUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<SancionCreateWithoutTrabajadorInput, SancionUncheckedCreateWithoutTrabajadorInput> | SancionCreateWithoutTrabajadorInput[] | SancionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionCreateOrConnectWithoutTrabajadorInput | SancionCreateOrConnectWithoutTrabajadorInput[]
    createMany?: SancionCreateManyTrabajadorInputEnvelope
    connect?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type SeccionUpdateOneRequiredWithoutTrabajadoresNestedInput = {
    create?: XOR<SeccionCreateWithoutTrabajadoresInput, SeccionUncheckedCreateWithoutTrabajadoresInput>
    connectOrCreate?: SeccionCreateOrConnectWithoutTrabajadoresInput
    upsert?: SeccionUpsertWithoutTrabajadoresInput
    connect?: SeccionWhereUniqueInput
    update?: XOR<XOR<SeccionUpdateToOneWithWhereWithoutTrabajadoresInput, SeccionUpdateWithoutTrabajadoresInput>, SeccionUncheckedUpdateWithoutTrabajadoresInput>
  }

  export type SancionUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<SancionCreateWithoutTrabajadorInput, SancionUncheckedCreateWithoutTrabajadorInput> | SancionCreateWithoutTrabajadorInput[] | SancionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionCreateOrConnectWithoutTrabajadorInput | SancionCreateOrConnectWithoutTrabajadorInput[]
    upsert?: SancionUpsertWithWhereUniqueWithoutTrabajadorInput | SancionUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: SancionCreateManyTrabajadorInputEnvelope
    set?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    disconnect?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    delete?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    connect?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    update?: SancionUpdateWithWhereUniqueWithoutTrabajadorInput | SancionUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: SancionUpdateManyWithWhereWithoutTrabajadorInput | SancionUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: SancionScalarWhereInput | SancionScalarWhereInput[]
  }

  export type SancionUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<SancionCreateWithoutTrabajadorInput, SancionUncheckedCreateWithoutTrabajadorInput> | SancionCreateWithoutTrabajadorInput[] | SancionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionCreateOrConnectWithoutTrabajadorInput | SancionCreateOrConnectWithoutTrabajadorInput[]
    upsert?: SancionUpsertWithWhereUniqueWithoutTrabajadorInput | SancionUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: SancionCreateManyTrabajadorInputEnvelope
    set?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    disconnect?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    delete?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    connect?: SancionWhereUniqueInput | SancionWhereUniqueInput[]
    update?: SancionUpdateWithWhereUniqueWithoutTrabajadorInput | SancionUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: SancionUpdateManyWithWhereWithoutTrabajadorInput | SancionUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: SancionScalarWhereInput | SancionScalarWhereInput[]
  }

  export type TrabajadorSntiCreateNestedOneWithoutCambios_adscripcionInput = {
    create?: XOR<TrabajadorSntiCreateWithoutCambios_adscripcionInput, TrabajadorSntiUncheckedCreateWithoutCambios_adscripcionInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutCambios_adscripcionInput
    connect?: TrabajadorSntiWhereUniqueInput
  }

  export type DocumentoCreateNestedOneWithoutCambios_adscripcionInput = {
    create?: XOR<DocumentoCreateWithoutCambios_adscripcionInput, DocumentoUncheckedCreateWithoutCambios_adscripcionInput>
    connectOrCreate?: DocumentoCreateOrConnectWithoutCambios_adscripcionInput
    connect?: DocumentoWhereUniqueInput
  }

  export type TrabajadorSntiUpdateOneRequiredWithoutCambios_adscripcionNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutCambios_adscripcionInput, TrabajadorSntiUncheckedCreateWithoutCambios_adscripcionInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutCambios_adscripcionInput
    upsert?: TrabajadorSntiUpsertWithoutCambios_adscripcionInput
    connect?: TrabajadorSntiWhereUniqueInput
    update?: XOR<XOR<TrabajadorSntiUpdateToOneWithWhereWithoutCambios_adscripcionInput, TrabajadorSntiUpdateWithoutCambios_adscripcionInput>, TrabajadorSntiUncheckedUpdateWithoutCambios_adscripcionInput>
  }

  export type DocumentoUpdateOneWithoutCambios_adscripcionNestedInput = {
    create?: XOR<DocumentoCreateWithoutCambios_adscripcionInput, DocumentoUncheckedCreateWithoutCambios_adscripcionInput>
    connectOrCreate?: DocumentoCreateOrConnectWithoutCambios_adscripcionInput
    upsert?: DocumentoUpsertWithoutCambios_adscripcionInput
    disconnect?: DocumentoWhereInput | boolean
    delete?: DocumentoWhereInput | boolean
    connect?: DocumentoWhereUniqueInput
    update?: XOR<XOR<DocumentoUpdateToOneWithWhereWithoutCambios_adscripcionInput, DocumentoUpdateWithoutCambios_adscripcionInput>, DocumentoUncheckedUpdateWithoutCambios_adscripcionInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TrabajadorSntiCreateNestedOneWithoutDocumentosInput = {
    create?: XOR<TrabajadorSntiCreateWithoutDocumentosInput, TrabajadorSntiUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutDocumentosInput
    connect?: TrabajadorSntiWhereUniqueInput
  }

  export type HijoCreateNestedManyWithoutActa_nacimientoInput = {
    create?: XOR<HijoCreateWithoutActa_nacimientoInput, HijoUncheckedCreateWithoutActa_nacimientoInput> | HijoCreateWithoutActa_nacimientoInput[] | HijoUncheckedCreateWithoutActa_nacimientoInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutActa_nacimientoInput | HijoCreateOrConnectWithoutActa_nacimientoInput[]
    createMany?: HijoCreateManyActa_nacimientoInputEnvelope
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
  }

  export type PermisoCreateNestedManyWithoutDocumento_aprobacionInput = {
    create?: XOR<PermisoCreateWithoutDocumento_aprobacionInput, PermisoUncheckedCreateWithoutDocumento_aprobacionInput> | PermisoCreateWithoutDocumento_aprobacionInput[] | PermisoUncheckedCreateWithoutDocumento_aprobacionInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutDocumento_aprobacionInput | PermisoCreateOrConnectWithoutDocumento_aprobacionInput[]
    createMany?: PermisoCreateManyDocumento_aprobacionInputEnvelope
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type CambioAdscripcionCreateNestedManyWithoutDocumento_respaldoInput = {
    create?: XOR<CambioAdscripcionCreateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput> | CambioAdscripcionCreateWithoutDocumento_respaldoInput[] | CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput | CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput[]
    createMany?: CambioAdscripcionCreateManyDocumento_respaldoInputEnvelope
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
  }

  export type HijoUncheckedCreateNestedManyWithoutActa_nacimientoInput = {
    create?: XOR<HijoCreateWithoutActa_nacimientoInput, HijoUncheckedCreateWithoutActa_nacimientoInput> | HijoCreateWithoutActa_nacimientoInput[] | HijoUncheckedCreateWithoutActa_nacimientoInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutActa_nacimientoInput | HijoCreateOrConnectWithoutActa_nacimientoInput[]
    createMany?: HijoCreateManyActa_nacimientoInputEnvelope
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
  }

  export type PermisoUncheckedCreateNestedManyWithoutDocumento_aprobacionInput = {
    create?: XOR<PermisoCreateWithoutDocumento_aprobacionInput, PermisoUncheckedCreateWithoutDocumento_aprobacionInput> | PermisoCreateWithoutDocumento_aprobacionInput[] | PermisoUncheckedCreateWithoutDocumento_aprobacionInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutDocumento_aprobacionInput | PermisoCreateOrConnectWithoutDocumento_aprobacionInput[]
    createMany?: PermisoCreateManyDocumento_aprobacionInputEnvelope
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type CambioAdscripcionUncheckedCreateNestedManyWithoutDocumento_respaldoInput = {
    create?: XOR<CambioAdscripcionCreateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput> | CambioAdscripcionCreateWithoutDocumento_respaldoInput[] | CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput | CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput[]
    createMany?: CambioAdscripcionCreateManyDocumento_respaldoInputEnvelope
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type TrabajadorSntiUpdateOneRequiredWithoutDocumentosNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutDocumentosInput, TrabajadorSntiUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutDocumentosInput
    upsert?: TrabajadorSntiUpsertWithoutDocumentosInput
    connect?: TrabajadorSntiWhereUniqueInput
    update?: XOR<XOR<TrabajadorSntiUpdateToOneWithWhereWithoutDocumentosInput, TrabajadorSntiUpdateWithoutDocumentosInput>, TrabajadorSntiUncheckedUpdateWithoutDocumentosInput>
  }

  export type HijoUpdateManyWithoutActa_nacimientoNestedInput = {
    create?: XOR<HijoCreateWithoutActa_nacimientoInput, HijoUncheckedCreateWithoutActa_nacimientoInput> | HijoCreateWithoutActa_nacimientoInput[] | HijoUncheckedCreateWithoutActa_nacimientoInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutActa_nacimientoInput | HijoCreateOrConnectWithoutActa_nacimientoInput[]
    upsert?: HijoUpsertWithWhereUniqueWithoutActa_nacimientoInput | HijoUpsertWithWhereUniqueWithoutActa_nacimientoInput[]
    createMany?: HijoCreateManyActa_nacimientoInputEnvelope
    set?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    disconnect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    delete?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    update?: HijoUpdateWithWhereUniqueWithoutActa_nacimientoInput | HijoUpdateWithWhereUniqueWithoutActa_nacimientoInput[]
    updateMany?: HijoUpdateManyWithWhereWithoutActa_nacimientoInput | HijoUpdateManyWithWhereWithoutActa_nacimientoInput[]
    deleteMany?: HijoScalarWhereInput | HijoScalarWhereInput[]
  }

  export type PermisoUpdateManyWithoutDocumento_aprobacionNestedInput = {
    create?: XOR<PermisoCreateWithoutDocumento_aprobacionInput, PermisoUncheckedCreateWithoutDocumento_aprobacionInput> | PermisoCreateWithoutDocumento_aprobacionInput[] | PermisoUncheckedCreateWithoutDocumento_aprobacionInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutDocumento_aprobacionInput | PermisoCreateOrConnectWithoutDocumento_aprobacionInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutDocumento_aprobacionInput | PermisoUpsertWithWhereUniqueWithoutDocumento_aprobacionInput[]
    createMany?: PermisoCreateManyDocumento_aprobacionInputEnvelope
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutDocumento_aprobacionInput | PermisoUpdateWithWhereUniqueWithoutDocumento_aprobacionInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutDocumento_aprobacionInput | PermisoUpdateManyWithWhereWithoutDocumento_aprobacionInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type CambioAdscripcionUpdateManyWithoutDocumento_respaldoNestedInput = {
    create?: XOR<CambioAdscripcionCreateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput> | CambioAdscripcionCreateWithoutDocumento_respaldoInput[] | CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput | CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput[]
    upsert?: CambioAdscripcionUpsertWithWhereUniqueWithoutDocumento_respaldoInput | CambioAdscripcionUpsertWithWhereUniqueWithoutDocumento_respaldoInput[]
    createMany?: CambioAdscripcionCreateManyDocumento_respaldoInputEnvelope
    set?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    disconnect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    delete?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    update?: CambioAdscripcionUpdateWithWhereUniqueWithoutDocumento_respaldoInput | CambioAdscripcionUpdateWithWhereUniqueWithoutDocumento_respaldoInput[]
    updateMany?: CambioAdscripcionUpdateManyWithWhereWithoutDocumento_respaldoInput | CambioAdscripcionUpdateManyWithWhereWithoutDocumento_respaldoInput[]
    deleteMany?: CambioAdscripcionScalarWhereInput | CambioAdscripcionScalarWhereInput[]
  }

  export type HijoUncheckedUpdateManyWithoutActa_nacimientoNestedInput = {
    create?: XOR<HijoCreateWithoutActa_nacimientoInput, HijoUncheckedCreateWithoutActa_nacimientoInput> | HijoCreateWithoutActa_nacimientoInput[] | HijoUncheckedCreateWithoutActa_nacimientoInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutActa_nacimientoInput | HijoCreateOrConnectWithoutActa_nacimientoInput[]
    upsert?: HijoUpsertWithWhereUniqueWithoutActa_nacimientoInput | HijoUpsertWithWhereUniqueWithoutActa_nacimientoInput[]
    createMany?: HijoCreateManyActa_nacimientoInputEnvelope
    set?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    disconnect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    delete?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    update?: HijoUpdateWithWhereUniqueWithoutActa_nacimientoInput | HijoUpdateWithWhereUniqueWithoutActa_nacimientoInput[]
    updateMany?: HijoUpdateManyWithWhereWithoutActa_nacimientoInput | HijoUpdateManyWithWhereWithoutActa_nacimientoInput[]
    deleteMany?: HijoScalarWhereInput | HijoScalarWhereInput[]
  }

  export type PermisoUncheckedUpdateManyWithoutDocumento_aprobacionNestedInput = {
    create?: XOR<PermisoCreateWithoutDocumento_aprobacionInput, PermisoUncheckedCreateWithoutDocumento_aprobacionInput> | PermisoCreateWithoutDocumento_aprobacionInput[] | PermisoUncheckedCreateWithoutDocumento_aprobacionInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutDocumento_aprobacionInput | PermisoCreateOrConnectWithoutDocumento_aprobacionInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutDocumento_aprobacionInput | PermisoUpsertWithWhereUniqueWithoutDocumento_aprobacionInput[]
    createMany?: PermisoCreateManyDocumento_aprobacionInputEnvelope
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutDocumento_aprobacionInput | PermisoUpdateWithWhereUniqueWithoutDocumento_aprobacionInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutDocumento_aprobacionInput | PermisoUpdateManyWithWhereWithoutDocumento_aprobacionInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoNestedInput = {
    create?: XOR<CambioAdscripcionCreateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput> | CambioAdscripcionCreateWithoutDocumento_respaldoInput[] | CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput | CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput[]
    upsert?: CambioAdscripcionUpsertWithWhereUniqueWithoutDocumento_respaldoInput | CambioAdscripcionUpsertWithWhereUniqueWithoutDocumento_respaldoInput[]
    createMany?: CambioAdscripcionCreateManyDocumento_respaldoInputEnvelope
    set?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    disconnect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    delete?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    update?: CambioAdscripcionUpdateWithWhereUniqueWithoutDocumento_respaldoInput | CambioAdscripcionUpdateWithWhereUniqueWithoutDocumento_respaldoInput[]
    updateMany?: CambioAdscripcionUpdateManyWithWhereWithoutDocumento_respaldoInput | CambioAdscripcionUpdateManyWithWhereWithoutDocumento_respaldoInput[]
    deleteMany?: CambioAdscripcionScalarWhereInput | CambioAdscripcionScalarWhereInput[]
  }

  export type TrabajadorSntiCreateNestedOneWithoutHijosInput = {
    create?: XOR<TrabajadorSntiCreateWithoutHijosInput, TrabajadorSntiUncheckedCreateWithoutHijosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutHijosInput
    connect?: TrabajadorSntiWhereUniqueInput
  }

  export type DocumentoCreateNestedOneWithoutHijosInput = {
    create?: XOR<DocumentoCreateWithoutHijosInput, DocumentoUncheckedCreateWithoutHijosInput>
    connectOrCreate?: DocumentoCreateOrConnectWithoutHijosInput
    connect?: DocumentoWhereUniqueInput
  }

  export type TrabajadorSntiUpdateOneRequiredWithoutHijosNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutHijosInput, TrabajadorSntiUncheckedCreateWithoutHijosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutHijosInput
    upsert?: TrabajadorSntiUpsertWithoutHijosInput
    connect?: TrabajadorSntiWhereUniqueInput
    update?: XOR<XOR<TrabajadorSntiUpdateToOneWithWhereWithoutHijosInput, TrabajadorSntiUpdateWithoutHijosInput>, TrabajadorSntiUncheckedUpdateWithoutHijosInput>
  }

  export type DocumentoUpdateOneWithoutHijosNestedInput = {
    create?: XOR<DocumentoCreateWithoutHijosInput, DocumentoUncheckedCreateWithoutHijosInput>
    connectOrCreate?: DocumentoCreateOrConnectWithoutHijosInput
    upsert?: DocumentoUpsertWithoutHijosInput
    disconnect?: DocumentoWhereInput | boolean
    delete?: DocumentoWhereInput | boolean
    connect?: DocumentoWhereUniqueInput
    update?: XOR<XOR<DocumentoUpdateToOneWithWhereWithoutHijosInput, DocumentoUpdateWithoutHijosInput>, DocumentoUncheckedUpdateWithoutHijosInput>
  }

  export type TrabajadorSntiCreateNestedOneWithoutPermisosInput = {
    create?: XOR<TrabajadorSntiCreateWithoutPermisosInput, TrabajadorSntiUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutPermisosInput
    connect?: TrabajadorSntiWhereUniqueInput
  }

  export type DocumentoCreateNestedOneWithoutPermisosInput = {
    create?: XOR<DocumentoCreateWithoutPermisosInput, DocumentoUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: DocumentoCreateOrConnectWithoutPermisosInput
    connect?: DocumentoWhereUniqueInput
  }

  export type TrabajadorSntiUpdateOneRequiredWithoutPermisosNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutPermisosInput, TrabajadorSntiUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutPermisosInput
    upsert?: TrabajadorSntiUpsertWithoutPermisosInput
    connect?: TrabajadorSntiWhereUniqueInput
    update?: XOR<XOR<TrabajadorSntiUpdateToOneWithWhereWithoutPermisosInput, TrabajadorSntiUpdateWithoutPermisosInput>, TrabajadorSntiUncheckedUpdateWithoutPermisosInput>
  }

  export type DocumentoUpdateOneWithoutPermisosNestedInput = {
    create?: XOR<DocumentoCreateWithoutPermisosInput, DocumentoUncheckedCreateWithoutPermisosInput>
    connectOrCreate?: DocumentoCreateOrConnectWithoutPermisosInput
    upsert?: DocumentoUpsertWithoutPermisosInput
    disconnect?: DocumentoWhereInput | boolean
    delete?: DocumentoWhereInput | boolean
    connect?: DocumentoWhereUniqueInput
    update?: XOR<XOR<DocumentoUpdateToOneWithWhereWithoutPermisosInput, DocumentoUpdateWithoutPermisosInput>, DocumentoUncheckedUpdateWithoutPermisosInput>
  }

  export type TrabajadorSntiCreateNestedOneWithoutSancionesInput = {
    create?: XOR<TrabajadorSntiCreateWithoutSancionesInput, TrabajadorSntiUncheckedCreateWithoutSancionesInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutSancionesInput
    connect?: TrabajadorSntiWhereUniqueInput
  }

  export type TrabajadorSntiUpdateOneRequiredWithoutSancionesNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutSancionesInput, TrabajadorSntiUncheckedCreateWithoutSancionesInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutSancionesInput
    upsert?: TrabajadorSntiUpsertWithoutSancionesInput
    connect?: TrabajadorSntiWhereUniqueInput
    update?: XOR<XOR<TrabajadorSntiUpdateToOneWithWhereWithoutSancionesInput, TrabajadorSntiUpdateWithoutSancionesInput>, TrabajadorSntiUncheckedUpdateWithoutSancionesInput>
  }

  export type TrabajadorSntiCreateNestedManyWithoutSeccionInput = {
    create?: XOR<TrabajadorSntiCreateWithoutSeccionInput, TrabajadorSntiUncheckedCreateWithoutSeccionInput> | TrabajadorSntiCreateWithoutSeccionInput[] | TrabajadorSntiUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutSeccionInput | TrabajadorSntiCreateOrConnectWithoutSeccionInput[]
    createMany?: TrabajadorSntiCreateManySeccionInputEnvelope
    connect?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
  }

  export type TrabajadorSntiUncheckedCreateNestedManyWithoutSeccionInput = {
    create?: XOR<TrabajadorSntiCreateWithoutSeccionInput, TrabajadorSntiUncheckedCreateWithoutSeccionInput> | TrabajadorSntiCreateWithoutSeccionInput[] | TrabajadorSntiUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutSeccionInput | TrabajadorSntiCreateOrConnectWithoutSeccionInput[]
    createMany?: TrabajadorSntiCreateManySeccionInputEnvelope
    connect?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
  }

  export type TrabajadorSntiUpdateManyWithoutSeccionNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutSeccionInput, TrabajadorSntiUncheckedCreateWithoutSeccionInput> | TrabajadorSntiCreateWithoutSeccionInput[] | TrabajadorSntiUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutSeccionInput | TrabajadorSntiCreateOrConnectWithoutSeccionInput[]
    upsert?: TrabajadorSntiUpsertWithWhereUniqueWithoutSeccionInput | TrabajadorSntiUpsertWithWhereUniqueWithoutSeccionInput[]
    createMany?: TrabajadorSntiCreateManySeccionInputEnvelope
    set?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    disconnect?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    delete?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    connect?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    update?: TrabajadorSntiUpdateWithWhereUniqueWithoutSeccionInput | TrabajadorSntiUpdateWithWhereUniqueWithoutSeccionInput[]
    updateMany?: TrabajadorSntiUpdateManyWithWhereWithoutSeccionInput | TrabajadorSntiUpdateManyWithWhereWithoutSeccionInput[]
    deleteMany?: TrabajadorSntiScalarWhereInput | TrabajadorSntiScalarWhereInput[]
  }

  export type TrabajadorSntiUncheckedUpdateManyWithoutSeccionNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutSeccionInput, TrabajadorSntiUncheckedCreateWithoutSeccionInput> | TrabajadorSntiCreateWithoutSeccionInput[] | TrabajadorSntiUncheckedCreateWithoutSeccionInput[]
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutSeccionInput | TrabajadorSntiCreateOrConnectWithoutSeccionInput[]
    upsert?: TrabajadorSntiUpsertWithWhereUniqueWithoutSeccionInput | TrabajadorSntiUpsertWithWhereUniqueWithoutSeccionInput[]
    createMany?: TrabajadorSntiCreateManySeccionInputEnvelope
    set?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    disconnect?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    delete?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    connect?: TrabajadorSntiWhereUniqueInput | TrabajadorSntiWhereUniqueInput[]
    update?: TrabajadorSntiUpdateWithWhereUniqueWithoutSeccionInput | TrabajadorSntiUpdateWithWhereUniqueWithoutSeccionInput[]
    updateMany?: TrabajadorSntiUpdateManyWithWhereWithoutSeccionInput | TrabajadorSntiUpdateManyWithWhereWithoutSeccionInput[]
    deleteMany?: TrabajadorSntiScalarWhereInput | TrabajadorSntiScalarWhereInput[]
  }

  export type SeccionSntiCreateNestedOneWithoutTrabajadoresInput = {
    create?: XOR<SeccionSntiCreateWithoutTrabajadoresInput, SeccionSntiUncheckedCreateWithoutTrabajadoresInput>
    connectOrCreate?: SeccionSntiCreateOrConnectWithoutTrabajadoresInput
    connect?: SeccionSntiWhereUniqueInput
  }

  export type CambioAdscripcionCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<CambioAdscripcionCreateWithoutTrabajadorInput, CambioAdscripcionUncheckedCreateWithoutTrabajadorInput> | CambioAdscripcionCreateWithoutTrabajadorInput[] | CambioAdscripcionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutTrabajadorInput | CambioAdscripcionCreateOrConnectWithoutTrabajadorInput[]
    createMany?: CambioAdscripcionCreateManyTrabajadorInputEnvelope
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
  }

  export type DocumentoCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<DocumentoCreateWithoutTrabajadorInput, DocumentoUncheckedCreateWithoutTrabajadorInput> | DocumentoCreateWithoutTrabajadorInput[] | DocumentoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: DocumentoCreateOrConnectWithoutTrabajadorInput | DocumentoCreateOrConnectWithoutTrabajadorInput[]
    createMany?: DocumentoCreateManyTrabajadorInputEnvelope
    connect?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
  }

  export type HijoCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<HijoCreateWithoutTrabajadorInput, HijoUncheckedCreateWithoutTrabajadorInput> | HijoCreateWithoutTrabajadorInput[] | HijoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutTrabajadorInput | HijoCreateOrConnectWithoutTrabajadorInput[]
    createMany?: HijoCreateManyTrabajadorInputEnvelope
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
  }

  export type PermisoCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<PermisoCreateWithoutTrabajadorInput, PermisoUncheckedCreateWithoutTrabajadorInput> | PermisoCreateWithoutTrabajadorInput[] | PermisoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutTrabajadorInput | PermisoCreateOrConnectWithoutTrabajadorInput[]
    createMany?: PermisoCreateManyTrabajadorInputEnvelope
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type SancionSntiCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<SancionSntiCreateWithoutTrabajadorInput, SancionSntiUncheckedCreateWithoutTrabajadorInput> | SancionSntiCreateWithoutTrabajadorInput[] | SancionSntiUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionSntiCreateOrConnectWithoutTrabajadorInput | SancionSntiCreateOrConnectWithoutTrabajadorInput[]
    createMany?: SancionSntiCreateManyTrabajadorInputEnvelope
    connect?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
  }

  export type UsuarioCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<UsuarioCreateWithoutTrabajadorInput, UsuarioUncheckedCreateWithoutTrabajadorInput> | UsuarioCreateWithoutTrabajadorInput[] | UsuarioUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTrabajadorInput | UsuarioCreateOrConnectWithoutTrabajadorInput[]
    createMany?: UsuarioCreateManyTrabajadorInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<CambioAdscripcionCreateWithoutTrabajadorInput, CambioAdscripcionUncheckedCreateWithoutTrabajadorInput> | CambioAdscripcionCreateWithoutTrabajadorInput[] | CambioAdscripcionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutTrabajadorInput | CambioAdscripcionCreateOrConnectWithoutTrabajadorInput[]
    createMany?: CambioAdscripcionCreateManyTrabajadorInputEnvelope
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
  }

  export type DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<DocumentoCreateWithoutTrabajadorInput, DocumentoUncheckedCreateWithoutTrabajadorInput> | DocumentoCreateWithoutTrabajadorInput[] | DocumentoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: DocumentoCreateOrConnectWithoutTrabajadorInput | DocumentoCreateOrConnectWithoutTrabajadorInput[]
    createMany?: DocumentoCreateManyTrabajadorInputEnvelope
    connect?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
  }

  export type HijoUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<HijoCreateWithoutTrabajadorInput, HijoUncheckedCreateWithoutTrabajadorInput> | HijoCreateWithoutTrabajadorInput[] | HijoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutTrabajadorInput | HijoCreateOrConnectWithoutTrabajadorInput[]
    createMany?: HijoCreateManyTrabajadorInputEnvelope
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
  }

  export type PermisoUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<PermisoCreateWithoutTrabajadorInput, PermisoUncheckedCreateWithoutTrabajadorInput> | PermisoCreateWithoutTrabajadorInput[] | PermisoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutTrabajadorInput | PermisoCreateOrConnectWithoutTrabajadorInput[]
    createMany?: PermisoCreateManyTrabajadorInputEnvelope
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<SancionSntiCreateWithoutTrabajadorInput, SancionSntiUncheckedCreateWithoutTrabajadorInput> | SancionSntiCreateWithoutTrabajadorInput[] | SancionSntiUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionSntiCreateOrConnectWithoutTrabajadorInput | SancionSntiCreateOrConnectWithoutTrabajadorInput[]
    createMany?: SancionSntiCreateManyTrabajadorInputEnvelope
    connect?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput = {
    create?: XOR<UsuarioCreateWithoutTrabajadorInput, UsuarioUncheckedCreateWithoutTrabajadorInput> | UsuarioCreateWithoutTrabajadorInput[] | UsuarioUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTrabajadorInput | UsuarioCreateOrConnectWithoutTrabajadorInput[]
    createMany?: UsuarioCreateManyTrabajadorInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput = {
    create?: XOR<SeccionSntiCreateWithoutTrabajadoresInput, SeccionSntiUncheckedCreateWithoutTrabajadoresInput>
    connectOrCreate?: SeccionSntiCreateOrConnectWithoutTrabajadoresInput
    upsert?: SeccionSntiUpsertWithoutTrabajadoresInput
    connect?: SeccionSntiWhereUniqueInput
    update?: XOR<XOR<SeccionSntiUpdateToOneWithWhereWithoutTrabajadoresInput, SeccionSntiUpdateWithoutTrabajadoresInput>, SeccionSntiUncheckedUpdateWithoutTrabajadoresInput>
  }

  export type CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<CambioAdscripcionCreateWithoutTrabajadorInput, CambioAdscripcionUncheckedCreateWithoutTrabajadorInput> | CambioAdscripcionCreateWithoutTrabajadorInput[] | CambioAdscripcionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutTrabajadorInput | CambioAdscripcionCreateOrConnectWithoutTrabajadorInput[]
    upsert?: CambioAdscripcionUpsertWithWhereUniqueWithoutTrabajadorInput | CambioAdscripcionUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: CambioAdscripcionCreateManyTrabajadorInputEnvelope
    set?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    disconnect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    delete?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    update?: CambioAdscripcionUpdateWithWhereUniqueWithoutTrabajadorInput | CambioAdscripcionUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: CambioAdscripcionUpdateManyWithWhereWithoutTrabajadorInput | CambioAdscripcionUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: CambioAdscripcionScalarWhereInput | CambioAdscripcionScalarWhereInput[]
  }

  export type DocumentoUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<DocumentoCreateWithoutTrabajadorInput, DocumentoUncheckedCreateWithoutTrabajadorInput> | DocumentoCreateWithoutTrabajadorInput[] | DocumentoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: DocumentoCreateOrConnectWithoutTrabajadorInput | DocumentoCreateOrConnectWithoutTrabajadorInput[]
    upsert?: DocumentoUpsertWithWhereUniqueWithoutTrabajadorInput | DocumentoUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: DocumentoCreateManyTrabajadorInputEnvelope
    set?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    disconnect?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    delete?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    connect?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    update?: DocumentoUpdateWithWhereUniqueWithoutTrabajadorInput | DocumentoUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: DocumentoUpdateManyWithWhereWithoutTrabajadorInput | DocumentoUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: DocumentoScalarWhereInput | DocumentoScalarWhereInput[]
  }

  export type HijoUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<HijoCreateWithoutTrabajadorInput, HijoUncheckedCreateWithoutTrabajadorInput> | HijoCreateWithoutTrabajadorInput[] | HijoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutTrabajadorInput | HijoCreateOrConnectWithoutTrabajadorInput[]
    upsert?: HijoUpsertWithWhereUniqueWithoutTrabajadorInput | HijoUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: HijoCreateManyTrabajadorInputEnvelope
    set?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    disconnect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    delete?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    update?: HijoUpdateWithWhereUniqueWithoutTrabajadorInput | HijoUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: HijoUpdateManyWithWhereWithoutTrabajadorInput | HijoUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: HijoScalarWhereInput | HijoScalarWhereInput[]
  }

  export type PermisoUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<PermisoCreateWithoutTrabajadorInput, PermisoUncheckedCreateWithoutTrabajadorInput> | PermisoCreateWithoutTrabajadorInput[] | PermisoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutTrabajadorInput | PermisoCreateOrConnectWithoutTrabajadorInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutTrabajadorInput | PermisoUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: PermisoCreateManyTrabajadorInputEnvelope
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutTrabajadorInput | PermisoUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutTrabajadorInput | PermisoUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type SancionSntiUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<SancionSntiCreateWithoutTrabajadorInput, SancionSntiUncheckedCreateWithoutTrabajadorInput> | SancionSntiCreateWithoutTrabajadorInput[] | SancionSntiUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionSntiCreateOrConnectWithoutTrabajadorInput | SancionSntiCreateOrConnectWithoutTrabajadorInput[]
    upsert?: SancionSntiUpsertWithWhereUniqueWithoutTrabajadorInput | SancionSntiUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: SancionSntiCreateManyTrabajadorInputEnvelope
    set?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    disconnect?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    delete?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    connect?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    update?: SancionSntiUpdateWithWhereUniqueWithoutTrabajadorInput | SancionSntiUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: SancionSntiUpdateManyWithWhereWithoutTrabajadorInput | SancionSntiUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: SancionSntiScalarWhereInput | SancionSntiScalarWhereInput[]
  }

  export type UsuarioUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<UsuarioCreateWithoutTrabajadorInput, UsuarioUncheckedCreateWithoutTrabajadorInput> | UsuarioCreateWithoutTrabajadorInput[] | UsuarioUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTrabajadorInput | UsuarioCreateOrConnectWithoutTrabajadorInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutTrabajadorInput | UsuarioUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: UsuarioCreateManyTrabajadorInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutTrabajadorInput | UsuarioUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutTrabajadorInput | UsuarioUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<CambioAdscripcionCreateWithoutTrabajadorInput, CambioAdscripcionUncheckedCreateWithoutTrabajadorInput> | CambioAdscripcionCreateWithoutTrabajadorInput[] | CambioAdscripcionUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: CambioAdscripcionCreateOrConnectWithoutTrabajadorInput | CambioAdscripcionCreateOrConnectWithoutTrabajadorInput[]
    upsert?: CambioAdscripcionUpsertWithWhereUniqueWithoutTrabajadorInput | CambioAdscripcionUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: CambioAdscripcionCreateManyTrabajadorInputEnvelope
    set?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    disconnect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    delete?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    connect?: CambioAdscripcionWhereUniqueInput | CambioAdscripcionWhereUniqueInput[]
    update?: CambioAdscripcionUpdateWithWhereUniqueWithoutTrabajadorInput | CambioAdscripcionUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: CambioAdscripcionUpdateManyWithWhereWithoutTrabajadorInput | CambioAdscripcionUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: CambioAdscripcionScalarWhereInput | CambioAdscripcionScalarWhereInput[]
  }

  export type DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<DocumentoCreateWithoutTrabajadorInput, DocumentoUncheckedCreateWithoutTrabajadorInput> | DocumentoCreateWithoutTrabajadorInput[] | DocumentoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: DocumentoCreateOrConnectWithoutTrabajadorInput | DocumentoCreateOrConnectWithoutTrabajadorInput[]
    upsert?: DocumentoUpsertWithWhereUniqueWithoutTrabajadorInput | DocumentoUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: DocumentoCreateManyTrabajadorInputEnvelope
    set?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    disconnect?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    delete?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    connect?: DocumentoWhereUniqueInput | DocumentoWhereUniqueInput[]
    update?: DocumentoUpdateWithWhereUniqueWithoutTrabajadorInput | DocumentoUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: DocumentoUpdateManyWithWhereWithoutTrabajadorInput | DocumentoUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: DocumentoScalarWhereInput | DocumentoScalarWhereInput[]
  }

  export type HijoUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<HijoCreateWithoutTrabajadorInput, HijoUncheckedCreateWithoutTrabajadorInput> | HijoCreateWithoutTrabajadorInput[] | HijoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: HijoCreateOrConnectWithoutTrabajadorInput | HijoCreateOrConnectWithoutTrabajadorInput[]
    upsert?: HijoUpsertWithWhereUniqueWithoutTrabajadorInput | HijoUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: HijoCreateManyTrabajadorInputEnvelope
    set?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    disconnect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    delete?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    connect?: HijoWhereUniqueInput | HijoWhereUniqueInput[]
    update?: HijoUpdateWithWhereUniqueWithoutTrabajadorInput | HijoUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: HijoUpdateManyWithWhereWithoutTrabajadorInput | HijoUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: HijoScalarWhereInput | HijoScalarWhereInput[]
  }

  export type PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<PermisoCreateWithoutTrabajadorInput, PermisoUncheckedCreateWithoutTrabajadorInput> | PermisoCreateWithoutTrabajadorInput[] | PermisoUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutTrabajadorInput | PermisoCreateOrConnectWithoutTrabajadorInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutTrabajadorInput | PermisoUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: PermisoCreateManyTrabajadorInputEnvelope
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutTrabajadorInput | PermisoUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutTrabajadorInput | PermisoUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<SancionSntiCreateWithoutTrabajadorInput, SancionSntiUncheckedCreateWithoutTrabajadorInput> | SancionSntiCreateWithoutTrabajadorInput[] | SancionSntiUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: SancionSntiCreateOrConnectWithoutTrabajadorInput | SancionSntiCreateOrConnectWithoutTrabajadorInput[]
    upsert?: SancionSntiUpsertWithWhereUniqueWithoutTrabajadorInput | SancionSntiUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: SancionSntiCreateManyTrabajadorInputEnvelope
    set?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    disconnect?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    delete?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    connect?: SancionSntiWhereUniqueInput | SancionSntiWhereUniqueInput[]
    update?: SancionSntiUpdateWithWhereUniqueWithoutTrabajadorInput | SancionSntiUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: SancionSntiUpdateManyWithWhereWithoutTrabajadorInput | SancionSntiUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: SancionSntiScalarWhereInput | SancionSntiScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput = {
    create?: XOR<UsuarioCreateWithoutTrabajadorInput, UsuarioUncheckedCreateWithoutTrabajadorInput> | UsuarioCreateWithoutTrabajadorInput[] | UsuarioUncheckedCreateWithoutTrabajadorInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutTrabajadorInput | UsuarioCreateOrConnectWithoutTrabajadorInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutTrabajadorInput | UsuarioUpsertWithWhereUniqueWithoutTrabajadorInput[]
    createMany?: UsuarioCreateManyTrabajadorInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutTrabajadorInput | UsuarioUpdateWithWhereUniqueWithoutTrabajadorInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutTrabajadorInput | UsuarioUpdateManyWithWhereWithoutTrabajadorInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type TrabajadorSntiCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<TrabajadorSntiCreateWithoutUsuariosInput, TrabajadorSntiUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutUsuariosInput
    connect?: TrabajadorSntiWhereUniqueInput
  }

  export type TrabajadorSntiUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<TrabajadorSntiCreateWithoutUsuariosInput, TrabajadorSntiUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: TrabajadorSntiCreateOrConnectWithoutUsuariosInput
    upsert?: TrabajadorSntiUpsertWithoutUsuariosInput
    disconnect?: TrabajadorSntiWhereInput | boolean
    delete?: TrabajadorSntiWhereInput | boolean
    connect?: TrabajadorSntiWhereUniqueInput
    update?: XOR<XOR<TrabajadorSntiUpdateToOneWithWhereWithoutUsuariosInput, TrabajadorSntiUpdateWithoutUsuariosInput>, TrabajadorSntiUncheckedUpdateWithoutUsuariosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type TrabajadorCreateWithoutSancionesInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionCreateNestedOneWithoutTrabajadoresInput
  }

  export type TrabajadorUncheckedCreateWithoutSancionesInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type TrabajadorCreateOrConnectWithoutSancionesInput = {
    where: TrabajadorWhereUniqueInput
    create: XOR<TrabajadorCreateWithoutSancionesInput, TrabajadorUncheckedCreateWithoutSancionesInput>
  }

  export type TrabajadorUpsertWithoutSancionesInput = {
    update: XOR<TrabajadorUpdateWithoutSancionesInput, TrabajadorUncheckedUpdateWithoutSancionesInput>
    create: XOR<TrabajadorCreateWithoutSancionesInput, TrabajadorUncheckedCreateWithoutSancionesInput>
    where?: TrabajadorWhereInput
  }

  export type TrabajadorUpdateToOneWithWhereWithoutSancionesInput = {
    where?: TrabajadorWhereInput
    data: XOR<TrabajadorUpdateWithoutSancionesInput, TrabajadorUncheckedUpdateWithoutSancionesInput>
  }

  export type TrabajadorUpdateWithoutSancionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionUpdateOneRequiredWithoutTrabajadoresNestedInput
  }

  export type TrabajadorUncheckedUpdateWithoutSancionesInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TrabajadorCreateWithoutSeccionInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    sanciones?: SancionCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorUncheckedCreateWithoutSeccionInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    sanciones?: SancionUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorCreateOrConnectWithoutSeccionInput = {
    where: TrabajadorWhereUniqueInput
    create: XOR<TrabajadorCreateWithoutSeccionInput, TrabajadorUncheckedCreateWithoutSeccionInput>
  }

  export type TrabajadorCreateManySeccionInputEnvelope = {
    data: TrabajadorCreateManySeccionInput | TrabajadorCreateManySeccionInput[]
    skipDuplicates?: boolean
  }

  export type TrabajadorUpsertWithWhereUniqueWithoutSeccionInput = {
    where: TrabajadorWhereUniqueInput
    update: XOR<TrabajadorUpdateWithoutSeccionInput, TrabajadorUncheckedUpdateWithoutSeccionInput>
    create: XOR<TrabajadorCreateWithoutSeccionInput, TrabajadorUncheckedCreateWithoutSeccionInput>
  }

  export type TrabajadorUpdateWithWhereUniqueWithoutSeccionInput = {
    where: TrabajadorWhereUniqueInput
    data: XOR<TrabajadorUpdateWithoutSeccionInput, TrabajadorUncheckedUpdateWithoutSeccionInput>
  }

  export type TrabajadorUpdateManyWithWhereWithoutSeccionInput = {
    where: TrabajadorScalarWhereInput
    data: XOR<TrabajadorUpdateManyMutationInput, TrabajadorUncheckedUpdateManyWithoutSeccionInput>
  }

  export type TrabajadorScalarWhereInput = {
    AND?: TrabajadorScalarWhereInput | TrabajadorScalarWhereInput[]
    OR?: TrabajadorScalarWhereInput[]
    NOT?: TrabajadorScalarWhereInput | TrabajadorScalarWhereInput[]
    id_trabajador?: IntFilter<"Trabajador"> | number
    nombre?: StringFilter<"Trabajador"> | string
    apellido_paterno?: StringFilter<"Trabajador"> | string
    apellido_materno?: StringNullableFilter<"Trabajador"> | string | null
    fecha_nacimiento?: DateTimeFilter<"Trabajador"> | Date | string
    sexo?: StringFilter<"Trabajador"> | string
    curp?: StringFilter<"Trabajador"> | string
    rfc?: StringFilter<"Trabajador"> | string
    email?: StringFilter<"Trabajador"> | string
    situacion_sentimental?: StringNullableFilter<"Trabajador"> | string | null
    numero_hijos?: IntFilter<"Trabajador"> | number
    numero_empleado?: StringFilter<"Trabajador"> | string
    numero_plaza?: StringFilter<"Trabajador"> | string
    fecha_ingreso?: DateTimeFilter<"Trabajador"> | Date | string
    fecha_ingreso_gobierno?: DateTimeFilter<"Trabajador"> | Date | string
    nivel_puesto?: StringFilter<"Trabajador"> | string
    nombre_puesto?: StringFilter<"Trabajador"> | string
    puesto_inpi?: StringNullableFilter<"Trabajador"> | string | null
    adscripcion?: StringFilter<"Trabajador"> | string
    id_seccion?: IntFilter<"Trabajador"> | number
    nivel_estudios?: StringNullableFilter<"Trabajador"> | string | null
    institucion_estudios?: StringNullableFilter<"Trabajador"> | string | null
    certificado_estudios?: BoolNullableFilter<"Trabajador"> | boolean | null
    plaza_base?: StringNullableFilter<"Trabajador"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"Trabajador"> | Date | string | null
  }

  export type SeccionCreateWithoutTrabajadoresInput = {
    nombre_seccion: string
    descripcion?: string | null
  }

  export type SeccionUncheckedCreateWithoutTrabajadoresInput = {
    id_seccion?: number
    nombre_seccion: string
    descripcion?: string | null
  }

  export type SeccionCreateOrConnectWithoutTrabajadoresInput = {
    where: SeccionWhereUniqueInput
    create: XOR<SeccionCreateWithoutTrabajadoresInput, SeccionUncheckedCreateWithoutTrabajadoresInput>
  }

  export type SancionCreateWithoutTrabajadorInput = {
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionUncheckedCreateWithoutTrabajadorInput = {
    id_sancion?: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionCreateOrConnectWithoutTrabajadorInput = {
    where: SancionWhereUniqueInput
    create: XOR<SancionCreateWithoutTrabajadorInput, SancionUncheckedCreateWithoutTrabajadorInput>
  }

  export type SancionCreateManyTrabajadorInputEnvelope = {
    data: SancionCreateManyTrabajadorInput | SancionCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type SeccionUpsertWithoutTrabajadoresInput = {
    update: XOR<SeccionUpdateWithoutTrabajadoresInput, SeccionUncheckedUpdateWithoutTrabajadoresInput>
    create: XOR<SeccionCreateWithoutTrabajadoresInput, SeccionUncheckedCreateWithoutTrabajadoresInput>
    where?: SeccionWhereInput
  }

  export type SeccionUpdateToOneWithWhereWithoutTrabajadoresInput = {
    where?: SeccionWhereInput
    data: XOR<SeccionUpdateWithoutTrabajadoresInput, SeccionUncheckedUpdateWithoutTrabajadoresInput>
  }

  export type SeccionUpdateWithoutTrabajadoresInput = {
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SeccionUncheckedUpdateWithoutTrabajadoresInput = {
    id_seccion?: IntFieldUpdateOperationsInput | number
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SancionUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: SancionWhereUniqueInput
    update: XOR<SancionUpdateWithoutTrabajadorInput, SancionUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<SancionCreateWithoutTrabajadorInput, SancionUncheckedCreateWithoutTrabajadorInput>
  }

  export type SancionUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: SancionWhereUniqueInput
    data: XOR<SancionUpdateWithoutTrabajadorInput, SancionUncheckedUpdateWithoutTrabajadorInput>
  }

  export type SancionUpdateManyWithWhereWithoutTrabajadorInput = {
    where: SancionScalarWhereInput
    data: XOR<SancionUpdateManyMutationInput, SancionUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type SancionScalarWhereInput = {
    AND?: SancionScalarWhereInput | SancionScalarWhereInput[]
    OR?: SancionScalarWhereInput[]
    NOT?: SancionScalarWhereInput | SancionScalarWhereInput[]
    id_sancion?: IntFilter<"Sancion"> | number
    id_trabajador?: IntFilter<"Sancion"> | number
    tipo_sancion?: StringFilter<"Sancion"> | string
    descripcion?: StringFilter<"Sancion"> | string
    fecha_aplicacion?: DateTimeFilter<"Sancion"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"Sancion"> | Date | string | null
    estatus?: StringFilter<"Sancion"> | string
    usuario_registro?: StringNullableFilter<"Sancion"> | string | null
    fecha_registro?: DateTimeNullableFilter<"Sancion"> | Date | string | null
  }

  export type TrabajadorSntiCreateWithoutCambios_adscripcionInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutCambios_adscripcionInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutCambios_adscripcionInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutCambios_adscripcionInput, TrabajadorSntiUncheckedCreateWithoutCambios_adscripcionInput>
  }

  export type DocumentoCreateWithoutCambios_adscripcionInput = {
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutDocumentosInput
    hijos?: HijoCreateNestedManyWithoutActa_nacimientoInput
    permisos?: PermisoCreateNestedManyWithoutDocumento_aprobacionInput
  }

  export type DocumentoUncheckedCreateWithoutCambios_adscripcionInput = {
    id_documento?: number
    id_trabajador: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    hijos?: HijoUncheckedCreateNestedManyWithoutActa_nacimientoInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutDocumento_aprobacionInput
  }

  export type DocumentoCreateOrConnectWithoutCambios_adscripcionInput = {
    where: DocumentoWhereUniqueInput
    create: XOR<DocumentoCreateWithoutCambios_adscripcionInput, DocumentoUncheckedCreateWithoutCambios_adscripcionInput>
  }

  export type TrabajadorSntiUpsertWithoutCambios_adscripcionInput = {
    update: XOR<TrabajadorSntiUpdateWithoutCambios_adscripcionInput, TrabajadorSntiUncheckedUpdateWithoutCambios_adscripcionInput>
    create: XOR<TrabajadorSntiCreateWithoutCambios_adscripcionInput, TrabajadorSntiUncheckedCreateWithoutCambios_adscripcionInput>
    where?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiUpdateToOneWithWhereWithoutCambios_adscripcionInput = {
    where?: TrabajadorSntiWhereInput
    data: XOR<TrabajadorSntiUpdateWithoutCambios_adscripcionInput, TrabajadorSntiUncheckedUpdateWithoutCambios_adscripcionInput>
  }

  export type TrabajadorSntiUpdateWithoutCambios_adscripcionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutCambios_adscripcionInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type DocumentoUpsertWithoutCambios_adscripcionInput = {
    update: XOR<DocumentoUpdateWithoutCambios_adscripcionInput, DocumentoUncheckedUpdateWithoutCambios_adscripcionInput>
    create: XOR<DocumentoCreateWithoutCambios_adscripcionInput, DocumentoUncheckedCreateWithoutCambios_adscripcionInput>
    where?: DocumentoWhereInput
  }

  export type DocumentoUpdateToOneWithWhereWithoutCambios_adscripcionInput = {
    where?: DocumentoWhereInput
    data: XOR<DocumentoUpdateWithoutCambios_adscripcionInput, DocumentoUncheckedUpdateWithoutCambios_adscripcionInput>
  }

  export type DocumentoUpdateWithoutCambios_adscripcionInput = {
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutDocumentosNestedInput
    hijos?: HijoUpdateManyWithoutActa_nacimientoNestedInput
    permisos?: PermisoUpdateManyWithoutDocumento_aprobacionNestedInput
  }

  export type DocumentoUncheckedUpdateWithoutCambios_adscripcionInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hijos?: HijoUncheckedUpdateManyWithoutActa_nacimientoNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutDocumento_aprobacionNestedInput
  }

  export type TrabajadorSntiCreateWithoutDocumentosInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutDocumentosInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutDocumentosInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutDocumentosInput, TrabajadorSntiUncheckedCreateWithoutDocumentosInput>
  }

  export type HijoCreateWithoutActa_nacimientoInput = {
    nombre_completo: string
    fecha_nacimiento: Date | string
    vigente?: boolean | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutHijosInput
  }

  export type HijoUncheckedCreateWithoutActa_nacimientoInput = {
    id_hijo?: number
    id_trabajador: number
    nombre_completo: string
    fecha_nacimiento: Date | string
    vigente?: boolean | null
  }

  export type HijoCreateOrConnectWithoutActa_nacimientoInput = {
    where: HijoWhereUniqueInput
    create: XOR<HijoCreateWithoutActa_nacimientoInput, HijoUncheckedCreateWithoutActa_nacimientoInput>
  }

  export type HijoCreateManyActa_nacimientoInputEnvelope = {
    data: HijoCreateManyActa_nacimientoInput | HijoCreateManyActa_nacimientoInput[]
    skipDuplicates?: boolean
  }

  export type PermisoCreateWithoutDocumento_aprobacionInput = {
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    fecha_registro?: Date | string | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutPermisosInput
  }

  export type PermisoUncheckedCreateWithoutDocumento_aprobacionInput = {
    id_permiso?: number
    id_trabajador: number
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    fecha_registro?: Date | string | null
  }

  export type PermisoCreateOrConnectWithoutDocumento_aprobacionInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutDocumento_aprobacionInput, PermisoUncheckedCreateWithoutDocumento_aprobacionInput>
  }

  export type PermisoCreateManyDocumento_aprobacionInputEnvelope = {
    data: PermisoCreateManyDocumento_aprobacionInput | PermisoCreateManyDocumento_aprobacionInput[]
    skipDuplicates?: boolean
  }

  export type CambioAdscripcionCreateWithoutDocumento_respaldoInput = {
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutCambios_adscripcionInput
  }

  export type CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput = {
    id_cambio?: number
    id_trabajador: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type CambioAdscripcionCreateOrConnectWithoutDocumento_respaldoInput = {
    where: CambioAdscripcionWhereUniqueInput
    create: XOR<CambioAdscripcionCreateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput>
  }

  export type CambioAdscripcionCreateManyDocumento_respaldoInputEnvelope = {
    data: CambioAdscripcionCreateManyDocumento_respaldoInput | CambioAdscripcionCreateManyDocumento_respaldoInput[]
    skipDuplicates?: boolean
  }

  export type TrabajadorSntiUpsertWithoutDocumentosInput = {
    update: XOR<TrabajadorSntiUpdateWithoutDocumentosInput, TrabajadorSntiUncheckedUpdateWithoutDocumentosInput>
    create: XOR<TrabajadorSntiCreateWithoutDocumentosInput, TrabajadorSntiUncheckedCreateWithoutDocumentosInput>
    where?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiUpdateToOneWithWhereWithoutDocumentosInput = {
    where?: TrabajadorSntiWhereInput
    data: XOR<TrabajadorSntiUpdateWithoutDocumentosInput, TrabajadorSntiUncheckedUpdateWithoutDocumentosInput>
  }

  export type TrabajadorSntiUpdateWithoutDocumentosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutDocumentosInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type HijoUpsertWithWhereUniqueWithoutActa_nacimientoInput = {
    where: HijoWhereUniqueInput
    update: XOR<HijoUpdateWithoutActa_nacimientoInput, HijoUncheckedUpdateWithoutActa_nacimientoInput>
    create: XOR<HijoCreateWithoutActa_nacimientoInput, HijoUncheckedCreateWithoutActa_nacimientoInput>
  }

  export type HijoUpdateWithWhereUniqueWithoutActa_nacimientoInput = {
    where: HijoWhereUniqueInput
    data: XOR<HijoUpdateWithoutActa_nacimientoInput, HijoUncheckedUpdateWithoutActa_nacimientoInput>
  }

  export type HijoUpdateManyWithWhereWithoutActa_nacimientoInput = {
    where: HijoScalarWhereInput
    data: XOR<HijoUpdateManyMutationInput, HijoUncheckedUpdateManyWithoutActa_nacimientoInput>
  }

  export type HijoScalarWhereInput = {
    AND?: HijoScalarWhereInput | HijoScalarWhereInput[]
    OR?: HijoScalarWhereInput[]
    NOT?: HijoScalarWhereInput | HijoScalarWhereInput[]
    id_hijo?: IntFilter<"Hijo"> | number
    id_trabajador?: IntFilter<"Hijo"> | number
    nombre_completo?: StringFilter<"Hijo"> | string
    fecha_nacimiento?: DateTimeFilter<"Hijo"> | Date | string
    acta_nacimiento_id?: IntNullableFilter<"Hijo"> | number | null
    vigente?: BoolNullableFilter<"Hijo"> | boolean | null
  }

  export type PermisoUpsertWithWhereUniqueWithoutDocumento_aprobacionInput = {
    where: PermisoWhereUniqueInput
    update: XOR<PermisoUpdateWithoutDocumento_aprobacionInput, PermisoUncheckedUpdateWithoutDocumento_aprobacionInput>
    create: XOR<PermisoCreateWithoutDocumento_aprobacionInput, PermisoUncheckedCreateWithoutDocumento_aprobacionInput>
  }

  export type PermisoUpdateWithWhereUniqueWithoutDocumento_aprobacionInput = {
    where: PermisoWhereUniqueInput
    data: XOR<PermisoUpdateWithoutDocumento_aprobacionInput, PermisoUncheckedUpdateWithoutDocumento_aprobacionInput>
  }

  export type PermisoUpdateManyWithWhereWithoutDocumento_aprobacionInput = {
    where: PermisoScalarWhereInput
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyWithoutDocumento_aprobacionInput>
  }

  export type PermisoScalarWhereInput = {
    AND?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
    OR?: PermisoScalarWhereInput[]
    NOT?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
    id_permiso?: IntFilter<"Permiso"> | number
    id_trabajador?: IntFilter<"Permiso"> | number
    tipo_permiso?: StringNullableFilter<"Permiso"> | string | null
    fecha_inicio?: DateTimeFilter<"Permiso"> | Date | string
    fecha_fin?: DateTimeFilter<"Permiso"> | Date | string
    motivo?: StringFilter<"Permiso"> | string
    estatus?: StringNullableFilter<"Permiso"> | string | null
    documento_aprobacion_id?: IntNullableFilter<"Permiso"> | number | null
    fecha_registro?: DateTimeNullableFilter<"Permiso"> | Date | string | null
  }

  export type CambioAdscripcionUpsertWithWhereUniqueWithoutDocumento_respaldoInput = {
    where: CambioAdscripcionWhereUniqueInput
    update: XOR<CambioAdscripcionUpdateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedUpdateWithoutDocumento_respaldoInput>
    create: XOR<CambioAdscripcionCreateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedCreateWithoutDocumento_respaldoInput>
  }

  export type CambioAdscripcionUpdateWithWhereUniqueWithoutDocumento_respaldoInput = {
    where: CambioAdscripcionWhereUniqueInput
    data: XOR<CambioAdscripcionUpdateWithoutDocumento_respaldoInput, CambioAdscripcionUncheckedUpdateWithoutDocumento_respaldoInput>
  }

  export type CambioAdscripcionUpdateManyWithWhereWithoutDocumento_respaldoInput = {
    where: CambioAdscripcionScalarWhereInput
    data: XOR<CambioAdscripcionUpdateManyMutationInput, CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoInput>
  }

  export type CambioAdscripcionScalarWhereInput = {
    AND?: CambioAdscripcionScalarWhereInput | CambioAdscripcionScalarWhereInput[]
    OR?: CambioAdscripcionScalarWhereInput[]
    NOT?: CambioAdscripcionScalarWhereInput | CambioAdscripcionScalarWhereInput[]
    id_cambio?: IntFilter<"CambioAdscripcion"> | number
    id_trabajador?: IntFilter<"CambioAdscripcion"> | number
    adscripcion_anterior?: StringFilter<"CambioAdscripcion"> | string
    adscripcion_nueva?: StringFilter<"CambioAdscripcion"> | string
    fecha_cambio?: DateTimeFilter<"CambioAdscripcion"> | Date | string
    motivo?: StringFilter<"CambioAdscripcion"> | string
    documento_respaldo_id?: IntNullableFilter<"CambioAdscripcion"> | number | null
    usuario_registro?: StringNullableFilter<"CambioAdscripcion"> | string | null
    fecha_registro?: DateTimeNullableFilter<"CambioAdscripcion"> | Date | string | null
  }

  export type TrabajadorSntiCreateWithoutHijosInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutHijosInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutHijosInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutHijosInput, TrabajadorSntiUncheckedCreateWithoutHijosInput>
  }

  export type DocumentoCreateWithoutHijosInput = {
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutDocumentosInput
    permisos?: PermisoCreateNestedManyWithoutDocumento_aprobacionInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoUncheckedCreateWithoutHijosInput = {
    id_documento?: number
    id_trabajador: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    permisos?: PermisoUncheckedCreateNestedManyWithoutDocumento_aprobacionInput
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoCreateOrConnectWithoutHijosInput = {
    where: DocumentoWhereUniqueInput
    create: XOR<DocumentoCreateWithoutHijosInput, DocumentoUncheckedCreateWithoutHijosInput>
  }

  export type TrabajadorSntiUpsertWithoutHijosInput = {
    update: XOR<TrabajadorSntiUpdateWithoutHijosInput, TrabajadorSntiUncheckedUpdateWithoutHijosInput>
    create: XOR<TrabajadorSntiCreateWithoutHijosInput, TrabajadorSntiUncheckedCreateWithoutHijosInput>
    where?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiUpdateToOneWithWhereWithoutHijosInput = {
    where?: TrabajadorSntiWhereInput
    data: XOR<TrabajadorSntiUpdateWithoutHijosInput, TrabajadorSntiUncheckedUpdateWithoutHijosInput>
  }

  export type TrabajadorSntiUpdateWithoutHijosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutHijosInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type DocumentoUpsertWithoutHijosInput = {
    update: XOR<DocumentoUpdateWithoutHijosInput, DocumentoUncheckedUpdateWithoutHijosInput>
    create: XOR<DocumentoCreateWithoutHijosInput, DocumentoUncheckedCreateWithoutHijosInput>
    where?: DocumentoWhereInput
  }

  export type DocumentoUpdateToOneWithWhereWithoutHijosInput = {
    where?: DocumentoWhereInput
    data: XOR<DocumentoUpdateWithoutHijosInput, DocumentoUncheckedUpdateWithoutHijosInput>
  }

  export type DocumentoUpdateWithoutHijosInput = {
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutDocumentosNestedInput
    permisos?: PermisoUpdateManyWithoutDocumento_aprobacionNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type DocumentoUncheckedUpdateWithoutHijosInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    permisos?: PermisoUncheckedUpdateManyWithoutDocumento_aprobacionNestedInput
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type TrabajadorSntiCreateWithoutPermisosInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutPermisosInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutPermisosInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutPermisosInput, TrabajadorSntiUncheckedCreateWithoutPermisosInput>
  }

  export type DocumentoCreateWithoutPermisosInput = {
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    trabajador: TrabajadorSntiCreateNestedOneWithoutDocumentosInput
    hijos?: HijoCreateNestedManyWithoutActa_nacimientoInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoUncheckedCreateWithoutPermisosInput = {
    id_documento?: number
    id_trabajador: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    hijos?: HijoUncheckedCreateNestedManyWithoutActa_nacimientoInput
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoCreateOrConnectWithoutPermisosInput = {
    where: DocumentoWhereUniqueInput
    create: XOR<DocumentoCreateWithoutPermisosInput, DocumentoUncheckedCreateWithoutPermisosInput>
  }

  export type TrabajadorSntiUpsertWithoutPermisosInput = {
    update: XOR<TrabajadorSntiUpdateWithoutPermisosInput, TrabajadorSntiUncheckedUpdateWithoutPermisosInput>
    create: XOR<TrabajadorSntiCreateWithoutPermisosInput, TrabajadorSntiUncheckedCreateWithoutPermisosInput>
    where?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiUpdateToOneWithWhereWithoutPermisosInput = {
    where?: TrabajadorSntiWhereInput
    data: XOR<TrabajadorSntiUpdateWithoutPermisosInput, TrabajadorSntiUncheckedUpdateWithoutPermisosInput>
  }

  export type TrabajadorSntiUpdateWithoutPermisosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutPermisosInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type DocumentoUpsertWithoutPermisosInput = {
    update: XOR<DocumentoUpdateWithoutPermisosInput, DocumentoUncheckedUpdateWithoutPermisosInput>
    create: XOR<DocumentoCreateWithoutPermisosInput, DocumentoUncheckedCreateWithoutPermisosInput>
    where?: DocumentoWhereInput
  }

  export type DocumentoUpdateToOneWithWhereWithoutPermisosInput = {
    where?: DocumentoWhereInput
    data: XOR<DocumentoUpdateWithoutPermisosInput, DocumentoUncheckedUpdateWithoutPermisosInput>
  }

  export type DocumentoUpdateWithoutPermisosInput = {
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutDocumentosNestedInput
    hijos?: HijoUpdateManyWithoutActa_nacimientoNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type DocumentoUncheckedUpdateWithoutPermisosInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hijos?: HijoUncheckedUpdateManyWithoutActa_nacimientoNestedInput
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type TrabajadorSntiCreateWithoutSancionesInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutSancionesInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutSancionesInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutSancionesInput, TrabajadorSntiUncheckedCreateWithoutSancionesInput>
  }

  export type TrabajadorSntiUpsertWithoutSancionesInput = {
    update: XOR<TrabajadorSntiUpdateWithoutSancionesInput, TrabajadorSntiUncheckedUpdateWithoutSancionesInput>
    create: XOR<TrabajadorSntiCreateWithoutSancionesInput, TrabajadorSntiUncheckedCreateWithoutSancionesInput>
    where?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiUpdateToOneWithWhereWithoutSancionesInput = {
    where?: TrabajadorSntiWhereInput
    data: XOR<TrabajadorSntiUpdateWithoutSancionesInput, TrabajadorSntiUncheckedUpdateWithoutSancionesInput>
  }

  export type TrabajadorSntiUpdateWithoutSancionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutSancionesInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiCreateWithoutSeccionInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutSeccionInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutSeccionInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutSeccionInput, TrabajadorSntiUncheckedCreateWithoutSeccionInput>
  }

  export type TrabajadorSntiCreateManySeccionInputEnvelope = {
    data: TrabajadorSntiCreateManySeccionInput | TrabajadorSntiCreateManySeccionInput[]
    skipDuplicates?: boolean
  }

  export type TrabajadorSntiUpsertWithWhereUniqueWithoutSeccionInput = {
    where: TrabajadorSntiWhereUniqueInput
    update: XOR<TrabajadorSntiUpdateWithoutSeccionInput, TrabajadorSntiUncheckedUpdateWithoutSeccionInput>
    create: XOR<TrabajadorSntiCreateWithoutSeccionInput, TrabajadorSntiUncheckedCreateWithoutSeccionInput>
  }

  export type TrabajadorSntiUpdateWithWhereUniqueWithoutSeccionInput = {
    where: TrabajadorSntiWhereUniqueInput
    data: XOR<TrabajadorSntiUpdateWithoutSeccionInput, TrabajadorSntiUncheckedUpdateWithoutSeccionInput>
  }

  export type TrabajadorSntiUpdateManyWithWhereWithoutSeccionInput = {
    where: TrabajadorSntiScalarWhereInput
    data: XOR<TrabajadorSntiUpdateManyMutationInput, TrabajadorSntiUncheckedUpdateManyWithoutSeccionInput>
  }

  export type TrabajadorSntiScalarWhereInput = {
    AND?: TrabajadorSntiScalarWhereInput | TrabajadorSntiScalarWhereInput[]
    OR?: TrabajadorSntiScalarWhereInput[]
    NOT?: TrabajadorSntiScalarWhereInput | TrabajadorSntiScalarWhereInput[]
    id_trabajador?: IntFilter<"TrabajadorSnti"> | number
    nombre?: StringFilter<"TrabajadorSnti"> | string
    apellido_paterno?: StringFilter<"TrabajadorSnti"> | string
    apellido_materno?: StringNullableFilter<"TrabajadorSnti"> | string | null
    fecha_nacimiento?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    sexo?: StringFilter<"TrabajadorSnti"> | string
    curp?: StringFilter<"TrabajadorSnti"> | string
    rfc?: StringFilter<"TrabajadorSnti"> | string
    email?: StringFilter<"TrabajadorSnti"> | string
    situacion_sentimental?: StringNullableFilter<"TrabajadorSnti"> | string | null
    numero_hijos?: IntFilter<"TrabajadorSnti"> | number
    numero_empleado?: StringFilter<"TrabajadorSnti"> | string
    numero_plaza?: StringFilter<"TrabajadorSnti"> | string
    fecha_ingreso?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    fecha_ingreso_gobierno?: DateTimeFilter<"TrabajadorSnti"> | Date | string
    nivel_puesto?: StringFilter<"TrabajadorSnti"> | string
    nombre_puesto?: StringFilter<"TrabajadorSnti"> | string
    puesto_inpi?: StringNullableFilter<"TrabajadorSnti"> | string | null
    adscripcion?: StringFilter<"TrabajadorSnti"> | string
    id_seccion?: IntFilter<"TrabajadorSnti"> | number
    nivel_estudios?: StringNullableFilter<"TrabajadorSnti"> | string | null
    institucion_estudios?: StringNullableFilter<"TrabajadorSnti"> | string | null
    certificado_estudios?: BoolNullableFilter<"TrabajadorSnti"> | boolean | null
    plaza_base?: StringNullableFilter<"TrabajadorSnti"> | string | null
    fecha_actualizacion?: DateTimeNullableFilter<"TrabajadorSnti"> | Date | string | null
  }

  export type SeccionSntiCreateWithoutTrabajadoresInput = {
    nombre_seccion: string
    descripcion?: string | null
  }

  export type SeccionSntiUncheckedCreateWithoutTrabajadoresInput = {
    id_seccion?: number
    nombre_seccion: string
    descripcion?: string | null
  }

  export type SeccionSntiCreateOrConnectWithoutTrabajadoresInput = {
    where: SeccionSntiWhereUniqueInput
    create: XOR<SeccionSntiCreateWithoutTrabajadoresInput, SeccionSntiUncheckedCreateWithoutTrabajadoresInput>
  }

  export type CambioAdscripcionCreateWithoutTrabajadorInput = {
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
    documento_respaldo?: DocumentoCreateNestedOneWithoutCambios_adscripcionInput
  }

  export type CambioAdscripcionUncheckedCreateWithoutTrabajadorInput = {
    id_cambio?: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    documento_respaldo_id?: number | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type CambioAdscripcionCreateOrConnectWithoutTrabajadorInput = {
    where: CambioAdscripcionWhereUniqueInput
    create: XOR<CambioAdscripcionCreateWithoutTrabajadorInput, CambioAdscripcionUncheckedCreateWithoutTrabajadorInput>
  }

  export type CambioAdscripcionCreateManyTrabajadorInputEnvelope = {
    data: CambioAdscripcionCreateManyTrabajadorInput | CambioAdscripcionCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type DocumentoCreateWithoutTrabajadorInput = {
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    hijos?: HijoCreateNestedManyWithoutActa_nacimientoInput
    permisos?: PermisoCreateNestedManyWithoutDocumento_aprobacionInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoUncheckedCreateWithoutTrabajadorInput = {
    id_documento?: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
    hijos?: HijoUncheckedCreateNestedManyWithoutActa_nacimientoInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutDocumento_aprobacionInput
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutDocumento_respaldoInput
  }

  export type DocumentoCreateOrConnectWithoutTrabajadorInput = {
    where: DocumentoWhereUniqueInput
    create: XOR<DocumentoCreateWithoutTrabajadorInput, DocumentoUncheckedCreateWithoutTrabajadorInput>
  }

  export type DocumentoCreateManyTrabajadorInputEnvelope = {
    data: DocumentoCreateManyTrabajadorInput | DocumentoCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type HijoCreateWithoutTrabajadorInput = {
    nombre_completo: string
    fecha_nacimiento: Date | string
    vigente?: boolean | null
    acta_nacimiento?: DocumentoCreateNestedOneWithoutHijosInput
  }

  export type HijoUncheckedCreateWithoutTrabajadorInput = {
    id_hijo?: number
    nombre_completo: string
    fecha_nacimiento: Date | string
    acta_nacimiento_id?: number | null
    vigente?: boolean | null
  }

  export type HijoCreateOrConnectWithoutTrabajadorInput = {
    where: HijoWhereUniqueInput
    create: XOR<HijoCreateWithoutTrabajadorInput, HijoUncheckedCreateWithoutTrabajadorInput>
  }

  export type HijoCreateManyTrabajadorInputEnvelope = {
    data: HijoCreateManyTrabajadorInput | HijoCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type PermisoCreateWithoutTrabajadorInput = {
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    fecha_registro?: Date | string | null
    documento_aprobacion?: DocumentoCreateNestedOneWithoutPermisosInput
  }

  export type PermisoUncheckedCreateWithoutTrabajadorInput = {
    id_permiso?: number
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    documento_aprobacion_id?: number | null
    fecha_registro?: Date | string | null
  }

  export type PermisoCreateOrConnectWithoutTrabajadorInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutTrabajadorInput, PermisoUncheckedCreateWithoutTrabajadorInput>
  }

  export type PermisoCreateManyTrabajadorInputEnvelope = {
    data: PermisoCreateManyTrabajadorInput | PermisoCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type SancionSntiCreateWithoutTrabajadorInput = {
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionSntiUncheckedCreateWithoutTrabajadorInput = {
    id_sancion?: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionSntiCreateOrConnectWithoutTrabajadorInput = {
    where: SancionSntiWhereUniqueInput
    create: XOR<SancionSntiCreateWithoutTrabajadorInput, SancionSntiUncheckedCreateWithoutTrabajadorInput>
  }

  export type SancionSntiCreateManyTrabajadorInputEnvelope = {
    data: SancionSntiCreateManyTrabajadorInput | SancionSntiCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutTrabajadorInput = {
    identificador: string
    contraseña_hash: string
    rol?: string
    intentos_fallidos?: number | null
    bloqueado?: boolean | null
    fecha_creacion?: Date | string | null
    ultimo_login?: Date | string | null
    ultimo_cambio_password?: Date | string | null
  }

  export type UsuarioUncheckedCreateWithoutTrabajadorInput = {
    id_usuario?: number
    identificador: string
    contraseña_hash: string
    rol?: string
    intentos_fallidos?: number | null
    bloqueado?: boolean | null
    fecha_creacion?: Date | string | null
    ultimo_login?: Date | string | null
    ultimo_cambio_password?: Date | string | null
  }

  export type UsuarioCreateOrConnectWithoutTrabajadorInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTrabajadorInput, UsuarioUncheckedCreateWithoutTrabajadorInput>
  }

  export type UsuarioCreateManyTrabajadorInputEnvelope = {
    data: UsuarioCreateManyTrabajadorInput | UsuarioCreateManyTrabajadorInput[]
    skipDuplicates?: boolean
  }

  export type SeccionSntiUpsertWithoutTrabajadoresInput = {
    update: XOR<SeccionSntiUpdateWithoutTrabajadoresInput, SeccionSntiUncheckedUpdateWithoutTrabajadoresInput>
    create: XOR<SeccionSntiCreateWithoutTrabajadoresInput, SeccionSntiUncheckedCreateWithoutTrabajadoresInput>
    where?: SeccionSntiWhereInput
  }

  export type SeccionSntiUpdateToOneWithWhereWithoutTrabajadoresInput = {
    where?: SeccionSntiWhereInput
    data: XOR<SeccionSntiUpdateWithoutTrabajadoresInput, SeccionSntiUncheckedUpdateWithoutTrabajadoresInput>
  }

  export type SeccionSntiUpdateWithoutTrabajadoresInput = {
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SeccionSntiUncheckedUpdateWithoutTrabajadoresInput = {
    id_seccion?: IntFieldUpdateOperationsInput | number
    nombre_seccion?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CambioAdscripcionUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: CambioAdscripcionWhereUniqueInput
    update: XOR<CambioAdscripcionUpdateWithoutTrabajadorInput, CambioAdscripcionUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<CambioAdscripcionCreateWithoutTrabajadorInput, CambioAdscripcionUncheckedCreateWithoutTrabajadorInput>
  }

  export type CambioAdscripcionUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: CambioAdscripcionWhereUniqueInput
    data: XOR<CambioAdscripcionUpdateWithoutTrabajadorInput, CambioAdscripcionUncheckedUpdateWithoutTrabajadorInput>
  }

  export type CambioAdscripcionUpdateManyWithWhereWithoutTrabajadorInput = {
    where: CambioAdscripcionScalarWhereInput
    data: XOR<CambioAdscripcionUpdateManyMutationInput, CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type DocumentoUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: DocumentoWhereUniqueInput
    update: XOR<DocumentoUpdateWithoutTrabajadorInput, DocumentoUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<DocumentoCreateWithoutTrabajadorInput, DocumentoUncheckedCreateWithoutTrabajadorInput>
  }

  export type DocumentoUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: DocumentoWhereUniqueInput
    data: XOR<DocumentoUpdateWithoutTrabajadorInput, DocumentoUncheckedUpdateWithoutTrabajadorInput>
  }

  export type DocumentoUpdateManyWithWhereWithoutTrabajadorInput = {
    where: DocumentoScalarWhereInput
    data: XOR<DocumentoUpdateManyMutationInput, DocumentoUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type DocumentoScalarWhereInput = {
    AND?: DocumentoScalarWhereInput | DocumentoScalarWhereInput[]
    OR?: DocumentoScalarWhereInput[]
    NOT?: DocumentoScalarWhereInput | DocumentoScalarWhereInput[]
    id_documento?: IntFilter<"Documento"> | number
    id_trabajador?: IntFilter<"Documento"> | number
    tipo_documento?: StringFilter<"Documento"> | string
    metadata?: JsonNullableFilter<"Documento">
    hash_archivo?: StringFilter<"Documento"> | string
    nombre_archivo?: StringFilter<"Documento"> | string
    descripcion?: StringNullableFilter<"Documento"> | string | null
    tipo_archivo?: StringNullableFilter<"Documento"> | string | null
    ruta_almacenamiento?: StringFilter<"Documento"> | string
    fecha_subida?: DateTimeNullableFilter<"Documento"> | Date | string | null
    tamano_bytes?: BigIntFilter<"Documento"> | bigint | number
    es_publico?: BoolNullableFilter<"Documento"> | boolean | null
  }

  export type HijoUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: HijoWhereUniqueInput
    update: XOR<HijoUpdateWithoutTrabajadorInput, HijoUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<HijoCreateWithoutTrabajadorInput, HijoUncheckedCreateWithoutTrabajadorInput>
  }

  export type HijoUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: HijoWhereUniqueInput
    data: XOR<HijoUpdateWithoutTrabajadorInput, HijoUncheckedUpdateWithoutTrabajadorInput>
  }

  export type HijoUpdateManyWithWhereWithoutTrabajadorInput = {
    where: HijoScalarWhereInput
    data: XOR<HijoUpdateManyMutationInput, HijoUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type PermisoUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: PermisoWhereUniqueInput
    update: XOR<PermisoUpdateWithoutTrabajadorInput, PermisoUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<PermisoCreateWithoutTrabajadorInput, PermisoUncheckedCreateWithoutTrabajadorInput>
  }

  export type PermisoUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: PermisoWhereUniqueInput
    data: XOR<PermisoUpdateWithoutTrabajadorInput, PermisoUncheckedUpdateWithoutTrabajadorInput>
  }

  export type PermisoUpdateManyWithWhereWithoutTrabajadorInput = {
    where: PermisoScalarWhereInput
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type SancionSntiUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: SancionSntiWhereUniqueInput
    update: XOR<SancionSntiUpdateWithoutTrabajadorInput, SancionSntiUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<SancionSntiCreateWithoutTrabajadorInput, SancionSntiUncheckedCreateWithoutTrabajadorInput>
  }

  export type SancionSntiUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: SancionSntiWhereUniqueInput
    data: XOR<SancionSntiUpdateWithoutTrabajadorInput, SancionSntiUncheckedUpdateWithoutTrabajadorInput>
  }

  export type SancionSntiUpdateManyWithWhereWithoutTrabajadorInput = {
    where: SancionSntiScalarWhereInput
    data: XOR<SancionSntiUpdateManyMutationInput, SancionSntiUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type SancionSntiScalarWhereInput = {
    AND?: SancionSntiScalarWhereInput | SancionSntiScalarWhereInput[]
    OR?: SancionSntiScalarWhereInput[]
    NOT?: SancionSntiScalarWhereInput | SancionSntiScalarWhereInput[]
    id_sancion?: IntFilter<"SancionSnti"> | number
    id_trabajador?: IntFilter<"SancionSnti"> | number
    tipo_sancion?: StringFilter<"SancionSnti"> | string
    descripcion?: StringFilter<"SancionSnti"> | string
    fecha_aplicacion?: DateTimeFilter<"SancionSnti"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"SancionSnti"> | Date | string | null
    estatus?: StringNullableFilter<"SancionSnti"> | string | null
    usuario_registro?: StringNullableFilter<"SancionSnti"> | string | null
    fecha_registro?: DateTimeNullableFilter<"SancionSnti"> | Date | string | null
  }

  export type UsuarioUpsertWithWhereUniqueWithoutTrabajadorInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutTrabajadorInput, UsuarioUncheckedUpdateWithoutTrabajadorInput>
    create: XOR<UsuarioCreateWithoutTrabajadorInput, UsuarioUncheckedCreateWithoutTrabajadorInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutTrabajadorInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutTrabajadorInput, UsuarioUncheckedUpdateWithoutTrabajadorInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutTrabajadorInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutTrabajadorInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    id_trabajador?: IntNullableFilter<"Usuario"> | number | null
    identificador?: StringFilter<"Usuario"> | string
    contraseña_hash?: StringFilter<"Usuario"> | string
    rol?: StringFilter<"Usuario"> | string
    intentos_fallidos?: IntNullableFilter<"Usuario"> | number | null
    bloqueado?: BoolNullableFilter<"Usuario"> | boolean | null
    fecha_creacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    ultimo_cambio_password?: DateTimeNullableFilter<"Usuario"> | Date | string | null
  }

  export type TrabajadorSntiCreateWithoutUsuariosInput = {
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    seccion: SeccionSntiCreateNestedOneWithoutTrabajadoresInput
    cambios_adscripcion?: CambioAdscripcionCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiUncheckedCreateWithoutUsuariosInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    id_seccion: number
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedCreateNestedManyWithoutTrabajadorInput
    documentos?: DocumentoUncheckedCreateNestedManyWithoutTrabajadorInput
    hijos?: HijoUncheckedCreateNestedManyWithoutTrabajadorInput
    permisos?: PermisoUncheckedCreateNestedManyWithoutTrabajadorInput
    sanciones?: SancionSntiUncheckedCreateNestedManyWithoutTrabajadorInput
  }

  export type TrabajadorSntiCreateOrConnectWithoutUsuariosInput = {
    where: TrabajadorSntiWhereUniqueInput
    create: XOR<TrabajadorSntiCreateWithoutUsuariosInput, TrabajadorSntiUncheckedCreateWithoutUsuariosInput>
  }

  export type TrabajadorSntiUpsertWithoutUsuariosInput = {
    update: XOR<TrabajadorSntiUpdateWithoutUsuariosInput, TrabajadorSntiUncheckedUpdateWithoutUsuariosInput>
    create: XOR<TrabajadorSntiCreateWithoutUsuariosInput, TrabajadorSntiUncheckedCreateWithoutUsuariosInput>
    where?: TrabajadorSntiWhereInput
  }

  export type TrabajadorSntiUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: TrabajadorSntiWhereInput
    data: XOR<TrabajadorSntiUpdateWithoutUsuariosInput, TrabajadorSntiUncheckedUpdateWithoutUsuariosInput>
  }

  export type TrabajadorSntiUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seccion?: SeccionSntiUpdateOneRequiredWithoutTrabajadoresNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutUsuariosInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    id_seccion?: IntFieldUpdateOperationsInput | number
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorCreateManySeccionInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type TrabajadorUpdateWithoutSeccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sanciones?: SancionUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorUncheckedUpdateWithoutSeccionInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sanciones?: SancionUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorUncheckedUpdateManyWithoutSeccionInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionCreateManyTrabajadorInput = {
    id_sancion?: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type SancionUpdateWithoutTrabajadorInput = {
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionUncheckedUpdateWithoutTrabajadorInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionUncheckedUpdateManyWithoutTrabajadorInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HijoCreateManyActa_nacimientoInput = {
    id_hijo?: number
    id_trabajador: number
    nombre_completo: string
    fecha_nacimiento: Date | string
    vigente?: boolean | null
  }

  export type PermisoCreateManyDocumento_aprobacionInput = {
    id_permiso?: number
    id_trabajador: number
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    fecha_registro?: Date | string | null
  }

  export type CambioAdscripcionCreateManyDocumento_respaldoInput = {
    id_cambio?: number
    id_trabajador: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type HijoUpdateWithoutActa_nacimientoInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutHijosNestedInput
  }

  export type HijoUncheckedUpdateWithoutActa_nacimientoInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type HijoUncheckedUpdateManyWithoutActa_nacimientoInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PermisoUpdateWithoutDocumento_aprobacionInput = {
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutPermisosNestedInput
  }

  export type PermisoUncheckedUpdateWithoutDocumento_aprobacionInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoUncheckedUpdateManyWithoutDocumento_aprobacionInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionUpdateWithoutDocumento_respaldoInput = {
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trabajador?: TrabajadorSntiUpdateOneRequiredWithoutCambios_adscripcionNestedInput
  }

  export type CambioAdscripcionUncheckedUpdateWithoutDocumento_respaldoInput = {
    id_cambio?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoInput = {
    id_cambio?: IntFieldUpdateOperationsInput | number
    id_trabajador?: IntFieldUpdateOperationsInput | number
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TrabajadorSntiCreateManySeccionInput = {
    id_trabajador?: number
    nombre: string
    apellido_paterno: string
    apellido_materno?: string | null
    fecha_nacimiento: Date | string
    sexo: string
    curp: string
    rfc: string
    email: string
    situacion_sentimental?: string | null
    numero_hijos?: number
    numero_empleado: string
    numero_plaza: string
    fecha_ingreso: Date | string
    fecha_ingreso_gobierno: Date | string
    nivel_puesto: string
    nombre_puesto: string
    puesto_inpi?: string | null
    adscripcion: string
    nivel_estudios?: string | null
    institucion_estudios?: string | null
    certificado_estudios?: boolean | null
    plaza_base?: string | null
    fecha_actualizacion?: Date | string | null
  }

  export type TrabajadorSntiUpdateWithoutSeccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateWithoutSeccionInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorNestedInput
    documentos?: DocumentoUncheckedUpdateManyWithoutTrabajadorNestedInput
    hijos?: HijoUncheckedUpdateManyWithoutTrabajadorNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutTrabajadorNestedInput
    sanciones?: SancionSntiUncheckedUpdateManyWithoutTrabajadorNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutTrabajadorNestedInput
  }

  export type TrabajadorSntiUncheckedUpdateManyWithoutSeccionInput = {
    id_trabajador?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido_paterno?: StringFieldUpdateOperationsInput | string
    apellido_materno?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    sexo?: StringFieldUpdateOperationsInput | string
    curp?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    situacion_sentimental?: NullableStringFieldUpdateOperationsInput | string | null
    numero_hijos?: IntFieldUpdateOperationsInput | number
    numero_empleado?: StringFieldUpdateOperationsInput | string
    numero_plaza?: StringFieldUpdateOperationsInput | string
    fecha_ingreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_ingreso_gobierno?: DateTimeFieldUpdateOperationsInput | Date | string
    nivel_puesto?: StringFieldUpdateOperationsInput | string
    nombre_puesto?: StringFieldUpdateOperationsInput | string
    puesto_inpi?: NullableStringFieldUpdateOperationsInput | string | null
    adscripcion?: StringFieldUpdateOperationsInput | string
    nivel_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    institucion_estudios?: NullableStringFieldUpdateOperationsInput | string | null
    certificado_estudios?: NullableBoolFieldUpdateOperationsInput | boolean | null
    plaza_base?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_actualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionCreateManyTrabajadorInput = {
    id_cambio?: number
    adscripcion_anterior: string
    adscripcion_nueva: string
    fecha_cambio: Date | string
    motivo: string
    documento_respaldo_id?: number | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type DocumentoCreateManyTrabajadorInput = {
    id_documento?: number
    tipo_documento: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo: string
    nombre_archivo: string
    descripcion?: string | null
    tipo_archivo?: string | null
    ruta_almacenamiento: string
    fecha_subida?: Date | string | null
    tamano_bytes: bigint | number
    es_publico?: boolean | null
  }

  export type HijoCreateManyTrabajadorInput = {
    id_hijo?: number
    nombre_completo: string
    fecha_nacimiento: Date | string
    acta_nacimiento_id?: number | null
    vigente?: boolean | null
  }

  export type PermisoCreateManyTrabajadorInput = {
    id_permiso?: number
    tipo_permiso?: string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    motivo: string
    estatus?: string | null
    documento_aprobacion_id?: number | null
    fecha_registro?: Date | string | null
  }

  export type SancionSntiCreateManyTrabajadorInput = {
    id_sancion?: number
    tipo_sancion: string
    descripcion: string
    fecha_aplicacion: Date | string
    fecha_fin?: Date | string | null
    estatus?: string | null
    usuario_registro?: string | null
    fecha_registro?: Date | string | null
  }

  export type UsuarioCreateManyTrabajadorInput = {
    id_usuario?: number
    identificador: string
    contraseña_hash: string
    rol?: string
    intentos_fallidos?: number | null
    bloqueado?: boolean | null
    fecha_creacion?: Date | string | null
    ultimo_login?: Date | string | null
    ultimo_cambio_password?: Date | string | null
  }

  export type CambioAdscripcionUpdateWithoutTrabajadorInput = {
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documento_respaldo?: DocumentoUpdateOneWithoutCambios_adscripcionNestedInput
  }

  export type CambioAdscripcionUncheckedUpdateWithoutTrabajadorInput = {
    id_cambio?: IntFieldUpdateOperationsInput | number
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    documento_respaldo_id?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CambioAdscripcionUncheckedUpdateManyWithoutTrabajadorInput = {
    id_cambio?: IntFieldUpdateOperationsInput | number
    adscripcion_anterior?: StringFieldUpdateOperationsInput | string
    adscripcion_nueva?: StringFieldUpdateOperationsInput | string
    fecha_cambio?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    documento_respaldo_id?: NullableIntFieldUpdateOperationsInput | number | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DocumentoUpdateWithoutTrabajadorInput = {
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hijos?: HijoUpdateManyWithoutActa_nacimientoNestedInput
    permisos?: PermisoUpdateManyWithoutDocumento_aprobacionNestedInput
    cambios_adscripcion?: CambioAdscripcionUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type DocumentoUncheckedUpdateWithoutTrabajadorInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
    hijos?: HijoUncheckedUpdateManyWithoutActa_nacimientoNestedInput
    permisos?: PermisoUncheckedUpdateManyWithoutDocumento_aprobacionNestedInput
    cambios_adscripcion?: CambioAdscripcionUncheckedUpdateManyWithoutDocumento_respaldoNestedInput
  }

  export type DocumentoUncheckedUpdateManyWithoutTrabajadorInput = {
    id_documento?: IntFieldUpdateOperationsInput | number
    tipo_documento?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    hash_archivo?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_archivo?: NullableStringFieldUpdateOperationsInput | string | null
    ruta_almacenamiento?: StringFieldUpdateOperationsInput | string
    fecha_subida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tamano_bytes?: BigIntFieldUpdateOperationsInput | bigint | number
    es_publico?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type HijoUpdateWithoutTrabajadorInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
    acta_nacimiento?: DocumentoUpdateOneWithoutHijosNestedInput
  }

  export type HijoUncheckedUpdateWithoutTrabajadorInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    acta_nacimiento_id?: NullableIntFieldUpdateOperationsInput | number | null
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type HijoUncheckedUpdateManyWithoutTrabajadorInput = {
    id_hijo?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    acta_nacimiento_id?: NullableIntFieldUpdateOperationsInput | number | null
    vigente?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PermisoUpdateWithoutTrabajadorInput = {
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documento_aprobacion?: DocumentoUpdateOneWithoutPermisosNestedInput
  }

  export type PermisoUncheckedUpdateWithoutTrabajadorInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    documento_aprobacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoUncheckedUpdateManyWithoutTrabajadorInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    tipo_permiso?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: StringFieldUpdateOperationsInput | string
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    documento_aprobacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionSntiUpdateWithoutTrabajadorInput = {
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionSntiUncheckedUpdateWithoutTrabajadorInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SancionSntiUncheckedUpdateManyWithoutTrabajadorInput = {
    id_sancion?: IntFieldUpdateOperationsInput | number
    tipo_sancion?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_aplicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estatus?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_registro?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_registro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUpdateWithoutTrabajadorInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateWithoutTrabajadorInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyWithoutTrabajadorInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    intentos_fallidos?: NullableIntFieldUpdateOperationsInput | number | null
    bloqueado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_creacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimo_cambio_password?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}